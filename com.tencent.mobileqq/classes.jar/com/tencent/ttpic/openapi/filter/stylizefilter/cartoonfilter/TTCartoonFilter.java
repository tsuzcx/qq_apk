package com.tencent.ttpic.openapi.filter.stylizefilter.cartoonfilter;

import com.tencent.aekit.openrender.UniformParam.FloatParam;
import com.tencent.aekit.openrender.UniformParam.TextureParam;
import com.tencent.aekit.openrender.internal.VideoFilterBase;

public class TTCartoonFilter
  extends VideoFilterBase
{
  private static final String FRAGMENT_SHADER = "precision highp float;\n uniform sampler2D inputImageTexture;\n uniform sampler2D inputImageTexture2;\n varying vec2 textureCoordinate;\n const vec3 rgb2gray = vec3(0.3, 0.59, 0.11);\n const int q = 8;\n const float phiQ = 3.4;\n uniform float useHSVQuantization;\n\n vec3 rgb2xyz( vec3 c ) {\n     vec3 tmp;\n     tmp.x = ( c.r > 0.04045 ) ? pow( ( c.r + 0.055 ) / 1.055, 2.4 ) : c.r / 12.92;\n     tmp.y = ( c.g > 0.04045 ) ? pow( ( c.g + 0.055 ) / 1.055, 2.4 ) : c.g / 12.92;\n     tmp.z = ( c.b > 0.04045 ) ? pow( ( c.b + 0.055 ) / 1.055, 2.4 ) : c.b / 12.92;\n     return 100.0 * tmp *\n         mat3( 0.4124, 0.3576, 0.1805,\n               0.2126, 0.7152, 0.0722,\n               0.0193, 0.1192, 0.9505 );\n }\n\n vec3 xyz2lab( vec3 c ) {\n     vec3 n = c / vec3( 95.047, 100, 108.883 );\n     vec3 v;\n     v.x = ( n.x > 0.008856 ) ? pow( n.x, 1.0 / 3.0 ) : ( 7.787 * n.x ) + ( 16.0 / 116.0 );\n     v.y = ( n.y > 0.008856 ) ? pow( n.y, 1.0 / 3.0 ) : ( 7.787 * n.y ) + ( 16.0 / 116.0 );\n     v.z = ( n.z > 0.008856 ) ? pow( n.z, 1.0 / 3.0 ) : ( 7.787 * n.z ) + ( 16.0 / 116.0 );\n     return vec3(( 116.0 * v.y ) - 16.0, 500.0 * ( v.x - v.y ), 200.0 * ( v.y - v.z ));\n }\n\n vec3 rgb2lab(vec3 c) {\n     vec3 lab = xyz2lab( rgb2xyz( c ) );\n     return vec3( lab.x / 100.0, 0.5 + 0.5 * ( lab.y / 127.0 ), 0.5 + 0.5 * ( lab.z / 127.0 ));\n }\n\n vec3 lab2xyz( vec3 c ) {\n     float fy = ( c.x + 16.0 ) / 116.0;\n     float fx = c.y / 500.0 + fy;\n     float fz = fy - c.z / 200.0;\n     return vec3(\n          95.047 * (( fx > 0.206897 ) ? fx * fx * fx : ( fx - 16.0 / 116.0 ) / 7.787),\n         100.000 * (( fy > 0.206897 ) ? fy * fy * fy : ( fy - 16.0 / 116.0 ) / 7.787),\n         108.883 * (( fz > 0.206897 ) ? fz * fz * fz : ( fz - 16.0 / 116.0 ) / 7.787)\n     );\n }\n\n vec3 xyz2rgb( vec3 c ) {\n     vec3 v =  c / 100.0 * mat3(\n         3.2406, -1.5372, -0.4986,\n         -0.9689, 1.8758, 0.0415,\n         0.0557, -0.2040, 1.0570\n     );\n     vec3 r;\n     r.x = ( v.r > 0.0031308 ) ? (( 1.055 * pow( v.r, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.r;\n     r.y = ( v.g > 0.0031308 ) ? (( 1.055 * pow( v.g, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.g;\n     r.z = ( v.b > 0.0031308 ) ? (( 1.055 * pow( v.b, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.b;\n     return r;\n }\n\n vec3 lab2rgb(vec3 c) {\n     return xyz2rgb( lab2xyz( vec3(100.0 * c.x, 2.0 * 127.0 * (c.y - 0.5), 2.0 * 127.0 * (c.z - 0.5)) ) );\n }\n\n  vec3 rgb2hsv(vec3 c)\n {\n     vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n     vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n     vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n     \n     float d = q.x - min(q.w, q.y);\n     float e = 1.0e-10;\n     return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n }\n  \n vec3 hsv2rgb(vec3 c)\n {\n     vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n     vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n     return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n }\n\n void main() {\n     vec4 originColor = texture2D(inputImageTexture, textureCoordinate);\n     vec3 srcBlur = originColor.rgb;\n     float edge = texture2D(inputImageTexture2, textureCoordinate).r;\n     float qn = 0.0;\n     float qs = 0.0;\n     vec4 resultColor = vec4(0);\n\n     if (useHSVQuantization > 0.01) {\n        vec3 hsv = rgb2hsv(srcBlur);\n        qn = floor(hsv.x * float(q) + 0.5) / float(q);\n        qs = smoothstep(-2.0, 2.0, phiQ * (hsv.x - qn) * 100.0) - 0.5;\n        hsv.x = qn + qs / float(q);\n        vec3 rgb = hsv2rgb(hsv);\n        resultColor = vec4(mix(vec3(0.0), rgb, edge), originColor.a);\n    } else {\n        vec3 lab = rgb2lab(srcBlur);\n        qn = floor(lab.x*float(q)+0.5)/float(q);\n        qs = smoothstep(-2., 2., phiQ*(lab.x-qn)*100.)-0.5;\n        lab.x = qn + qs/float(q);\n        vec3 rgb = lab2rgb(lab);\n        resultColor = vec4(mix(vec3(0.), rgb, edge), originColor.a);\n    }\n    \n    gl_FragColor = resultColor;\n\n }";
  private static final String VERTEX_SHADER = "precision highp float;\n attribute vec4 position;\n attribute vec4 inputTextureCoordinate;\n varying vec2 textureCoordinate;\n \n void main(void) {\n     gl_Position = position;\n     textureCoordinate = inputTextureCoordinate.xy;\n }";
  
  public TTCartoonFilter()
  {
    super("precision highp float;\n attribute vec4 position;\n attribute vec4 inputTextureCoordinate;\n varying vec2 textureCoordinate;\n \n void main(void) {\n     gl_Position = position;\n     textureCoordinate = inputTextureCoordinate.xy;\n }", "precision highp float;\n uniform sampler2D inputImageTexture;\n uniform sampler2D inputImageTexture2;\n varying vec2 textureCoordinate;\n const vec3 rgb2gray = vec3(0.3, 0.59, 0.11);\n const int q = 8;\n const float phiQ = 3.4;\n uniform float useHSVQuantization;\n\n vec3 rgb2xyz( vec3 c ) {\n     vec3 tmp;\n     tmp.x = ( c.r > 0.04045 ) ? pow( ( c.r + 0.055 ) / 1.055, 2.4 ) : c.r / 12.92;\n     tmp.y = ( c.g > 0.04045 ) ? pow( ( c.g + 0.055 ) / 1.055, 2.4 ) : c.g / 12.92;\n     tmp.z = ( c.b > 0.04045 ) ? pow( ( c.b + 0.055 ) / 1.055, 2.4 ) : c.b / 12.92;\n     return 100.0 * tmp *\n         mat3( 0.4124, 0.3576, 0.1805,\n               0.2126, 0.7152, 0.0722,\n               0.0193, 0.1192, 0.9505 );\n }\n\n vec3 xyz2lab( vec3 c ) {\n     vec3 n = c / vec3( 95.047, 100, 108.883 );\n     vec3 v;\n     v.x = ( n.x > 0.008856 ) ? pow( n.x, 1.0 / 3.0 ) : ( 7.787 * n.x ) + ( 16.0 / 116.0 );\n     v.y = ( n.y > 0.008856 ) ? pow( n.y, 1.0 / 3.0 ) : ( 7.787 * n.y ) + ( 16.0 / 116.0 );\n     v.z = ( n.z > 0.008856 ) ? pow( n.z, 1.0 / 3.0 ) : ( 7.787 * n.z ) + ( 16.0 / 116.0 );\n     return vec3(( 116.0 * v.y ) - 16.0, 500.0 * ( v.x - v.y ), 200.0 * ( v.y - v.z ));\n }\n\n vec3 rgb2lab(vec3 c) {\n     vec3 lab = xyz2lab( rgb2xyz( c ) );\n     return vec3( lab.x / 100.0, 0.5 + 0.5 * ( lab.y / 127.0 ), 0.5 + 0.5 * ( lab.z / 127.0 ));\n }\n\n vec3 lab2xyz( vec3 c ) {\n     float fy = ( c.x + 16.0 ) / 116.0;\n     float fx = c.y / 500.0 + fy;\n     float fz = fy - c.z / 200.0;\n     return vec3(\n          95.047 * (( fx > 0.206897 ) ? fx * fx * fx : ( fx - 16.0 / 116.0 ) / 7.787),\n         100.000 * (( fy > 0.206897 ) ? fy * fy * fy : ( fy - 16.0 / 116.0 ) / 7.787),\n         108.883 * (( fz > 0.206897 ) ? fz * fz * fz : ( fz - 16.0 / 116.0 ) / 7.787)\n     );\n }\n\n vec3 xyz2rgb( vec3 c ) {\n     vec3 v =  c / 100.0 * mat3(\n         3.2406, -1.5372, -0.4986,\n         -0.9689, 1.8758, 0.0415,\n         0.0557, -0.2040, 1.0570\n     );\n     vec3 r;\n     r.x = ( v.r > 0.0031308 ) ? (( 1.055 * pow( v.r, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.r;\n     r.y = ( v.g > 0.0031308 ) ? (( 1.055 * pow( v.g, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.g;\n     r.z = ( v.b > 0.0031308 ) ? (( 1.055 * pow( v.b, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.b;\n     return r;\n }\n\n vec3 lab2rgb(vec3 c) {\n     return xyz2rgb( lab2xyz( vec3(100.0 * c.x, 2.0 * 127.0 * (c.y - 0.5), 2.0 * 127.0 * (c.z - 0.5)) ) );\n }\n\n  vec3 rgb2hsv(vec3 c)\n {\n     vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n     vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n     vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n     \n     float d = q.x - min(q.w, q.y);\n     float e = 1.0e-10;\n     return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n }\n  \n vec3 hsv2rgb(vec3 c)\n {\n     vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n     vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n     return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n }\n\n void main() {\n     vec4 originColor = texture2D(inputImageTexture, textureCoordinate);\n     vec3 srcBlur = originColor.rgb;\n     float edge = texture2D(inputImageTexture2, textureCoordinate).r;\n     float qn = 0.0;\n     float qs = 0.0;\n     vec4 resultColor = vec4(0);\n\n     if (useHSVQuantization > 0.01) {\n        vec3 hsv = rgb2hsv(srcBlur);\n        qn = floor(hsv.x * float(q) + 0.5) / float(q);\n        qs = smoothstep(-2.0, 2.0, phiQ * (hsv.x - qn) * 100.0) - 0.5;\n        hsv.x = qn + qs / float(q);\n        vec3 rgb = hsv2rgb(hsv);\n        resultColor = vec4(mix(vec3(0.0), rgb, edge), originColor.a);\n    } else {\n        vec3 lab = rgb2lab(srcBlur);\n        qn = floor(lab.x*float(q)+0.5)/float(q);\n        qs = smoothstep(-2., 2., phiQ*(lab.x-qn)*100.)-0.5;\n        lab.x = qn + qs/float(q);\n        vec3 rgb = lab2rgb(lab);\n        resultColor = vec4(mix(vec3(0.), rgb, edge), originColor.a);\n    }\n    \n    gl_FragColor = resultColor;\n\n }");
    setTexture2(0);
  }
  
  public void setTexture2(int paramInt)
  {
    addParam(new UniformParam.TextureParam("inputImageTexture2", paramInt, 33986));
    addParam(new UniformParam.FloatParam("useHSVQuantization", 0.0F));
  }
  
  public void setUseHSVQuantization(boolean paramBoolean)
  {
    float f;
    if (paramBoolean) {
      f = 1.0F;
    } else {
      f = 0.0F;
    }
    addParam(new UniformParam.FloatParam("useHSVQuantization", f));
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mobileqq\classes15.jar
 * Qualified Name:     com.tencent.ttpic.openapi.filter.stylizefilter.cartoonfilter.TTCartoonFilter
 * JD-Core Version:    0.7.0.1
 */