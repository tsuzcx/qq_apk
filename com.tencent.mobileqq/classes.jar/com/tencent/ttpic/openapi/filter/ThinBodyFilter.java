package com.tencent.ttpic.openapi.filter;

import android.graphics.PointF;
import com.tencent.aekit.openrender.UniformParam.FloatParam;
import com.tencent.aekit.openrender.internal.VideoFilterBase;
import com.tencent.filter.BaseFilter;
import java.util.List;

public class ThinBodyFilter
  extends VideoFilterBase
{
  private static final int BODY_POINTS_NUM = 61;
  public static final String FRAGMENT_SHADER = "";
  public static final String TAG = "ThinBodyFilter";
  public static final String VERTEX_SHADER = "mee194x1920234593x1953849961x1702240357x1881158755x1953067887x997093225x1953784074x1969383794x1981834612x540304229x1970302569x2019906676x1701999988x1919905603x1634625892x171664756x1918989834x1735289209x1667593760x1702109234x1920300152x1869562725x1852400754x996504673x1768912394x1634541668x690515561x537557770x1730158624x1867538284x1769236851x1025535599x1936683040x1869182057x537541486x1948262432x1970567269x1866687858x1768190575x1702125934x1763720480x1953853550x1954047316x1130721909x1685221231x1952542313x2037919333x2097809979x2570x";
  private static final int[] leftIndexs = { 13, 14, 15, 16, 17 };
  private static final int[] rightIndexs = { 45, 44, 43, 42, 41 };
  private int currentIdx;
  private boolean hasSeenValid;
  private long lastValidTime;
  private boolean mEnable;
  private ThinBodyFilter.ThinBodyParameters params;
  private PointF[] pointsNormalized;
  private ThinBodyFilter.ThinBodyParameters[] previousParams;
  private boolean[] previousValidFrames;
  private ThinBodyFilter.ThinBodyParameters previousValidParams;
  private boolean showMark;
  private ThinBodyFilter.ThinBodyParameters smoothedParams;
  private int smoothedWithinFrames;
  private float strength;
  private long validDuration;
  
  public ThinBodyFilter()
  {
    super(BaseFilter.nativeDecrypt("mee194x1920234593x1953849961x1702240357x1881158755x1953067887x997093225x1953784074x1969383794x1981834612x540304229x1970302569x2019906676x1701999988x1919905603x1634625892x171664756x1918989834x1735289209x1667593760x1702109234x1920300152x1869562725x1852400754x996504673x1768912394x1634541668x690515561x537557770x1730158624x1867538284x1769236851x1025535599x1936683040x1869182057x537541486x1948262432x1970567269x1866687858x1768190575x1702125934x1763720480x1953853550x1954047316x1130721909x1685221231x1952542313x2037919333x2097809979x2570x"), BaseFilter.nativeDecrypt(""));
    int k = 0;
    this.showMark = false;
    this.mEnable = false;
    this.pointsNormalized = new PointF[61];
    initParams();
    int i = 0;
    Object localObject;
    for (;;)
    {
      localObject = this.pointsNormalized;
      if (i >= localObject.length) {
        break;
      }
      localObject[i] = new PointF();
      i += 1;
    }
    this.smoothedWithinFrames = 2;
    this.currentIdx = 0;
    this.validDuration = 2000L;
    this.hasSeenValid = false;
    if (this.previousValidFrames == null)
    {
      this.previousValidFrames = new boolean[this.smoothedWithinFrames];
      i = 0;
      while (i < this.smoothedWithinFrames)
      {
        this.previousValidFrames[i] = false;
        i += 1;
      }
    }
    if (this.params == null) {
      this.params = new ThinBodyFilter.ThinBodyParameters(this);
    }
    if (this.previousParams == null)
    {
      this.previousParams = new ThinBodyFilter.ThinBodyParameters[this.smoothedWithinFrames];
      i = 0;
      while (i < this.smoothedWithinFrames)
      {
        this.previousParams[i] = new ThinBodyFilter.ThinBodyParameters(this);
        i += 1;
      }
    }
    if (this.smoothedParams == null) {
      this.smoothedParams = new ThinBodyFilter.ThinBodyParameters(this);
    }
    this.smoothedParams.reset();
    int j = 0;
    i = k;
    while (i < this.smoothedWithinFrames)
    {
      k = j;
      if (this.previousValidFrames[i] == 1)
      {
        k = j + 1;
        localObject = this.previousParams[i];
        ThinBodyFilter.ThinBodyParameters localThinBodyParameters = this.smoothedParams;
        localThinBodyParameters.y0 += ((ThinBodyFilter.ThinBodyParameters)localObject).y0;
        localThinBodyParameters = this.smoothedParams;
        localThinBodyParameters.y1 += ((ThinBodyFilter.ThinBodyParameters)localObject).y1;
        localThinBodyParameters = this.smoothedParams;
        localThinBodyParameters.y2 += ((ThinBodyFilter.ThinBodyParameters)localObject).y2;
        localThinBodyParameters = this.smoothedParams;
        localThinBodyParameters.middleLine += ((ThinBodyFilter.ThinBodyParameters)localObject).middleLine;
        localThinBodyParameters = this.smoothedParams;
        localThinBodyParameters.waistWidth += ((ThinBodyFilter.ThinBodyParameters)localObject).waistWidth;
      }
      i += 1;
      j = k;
    }
    if (j > 0)
    {
      localObject = this.smoothedParams;
      float f1 = ((ThinBodyFilter.ThinBodyParameters)localObject).y0;
      float f2 = j;
      ((ThinBodyFilter.ThinBodyParameters)localObject).y0 = (f1 / f2);
      localObject = this.smoothedParams;
      ((ThinBodyFilter.ThinBodyParameters)localObject).y1 /= f2;
      localObject = this.smoothedParams;
      ((ThinBodyFilter.ThinBodyParameters)localObject).y2 /= f2;
      localObject = this.smoothedParams;
      ((ThinBodyFilter.ThinBodyParameters)localObject).middleLine /= f2;
      localObject = this.smoothedParams;
      ((ThinBodyFilter.ThinBodyParameters)localObject).waistWidth /= f2;
    }
  }
  
  private void calculateMiddleLineWithNormalizedPoints()
  {
    int j = leftIndexs.length;
    int i = 0;
    float f3 = 0.0F;
    float f2 = 0.0F;
    float f1 = 0.0F;
    while (i < j)
    {
      Object localObject2 = this.pointsNormalized;
      Object localObject1 = localObject2[leftIndexs[i]];
      localObject2 = localObject2[rightIndexs[i]];
      f3 += (localObject1.x + ((PointF)localObject2).x) / 2.0F;
      f2 += (localObject1.y + ((PointF)localObject2).y) / 2.0F;
      f1 += ((PointF)localObject2).x - localObject1.x;
      i += 1;
    }
    float f4 = (this.pointsNormalized[0].y + this.pointsNormalized[58].y) / 2.0F;
    float f5 = j;
    f3 /= f5;
    f2 /= f5;
    f1 /= f5;
    setMiddleLine(f3);
    setY0(f4);
    setY1(f2 - 0.0F * f1);
    setY2(f2 + 0.4F * f1);
    setWaistWidth(f1);
  }
  
  private void normalizePoints(List<PointF> paramList, int paramInt1, int paramInt2)
  {
    if (paramList != null)
    {
      if (paramList.size() == 0) {
        return;
      }
      int i = 0;
      while (i < paramList.size())
      {
        this.pointsNormalized[i].x = (((PointF)paramList.get(i)).x / paramInt1);
        this.pointsNormalized[i].y = (((PointF)paramList.get(i)).y / paramInt2);
        i += 1;
      }
    }
  }
  
  public void initParams()
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\r\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.provideAs(TypeTransformer.java:780)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.e1expr(TypeTransformer.java:496)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:713)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:698)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.enexpr(TypeTransformer.java:698)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:719)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.exExpr(TypeTransformer.java:703)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.s1stmt(TypeTransformer.java:810)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.sxStmt(TypeTransformer.java:840)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:206)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\r\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\r\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\r\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\r\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\r\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\r\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\r\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\r\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\r\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\r\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\r\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\r\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\r\n");
  }
  
  public boolean isEnable()
  {
    return this.mEnable;
  }
  
  public void setEnable(boolean paramBoolean)
  {
    this.mEnable = paramBoolean;
  }
  
  public void setMiddleLine(float paramFloat)
  {
    ThinBodyFilter.ThinBodyParameters localThinBodyParameters = this.params;
    float f = 0.1F;
    if (paramFloat >= 0.1F) {
      f = paramFloat;
    }
    localThinBodyParameters.middleLine = f;
    localThinBodyParameters = this.params;
    f = paramFloat;
    if (paramFloat > 0.9F) {
      f = 0.9F;
    }
    localThinBodyParameters.middleLine = f;
    addParam(new UniformParam.FloatParam("middleLine", this.params.middleLine));
  }
  
  public void setShowMark(boolean paramBoolean)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: can not merge I and Z\r\n\tat com.googlecode.dex2jar.ir.TypeClass.merge(TypeClass.java:100)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeRef.updateTypeClass(TypeTransformer.java:174)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.copyTypes(TypeTransformer.java:311)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.fixTypes(TypeTransformer.java:226)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer$TypeAnalyze.analyze(TypeTransformer.java:207)\r\n\tat com.googlecode.dex2jar.ir.ts.TypeTransformer.transform(TypeTransformer.java:44)\r\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:162)\r\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\r\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\r\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\r\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\r\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\r\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\r\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\r\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\r\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\r\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\r\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\r\n");
  }
  
  public void setStrength(float paramFloat)
  {
    float f = 1.0F;
    if (paramFloat <= 1.0F) {
      f = paramFloat;
    }
    this.strength = f;
    f = paramFloat;
    if (paramFloat < 0.0F) {
      f = 0.0F;
    }
    this.strength = f;
    addParam(new UniformParam.FloatParam("strength", this.strength));
  }
  
  public void setWaistWidth(float paramFloat)
  {
    ThinBodyFilter.ThinBodyParameters localThinBodyParameters = this.params;
    float f = 0.0F;
    if (paramFloat >= 0.0F) {
      f = paramFloat;
    }
    localThinBodyParameters.waistWidth = f;
    localThinBodyParameters = this.params;
    f = paramFloat;
    if (paramFloat > 1.0F) {
      f = 1.0F;
    }
    localThinBodyParameters.waistWidth = f;
    addParam(new UniformParam.FloatParam("waistWidth", this.params.waistWidth));
  }
  
  public void setY0(float paramFloat)
  {
    ThinBodyFilter.ThinBodyParameters localThinBodyParameters = this.params;
    float f = 0.0F;
    if (paramFloat >= 0.0F) {
      f = paramFloat;
    }
    localThinBodyParameters.y0 = f;
    localThinBodyParameters = this.params;
    f = paramFloat;
    if (paramFloat > localThinBodyParameters.y1) {
      f = this.params.y1;
    }
    localThinBodyParameters.y0 = f;
    addParam(new UniformParam.FloatParam("y0", this.params.y0));
  }
  
  public void setY1(float paramFloat)
  {
    ThinBodyFilter.ThinBodyParameters localThinBodyParameters = this.params;
    if (paramFloat > localThinBodyParameters.y2) {
      f = this.params.y2;
    } else {
      f = paramFloat;
    }
    localThinBodyParameters.y1 = f;
    localThinBodyParameters = this.params;
    float f = paramFloat;
    if (paramFloat < localThinBodyParameters.y0) {
      f = this.params.y0;
    }
    localThinBodyParameters.y1 = f;
    addParam(new UniformParam.FloatParam("y1", this.params.y1));
  }
  
  public void setY2(float paramFloat)
  {
    ThinBodyFilter.ThinBodyParameters localThinBodyParameters = this.params;
    float f = 1.0F;
    if (paramFloat <= 1.0F) {
      f = paramFloat;
    }
    localThinBodyParameters.y2 = f;
    localThinBodyParameters = this.params;
    f = paramFloat;
    if (paramFloat < localThinBodyParameters.y1) {
      f = this.params.y1;
    }
    localThinBodyParameters.y2 = f;
    addParam(new UniformParam.FloatParam("y2", this.params.y2));
  }
  
  public boolean setupBodyPoints(List<PointF> paramList, int paramInt1, int paramInt2)
  {
    boolean bool2 = this.mEnable;
    boolean bool1 = true;
    if (bool2)
    {
      this.currentIdx += 1;
      if (this.currentIdx >= this.smoothedWithinFrames) {
        this.currentIdx = 0;
      }
      if (paramList != null)
      {
        this.hasSeenValid = true;
        normalizePoints(paramList, paramInt1, paramInt2);
        calculateMiddleLineWithNormalizedPoints();
        paramList = this.previousValidFrames;
        paramInt1 = this.currentIdx;
        paramList[paramInt1] = 1;
        this.previousParams[paramInt1] = this.params.copy();
        paramList = this.smoothedParams;
        this.params = paramList;
        this.previousValidParams = paramList;
        this.lastValidTime = System.currentTimeMillis();
        break label159;
      }
      this.previousValidFrames[this.currentIdx] = false;
      if ((this.hasSeenValid) && (System.currentTimeMillis() - this.lastValidTime < this.validDuration))
      {
        this.params = this.previousValidParams;
        break label159;
      }
    }
    bool1 = false;
    label159:
    this.mEnable = bool1;
    return this.mEnable;
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mobileqq\classes15.jar
 * Qualified Name:     com.tencent.ttpic.openapi.filter.ThinBodyFilter
 * JD-Core Version:    0.7.0.1
 */