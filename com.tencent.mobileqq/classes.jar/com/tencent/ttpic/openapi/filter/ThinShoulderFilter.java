package com.tencent.ttpic.openapi.filter;

import android.graphics.PointF;
import android.graphics.RectF;
import com.tencent.aekit.openrender.UniformParam.Float2fParam;
import com.tencent.aekit.openrender.UniformParam.FloatParam;
import com.tencent.aekit.openrender.UniformParam.IntParam;
import com.tencent.aekit.openrender.internal.VideoFilterBase;
import com.tencent.filter.BaseFilter;
import java.util.List;

public class ThinShoulderFilter
  extends VideoFilterBase
{
  private static final int BODY_POINTS_NUM = 61;
  public static final String FRAGMENT_SHADER = "mee3085x1701998624x1769171299x1746955887x1885890409x1869375008x171668577x1918989856x1735289209x1667593760x1702109234x1920300152x1869562725x1852400754x996504673x1853169674x1919903337x1634934893x1701605485x541340274x1970302569x1634552180x1700029799x1920300152x537541477x1718185589x544043631x845374838x1852138272x997352820x1853169674x1919903337x1818632301x544498031x1952737655x537541480x1718185589x544043631x1634692198x1701322868x1952999273x1965034043x1868982638x1763732850x1931506798x1299672936x996897377x1853169674x1919903337x1818632301x544498031x1701999731x1752459118x1965034043x1868982638x1713401202x1952542572x1869770784x537541488x1684631414x1767992608x170469486x537557792x538976288x1634692198x1333272692x1768384882x540876910x1954047348x1130721909x1685221231x1952542313x997731941x538976266x1818632224x544498031x1769099129x544106855x1702109245x1920300152x1869562725x1852400754x778400865x537541497x538976288x1634692198x1701716084x1025529975x1917810720x1852401513x538970683x169877536x538976288x1869375008x1914729569x1869900129x1025519961x858664992x538970683x169877536x538976288x538970656x1713381408x1952542572x1952543264x810839913x807419168x540751662x-1679347921x-1179654728x-443630876x-1192981875x-1449138262x-442319387x-1159348818x-2070222938x-460017690x537562046x538976288x1634692198x1634869364x1483696500x540876848x909585968x537528891x538976288x1634692198x813244532x1663057184x1702129253x544812658x1701322797x1952999273x807414304x171652398x538976288x1869375008x2032170081x540876849x1953391971x2033087077x1746939168x1751607653x539631732x540356144x1634869290x1500476521x537541425x538976288x1634692198x846798964x1663057184x1702129253x544812658x1701322795x1952999273x807414304x171652398x538976288x1869375008x2015392865x540876848x1953391971x2016309861x1998597408x1752458345x807414304x706753838x825110816x538970683x1713381408x1952542572x540112928x1700995133x1919251566x757102638x1684633376x706766964x892219424x1914710560x1869182049x171651156x538976288x1869375008x2015392865x540876850x1953391971x2016309861x1998596896x1752458345x807414304x706753838x1952543264x810839913x538970683x1713381408x1952542572x540244000x1700995133x1919251566x723548206x1684633376x706766964x892219424x824191520x171651374x538976288x1869375008x2015392865x1684302157x1025533292x1852138272x779249012x537541496x538976288x1634692198x1299783796x1818518633x540876901x1953391971x2033087077x538970683x169877536x538976288x538970656x1763713056x2015895654x1734963791x1042312809x540047392x2015372838x1734963791x1008758377x540244000x2032150054x1734963791x1042312809x540047648x2032150054x1734963791x1008758377x691173664x537557792x538976288x538976288x1634692198x1634869364x1483696500x1953718064x1735288178x1025534068x1952543264x811102057x1931487776x1852142196x543716455x1634869291x1416587636x539631664x808333608x1931488544x1852142196x694711399x538970683x538976288x1713381408x1952542572x1936286752x1866624852x543452789x1768759357x829958254x774971436x539828272x992555640x538976266x538976288x1818632224x544498031x1769234802x1970225775x1025533038x1869443872x1936225391x678454644x741355056x758216736x539766904x1416849764x1970225775x992568430x538976266x538976288x1818632224x544498031x1769234802x1597003887x1853189986x540876900x1769234802x1597003887x1701999731x1752459118x1914710560x1869182049x1853189954x539697252x1769234802x540038255x824713258x757084206x1952543264x1866624873x694447733x538970683x538976288x1713381408x1952542572x1952543264x995716969x538976266x538976288x1718165536x1333340192x1768384882x540811374x539570553x538970747x538976288x538976288x1914708000x1869182049x540876889x1869573491x1953720436x2032693349x2032151600x2032151601x1734963791x992570985x538976266x538976288x175972384x538976288x538976288x1936483616x175841381x538976288x538976288x538976288x1952543264x542732137x774971453x539828272x1869573491x1953720436x2032693349x2032151601x2032151602x1734963791x992570985x538976266x538976288x175972384x538976288x538976288x1869375008x1914729569x1869182049x1634625862x540876908x1769234802x1597003887x1853189986x539631716x1769234802x723540335x1952543264x810839913x673196576x540028465x1634869293x1500473716x537541417x538976288x538976288x538976266x538976288x1818632224x544498031x540876916x678650465x1769099128x544106855x1299718189x1818518633x790636901x1769416736x543716452x774905898x171649333x538976288x538976288x1869375008x2015392865x538970683x538976288x1763713056x1948786790x1914715168x1869182049x539570260x538970747x538976288x538976288x2015371296x1948269856x673196576x1769234802x1852393071x790654049x1952543264x810839913x539631657x1684633384x706766964x892219424x537541417x538976288x538976288x538970749x538976288x1696604192x543519596x538970747x538976288x538976288x1713381408x1952542572x1632465952x537541496x538976288x538976288x538976288x673212009x1769099128x544106855x1700995134x1919251566x539588654x538970747x538976288x538976288x538976288x1948262432x544760141x2015895613x539828275x1684622712x694512740x673197856x1952737655x539631720x691351088x538970683x538976288x538976288x2099257376x538976266x538976288x538976288x1818566688x2065720691x538976266x538976288x538976288x538976288x1299456032x1025538145x1299720224x1818518633x539828325x539570296x1999118383x1752458345x807414304x992556334x538976266x538976288x538976288x175972384x538976288x538976288x538976288x1025538080x1634871328x1181706612x1818324585x673196832x539828340x1769234802x691033199x673196576x2019642740x1914711328x1869182049x1634625862x790636908x1299458080x538998881x1634869293x1416587636x539568432x1999118378x1752458345x807414304x992556334x538976266x538976288x175972384x538976288x538976288x538970656x538976288x1847599136x542668645x1333272637x1768384882x540942446x1684622712x543517796x1299718207x1818518633x539697253x540680312x1684622712x543517796x997728301x538976266x175972384x538976288x1936483616x175841381x538976288x538976288x2003136032x540876888x1769099128x997091687x538976266x175972384x538976288x1600939808x1734439494x1869377347x540876914x1954047348x845509237x1852385348x1232369008x1701273965x1954047316x744845941x1667593760x1701718066x539777143x1769099129x695101799x537541417x538976288x538976266x1718165536x1752377376x1632466799x1025534834x691085373x537557792x538976288x538976288x1634692198x1768169588x1025533542x808333344x171651632x538976288x538976288x543582496x1917810728x1852401513x2015378976x640032816x1917810720x1852401513x2015378464x537536819x538976288x538976288x538970747x538976288x538976288x1763713056x1630019686x2032694114x1734963791x757100137x691042592x1679834144x711353961x1886351984x175930400x538976288x538976288x538976288x538976288x1935827232x1917810984x1852401513x2032151840x1008740657x1718182944x1919953510x2082500719x538970748x538976288x538976288x538976288x1629495328x2032694114x1734963791x757100137x691173664x1679834144x711353961x1886351984x175930400x538976288x538976288x538976288x538976288x1935827232x1917810984x1852401513x2032151840x1684302157x539583852x1768169532x1881826918x695234418x538976266x538976288x538976288x175841312x538976288x538976288x538976288x538976288x1600939808x1734439494x1869377347x540876914x878929270x808333608x774905900x807414832x539766830x691023409x538970683x538976288x538976288x2099257376x538976266x538976288x175972384x538976288x538976288x543582496x1917810984x1852401513x2032156192x640032816x1917810976x1852401513x2032155680x537536818x538976288x538976288x538970747x538976288x538976288x1763713056x1630019686x2015916898x1734963791x757100137x691042336x1679834144x543581801x537558140x538976288x538976288x538976288x538976288x678650465x1769099128x544106855x829956141x540811305x1717987684x175930400x538976288x538976288x538976288x538976288x1935827232x1917810728x1852401513x2015374624x1008740658x1718182944x2088509542x538976266x538976288x538976288x538976288x1650532384x1333274739x1768384882x539828334x539571064x1768169532x2082498150x538970748x538976288x538976288x538976288x1629495328x2015916898x1734963791x757100137x1766684704x1701602404x540811305x1717987684x538970665x538976288x538976288x2065702944x538976266x538976288x538976288x538976288x1818697760x1634879071x1819231079x1025536623x1667593760x774907956x824192048x539766830x741355056x808333600x537541417x538976288x538976288x538976288x538970749x538976288x2099257376x538970634x2099257376x538976266x537534496x125x";
  public static final String TAG = ThinShoulderFilter.class.getSimpleName();
  public static final String VERTEX_SHADER = "mee191x1920234593x1953849961x1702240357x1881158755x1953067887x997093225x1953784074x1969383794x1981834612x540304229x1970302569x2019906676x1701999988x1919905603x1634625892x171664756x1918989834x1735289209x1667593760x1702109234x1920300152x1869562725x1852400754x996504673x1768912394x1634541668x690515561x537557770x1730158624x1867538284x1769236851x1025535599x1936683040x1869182057x537541486x1948262432x1970567269x1866687858x1768190575x1702125934x1763720480x1953853550x1954047316x1130721909x1685221231x1952542313x2037919333x8194619x";
  private static final int[] leftIndexs = { 13, 14, 15, 16, 17 };
  private static final int[] rightIndexs = { 45, 44, 43, 42, 41 };
  private PointF center;
  private int currentIdx;
  private boolean hasSeenValid;
  private float height;
  private long lastValidTime;
  private boolean mEnable = false;
  private ThinShoulderFilter.ThinShoulderParameters params;
  private PointF[] pointsNormalized = new PointF[61];
  private ThinShoulderFilter.ThinShoulderParameters[] previousParams;
  private boolean[] previousValidFrames;
  private ThinShoulderFilter.ThinShoulderParameters previousValidParams;
  private float prop;
  private boolean showMark = false;
  private ThinShoulderFilter.ThinShoulderParameters smoothedParams;
  private int smoothedWithinFrames;
  private float strength;
  private long validDuration;
  private float width;
  
  public ThinShoulderFilter()
  {
    super(BaseFilter.nativeDecrypt("mee191x1920234593x1953849961x1702240357x1881158755x1953067887x997093225x1953784074x1969383794x1981834612x540304229x1970302569x2019906676x1701999988x1919905603x1634625892x171664756x1918989834x1735289209x1667593760x1702109234x1920300152x1869562725x1852400754x996504673x1768912394x1634541668x690515561x537557770x1730158624x1867538284x1769236851x1025535599x1936683040x1869182057x537541486x1948262432x1970567269x1866687858x1768190575x1702125934x1763720480x1953853550x1954047316x1130721909x1685221231x1952542313x2037919333x8194619x"), BaseFilter.nativeDecrypt("mee3085x1701998624x1769171299x1746955887x1885890409x1869375008x171668577x1918989856x1735289209x1667593760x1702109234x1920300152x1869562725x1852400754x996504673x1853169674x1919903337x1634934893x1701605485x541340274x1970302569x1634552180x1700029799x1920300152x537541477x1718185589x544043631x845374838x1852138272x997352820x1853169674x1919903337x1818632301x544498031x1952737655x537541480x1718185589x544043631x1634692198x1701322868x1952999273x1965034043x1868982638x1763732850x1931506798x1299672936x996897377x1853169674x1919903337x1818632301x544498031x1701999731x1752459118x1965034043x1868982638x1713401202x1952542572x1869770784x537541488x1684631414x1767992608x170469486x537557792x538976288x1634692198x1333272692x1768384882x540876910x1954047348x1130721909x1685221231x1952542313x997731941x538976266x1818632224x544498031x1769099129x544106855x1702109245x1920300152x1869562725x1852400754x778400865x537541497x538976288x1634692198x1701716084x1025529975x1917810720x1852401513x538970683x169877536x538976288x1869375008x1914729569x1869900129x1025519961x858664992x538970683x169877536x538976288x538970656x1713381408x1952542572x1952543264x810839913x807419168x540751662x-1679347921x-1179654728x-443630876x-1192981875x-1449138262x-442319387x-1159348818x-2070222938x-460017690x537562046x538976288x1634692198x1634869364x1483696500x540876848x909585968x537528891x538976288x1634692198x813244532x1663057184x1702129253x544812658x1701322797x1952999273x807414304x171652398x538976288x1869375008x2032170081x540876849x1953391971x2033087077x1746939168x1751607653x539631732x540356144x1634869290x1500476521x537541425x538976288x1634692198x846798964x1663057184x1702129253x544812658x1701322795x1952999273x807414304x171652398x538976288x1869375008x2015392865x540876848x1953391971x2016309861x1998597408x1752458345x807414304x706753838x825110816x538970683x1713381408x1952542572x540112928x1700995133x1919251566x757102638x1684633376x706766964x892219424x1914710560x1869182049x171651156x538976288x1869375008x2015392865x540876850x1953391971x2016309861x1998596896x1752458345x807414304x706753838x1952543264x810839913x538970683x1713381408x1952542572x540244000x1700995133x1919251566x723548206x1684633376x706766964x892219424x824191520x171651374x538976288x1869375008x2015392865x1684302157x1025533292x1852138272x779249012x537541496x538976288x1634692198x1299783796x1818518633x540876901x1953391971x2033087077x538970683x169877536x538976288x538970656x1763713056x2015895654x1734963791x1042312809x540047392x2015372838x1734963791x1008758377x540244000x2032150054x1734963791x1042312809x540047648x2032150054x1734963791x1008758377x691173664x537557792x538976288x538976288x1634692198x1634869364x1483696500x1953718064x1735288178x1025534068x1952543264x811102057x1931487776x1852142196x543716455x1634869291x1416587636x539631664x808333608x1931488544x1852142196x694711399x538970683x538976288x1713381408x1952542572x1936286752x1866624852x543452789x1768759357x829958254x774971436x539828272x992555640x538976266x538976288x1818632224x544498031x1769234802x1970225775x1025533038x1869443872x1936225391x678454644x741355056x758216736x539766904x1416849764x1970225775x992568430x538976266x538976288x1818632224x544498031x1769234802x1597003887x1853189986x540876900x1769234802x1597003887x1701999731x1752459118x1914710560x1869182049x1853189954x539697252x1769234802x540038255x824713258x757084206x1952543264x1866624873x694447733x538970683x538976288x1713381408x1952542572x1952543264x995716969x538976266x538976288x1718165536x1333340192x1768384882x540811374x539570553x538970747x538976288x538976288x1914708000x1869182049x540876889x1869573491x1953720436x2032693349x2032151600x2032151601x1734963791x992570985x538976266x538976288x175972384x538976288x538976288x1936483616x175841381x538976288x538976288x538976288x1952543264x542732137x774971453x539828272x1869573491x1953720436x2032693349x2032151601x2032151602x1734963791x992570985x538976266x538976288x175972384x538976288x538976288x1869375008x1914729569x1869182049x1634625862x540876908x1769234802x1597003887x1853189986x539631716x1769234802x723540335x1952543264x810839913x673196576x540028465x1634869293x1500473716x537541417x538976288x538976288x538976266x538976288x1818632224x544498031x540876916x678650465x1769099128x544106855x1299718189x1818518633x790636901x1769416736x543716452x774905898x171649333x538976288x538976288x1869375008x2015392865x538970683x538976288x1763713056x1948786790x1914715168x1869182049x539570260x538970747x538976288x538976288x2015371296x1948269856x673196576x1769234802x1852393071x790654049x1952543264x810839913x539631657x1684633384x706766964x892219424x537541417x538976288x538976288x538970749x538976288x1696604192x543519596x538970747x538976288x538976288x1713381408x1952542572x1632465952x537541496x538976288x538976288x538976288x673212009x1769099128x544106855x1700995134x1919251566x539588654x538970747x538976288x538976288x538976288x1948262432x544760141x2015895613x539828275x1684622712x694512740x673197856x1952737655x539631720x691351088x538970683x538976288x538976288x2099257376x538976266x538976288x538976288x1818566688x2065720691x538976266x538976288x538976288x538976288x1299456032x1025538145x1299720224x1818518633x539828325x539570296x1999118383x1752458345x807414304x992556334x538976266x538976288x538976288x175972384x538976288x538976288x538976288x1025538080x1634871328x1181706612x1818324585x673196832x539828340x1769234802x691033199x673196576x2019642740x1914711328x1869182049x1634625862x790636908x1299458080x538998881x1634869293x1416587636x539568432x1999118378x1752458345x807414304x992556334x538976266x538976288x175972384x538976288x538976288x538970656x538976288x1847599136x542668645x1333272637x1768384882x540942446x1684622712x543517796x1299718207x1818518633x539697253x540680312x1684622712x543517796x997728301x538976266x175972384x538976288x1936483616x175841381x538976288x538976288x2003136032x540876888x1769099128x997091687x538976266x175972384x538976288x1600939808x1734439494x1869377347x540876914x1954047348x845509237x1852385348x1232369008x1701273965x1954047316x744845941x1667593760x1701718066x539777143x1769099129x695101799x537541417x538976288x538976266x1718165536x1752377376x1632466799x1025534834x691085373x537557792x538976288x538976288x1634692198x1768169588x1025533542x808333344x171651632x538976288x538976288x543582496x1917810728x1852401513x2015378976x640032816x1917810720x1852401513x2015378464x537536819x538976288x538976288x538970747x538976288x538976288x1763713056x1630019686x2032694114x1734963791x757100137x691042592x1679834144x711353961x1886351984x175930400x538976288x538976288x538976288x538976288x1935827232x1917810984x1852401513x2032151840x1008740657x1718182944x1919953510x2082500719x538970748x538976288x538976288x538976288x1629495328x2032694114x1734963791x757100137x691173664x1679834144x711353961x1886351984x175930400x538976288x538976288x538976288x538976288x1935827232x1917810984x1852401513x2032151840x1684302157x539583852x1768169532x1881826918x695234418x538976266x538976288x538976288x175841312x538976288x538976288x538976288x538976288x1600939808x1734439494x1869377347x540876914x878929270x808333608x774905900x807414832x539766830x691023409x538970683x538976288x538976288x2099257376x538976266x538976288x175972384x538976288x538976288x543582496x1917810984x1852401513x2032156192x640032816x1917810976x1852401513x2032155680x537536818x538976288x538976288x538970747x538976288x538976288x1763713056x1630019686x2015916898x1734963791x757100137x691042336x1679834144x543581801x537558140x538976288x538976288x538976288x538976288x678650465x1769099128x544106855x829956141x540811305x1717987684x175930400x538976288x538976288x538976288x538976288x1935827232x1917810728x1852401513x2015374624x1008740658x1718182944x2088509542x538976266x538976288x538976288x538976288x1650532384x1333274739x1768384882x539828334x539571064x1768169532x2082498150x538970748x538976288x538976288x538976288x1629495328x2015916898x1734963791x757100137x1766684704x1701602404x540811305x1717987684x538970665x538976288x538976288x2065702944x538976266x538976288x538976288x538976288x1818697760x1634879071x1819231079x1025536623x1667593760x774907956x824192048x539766830x741355056x808333600x537541417x538976288x538976288x538976288x538970749x538976288x2099257376x538970634x2099257376x538976266x537534496x125x"));
    initParams();
    this.smoothedWithinFrames = 2;
    this.currentIdx = 0;
    this.validDuration = 2000L;
    this.hasSeenValid = false;
    int i = 0;
    while (i < this.pointsNormalized.length)
    {
      this.pointsNormalized[i] = new PointF();
      i += 1;
    }
    if (this.previousValidFrames == null)
    {
      this.previousValidFrames = new boolean[this.smoothedWithinFrames];
      i = 0;
      while (i < this.smoothedWithinFrames)
      {
        this.previousValidFrames[i] = false;
        i += 1;
      }
    }
    if (this.params == null) {
      this.params = new ThinShoulderFilter.ThinShoulderParameters(this);
    }
    if (this.previousParams == null)
    {
      this.previousParams = new ThinShoulderFilter.ThinShoulderParameters[this.smoothedWithinFrames];
      i = 0;
      while (i < this.smoothedWithinFrames)
      {
        this.previousParams[i] = new ThinShoulderFilter.ThinShoulderParameters(this);
        i += 1;
      }
    }
    if (this.previousValidParams == null) {
      this.previousValidParams = new ThinShoulderFilter.ThinShoulderParameters(this);
    }
    if (this.smoothedParams == null) {
      this.smoothedParams = new ThinShoulderFilter.ThinShoulderParameters(this);
    }
    this.smoothedParams.reset();
    float f1 = 0.0F;
    float f2 = 0.0F;
    float f3 = 0.0F;
    int j = 0;
    i = k;
    float f4;
    while (i < this.smoothedWithinFrames)
    {
      float f6 = f1;
      float f5 = f2;
      f4 = f3;
      k = j;
      if (this.previousValidFrames[i] != 0)
      {
        k = j + 1;
        ThinShoulderFilter.ThinShoulderParameters localThinShoulderParameters = this.previousParams[i];
        f4 = f3 + ThinShoulderFilter.ThinShoulderParameters.access$000(localThinShoulderParameters).left;
        f5 = f2 + ThinShoulderFilter.ThinShoulderParameters.access$000(localThinShoulderParameters).top;
        f6 = f1 + ThinShoulderFilter.ThinShoulderParameters.access$000(localThinShoulderParameters).right + ThinShoulderFilter.ThinShoulderParameters.access$000(localThinShoulderParameters).bottom;
      }
      i += 1;
      f1 = f6;
      f2 = f5;
      f3 = f4;
      j = k;
    }
    if (j > 0)
    {
      f3 /= j;
      f2 /= j;
      f1 /= j;
      f4 = 0.0F / j;
      ThinShoulderFilter.ThinShoulderParameters.access$002(this.smoothedParams, new RectF(f3, f2, f1, f4));
    }
  }
  
  private void normalizePoints(List<PointF> paramList, int paramInt1, int paramInt2)
  {
    if ((paramList == null) || (paramList.size() == 0)) {}
    for (;;)
    {
      return;
      int i = 0;
      while (i < paramList.size())
      {
        this.pointsNormalized[i].x = (((PointF)paramList.get(i)).x / paramInt1);
        this.pointsNormalized[i].y = (((PointF)paramList.get(i)).y / paramInt2);
        i += 1;
      }
    }
  }
  
  public void calculateMiddleLineWithNormalizedPoints()
  {
    int i = 0;
    float f1 = 0.0F;
    int j = leftIndexs.length;
    PointF localPointF1 = this.pointsNormalized[0];
    PointF localPointF2 = this.pointsNormalized[58];
    float f2 = 0.0F;
    float f3 = 0.0F;
    float f4 = 0.0F;
    while (i < j)
    {
      PointF localPointF3 = this.pointsNormalized[leftIndexs[i]];
      PointF localPointF4 = this.pointsNormalized[rightIndexs[i]];
      f4 += (localPointF3.x + localPointF4.x) / 2.0F;
      f3 += (localPointF3.y + localPointF4.y) / 2.0F;
      f2 += localPointF4.x - localPointF3.x;
      f1 += localPointF3.y + localPointF4.y - localPointF1.y - localPointF2.y;
      i += 1;
    }
    setParams(new ThinShoulderFilter.ThinShoulderParameters(this, new RectF(f4 / j, f3 / j - 0.05F * f1, f2 / j * 2.0F, f1 * 0.18F)));
  }
  
  public void initParams()
  {
    int i = 0;
    this.center = new PointF();
    this.showMark = false;
    this.mEnable = false;
    this.prop = 0.5625F;
    if (this.showMark) {
      i = 1;
    }
    addParam(new UniformParam.IntParam("showMark", i));
    addParam(new UniformParam.FloatParam("strength", 0.0F));
    addParam(new UniformParam.Float2fParam("center", 0.0F, 0.0F));
    addParam(new UniformParam.FloatParam("width", 0.0F));
    addParam(new UniformParam.FloatParam("height", 0.0F));
    addParam(new UniformParam.FloatParam("prop", 0.5625F));
  }
  
  public void resetState()
  {
    this.hasSeenValid = false;
    this.previousParams = null;
  }
  
  public void setCenter(PointF paramPointF)
  {
    if (paramPointF.x < 0.0F)
    {
      this.center.x = 0.0F;
      if (paramPointF.y >= 0.0F) {
        break label96;
      }
      this.center.y = 0.0F;
    }
    for (;;)
    {
      addParam(new UniformParam.Float2fParam("center", this.center.x, this.center.y));
      return;
      if (paramPointF.x > 1.0F)
      {
        this.center.x = 1.0F;
        break;
      }
      this.center.x = paramPointF.x;
      break;
      label96:
      if (paramPointF.y > 1.0F) {
        this.center.y = 1.0F;
      } else {
        this.center.y = paramPointF.y;
      }
    }
  }
  
  public void setEnable(boolean paramBoolean)
  {
    this.mEnable = paramBoolean;
  }
  
  public void setHeight(float paramFloat)
  {
    if (paramFloat > 1.0F) {
      this.height = 1.0F;
    }
    for (;;)
    {
      addParam(new UniformParam.FloatParam("height", this.height));
      return;
      if (paramFloat < 0.0F) {
        this.height = 0.0F;
      } else {
        this.height = paramFloat;
      }
    }
  }
  
  public void setParams(ThinShoulderFilter.ThinShoulderParameters paramThinShoulderParameters)
  {
    setCenter(new PointF(ThinShoulderFilter.ThinShoulderParameters.access$000(paramThinShoulderParameters).left, ThinShoulderFilter.ThinShoulderParameters.access$000(paramThinShoulderParameters).top));
    setWidth(ThinShoulderFilter.ThinShoulderParameters.access$000(paramThinShoulderParameters).right);
    setHeight(ThinShoulderFilter.ThinShoulderParameters.access$000(paramThinShoulderParameters).bottom);
  }
  
  public void setProp(float paramFloat)
  {
    if (paramFloat > 2.0F) {
      this.prop = 2.0F;
    }
    for (;;)
    {
      addParam(new UniformParam.FloatParam("prop", this.prop));
      return;
      if (paramFloat < 0.5F) {
        this.prop = 0.5F;
      } else {
        this.prop = paramFloat;
      }
    }
  }
  
  public void setShowMark(boolean paramBoolean)
  {
    if (this.showMark != paramBoolean)
    {
      this.showMark = paramBoolean;
      if (!this.showMark) {
        break label37;
      }
    }
    label37:
    for (int i = 1;; i = 0)
    {
      addParam(new UniformParam.IntParam("showMark", i));
      return;
    }
  }
  
  public void setStrength(float paramFloat)
  {
    if (paramFloat > 1.0F) {
      this.strength = 1.0F;
    }
    for (;;)
    {
      addParam(new UniformParam.FloatParam("strength", this.strength));
      return;
      if (paramFloat < 0.0F) {
        this.strength = 0.0F;
      } else {
        this.strength = paramFloat;
      }
    }
  }
  
  public void setWidth(float paramFloat)
  {
    if (paramFloat > 1.0F) {
      this.width = 1.0F;
    }
    for (;;)
    {
      addParam(new UniformParam.FloatParam("width", this.width));
      return;
      if (paramFloat < 0.0F) {
        this.width = 0.0F;
      } else {
        this.width = paramFloat;
      }
    }
  }
  
  public boolean setupBodyPoints(List<PointF> paramList, int paramInt1, int paramInt2)
  {
    boolean bool = true;
    if (this.mEnable)
    {
      this.currentIdx += 1;
      if (this.currentIdx >= this.smoothedWithinFrames) {
        this.currentIdx = 0;
      }
      if (paramList != null)
      {
        this.hasSeenValid = true;
        normalizePoints(paramList, paramInt1, paramInt2);
        calculateMiddleLineWithNormalizedPoints();
        this.previousValidFrames[this.currentIdx] = true;
        this.previousParams[this.currentIdx] = this.params.copy();
        paramList = this.smoothedParams;
        this.params = paramList;
        this.previousValidParams = paramList;
        this.lastValidTime = System.currentTimeMillis();
      }
    }
    for (;;)
    {
      this.mEnable = bool;
      return this.mEnable;
      this.previousValidFrames[this.currentIdx] = false;
      if ((this.hasSeenValid) && (System.currentTimeMillis() - this.lastValidTime < this.validDuration)) {
        this.params = this.previousValidParams;
      } else {
        bool = false;
      }
    }
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mobileqq\classes10.jar
 * Qualified Name:     com.tencent.ttpic.openapi.filter.ThinShoulderFilter
 * JD-Core Version:    0.7.0.1
 */