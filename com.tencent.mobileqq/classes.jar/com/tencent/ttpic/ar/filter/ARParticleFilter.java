package com.tencent.ttpic.ar.filter;

import android.graphics.Bitmap;
import android.graphics.PointF;
import android.opengl.GLES20;
import android.opengl.GLUtils;
import android.os.HandlerThread;
import android.text.TextUtils;
import com.tencent.aekit.api.standard.AEModule;
import com.tencent.aekit.openrender.AEOpenRenderConfig.DRAW_MODE;
import com.tencent.aekit.openrender.AttributeParam;
import com.tencent.aekit.openrender.UniformParam.FloatParam;
import com.tencent.aekit.openrender.UniformParam.IntParam;
import com.tencent.aekit.openrender.UniformParam.Mat4Param;
import com.tencent.aekit.openrender.UniformParam.TextureParam;
import com.tencent.aekit.openrender.internal.Frame;
import com.tencent.aekit.openrender.internal.VideoFilterBase;
import com.tencent.filter.BaseFilter;
import com.tencent.oscarcamera.particlesystem.ParticleSystemEx;
import com.tencent.oscarcamera.particlesystem.Sprite;
import com.tencent.ttpic.baseutils.audio.PlayerUtil;
import com.tencent.ttpic.baseutils.audio.PlayerUtil.Player;
import com.tencent.ttpic.baseutils.io.FileUtils;
import com.tencent.ttpic.baseutils.thread.HandlerThreadManager;
import com.tencent.ttpic.baseutils.thread.HandlerThreadTag;
import com.tencent.ttpic.openapi.ar.ARMatrixUtil;
import com.tencent.ttpic.openapi.model.Point3D;
import java.io.File;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class ARParticleFilter
  extends VideoFilterBase
{
  private static final String FRAGMENT_SHADER_COMMON = "";
  private static final String TAG = ARParticleFilter.class.getSimpleName();
  private static final String VERTEX_SHADER_COMMON = "";
  private float far = 2000.0F;
  private ARParticleFilter.FrameData[] frameDataBufferQueue = new ARParticleFilter.FrameData[2];
  private int frameDataBufferQueueIndex = 0;
  private float mCanvasHeight;
  private float mCanvasWidth;
  private BaseFilter mCopyFilter = new BaseFilter("precision highp float;\nvarying vec2 textureCoordinate;\nuniform sampler2D inputImageTexture;\nvoid main() \n{\ngl_FragColor = texture2D (inputImageTexture, textureCoordinate);\n}\n");
  private Frame mCopyFrame = new Frame();
  private ARParticleFilter.FrameData mLastFrameData;
  private ARParticleFilter.ParticleCalculationHandler mParticleCalculationHandler;
  private List<String> mParticleDirList;
  private ParticleSystemEx mParticleSystem = new ParticleSystemEx(AEModule.getContext());
  private Map<String, Integer> mPathToBitmapIndexMapping = new HashMap();
  private Map<String, PlayerUtil.Player> mPlayerMapping = new HashMap();
  private List<Sprite> mSpriteList;
  private List<ArrayList<ARParticleFilter.TexCoord>> mTexCoords = new ArrayList();
  private Bitmap[] mTextureBitmaps;
  private ARParticleFilter.Size[] mTextureSizes;
  private int[] mTextures;
  private float mViewDistance;
  private float near = 100.0F;
  private ARParticleFilter.BitmapDecodeTask task;
  
  public ARParticleFilter(List<String> paramList, String paramString)
  {
    super(BaseFilter.nativeDecrypt(""), BaseFilter.nativeDecrypt("mee4044x1667592816x1869181801x1768431726x544237671x1634692198x1980382068x1769566817x1981835118x540173157x1954047348x1130721909x1685221231x1952542313x1963604837x1868982638x1931505010x1819307361x1144156773x1886284064x1833530485x1415931745x1970567269x171664754x1718185589x544043631x1886216563x846357868x1852383300x1232369008x1701273965x1954047316x845509237x1853164091x1919903337x1852383341x1818370164x1298427493x996500591x1918989834x1735289209x1667593760x1131814964x1919904879x1853164091x1919903337x1818632301x544498031x1986945379x1767338849x996701284x1768846602x1836216166x1869375008x1663071329x1635151457x1768245363x997484647x1981811210x540304229x1852140642x1819231076x1982362223x540304229x1131963764x1919904879x1702240300x1663054947x1635151457x1819231091x170488431x537557792x538976288x862152054x1850701344x540876901x862152054x808333608x774971436x824192048x992555054x538976266x1702240288x1981821795x1869768026x1981824288x674456421x741355056x808333344x774905900x171649328x538976288x1915694880x1919252069x1919950964x1970085989x1885959276x537557356x538976288x1948804713x1866692709x779251564x540942433x691023408x538970747x538976288x1702109216x1819231096x1915646575x1025532519x2019914784x1869377347x1735536242x539959394x1131963764x1919904879x171663662x538976288x537558304x538976288x862152054x1936028192x1182035061x543519343x1702109245x1819231096x1915646575x171663975x538976288x543582496x1701601832x1867342958x1008756068x540090429x1646296188x1684956524x1701080909x824196640x544942386x1701064495x1819631974x1931488372x1701015145x1702065440x1869422692x539784307x544503152x1948282479x168456303x538976288x1696628000x543519596x673212009x1852140642x1685015908x1027416165x539570720x790634619x1819634991x1819306356x538970745x538976288x1914708000x1819636581x1919895156x540876901x1986945379x1866691425x779251564x543319922x1702109226x1819231096x1915646575x171663975x538976288x1696628000x543519596x673212009x1852140642x1685015908x1027416165x2066297632x538976288x1668493103x1852138866x538976266x538976288x1701978144x1953265011x1701998406x1981824288x543518287x1982341165x543518287x1633886253x1935767150x1869377347x1735536242x706750818x1333143584x757097838x2019914784x1869377347x1735536242x171649378x538976288x1696628000x543519596x673212009x1852140642x1685015908x1027416165x2066297888x538976288x1986998063x1634497125x538970745x538976288x1914708000x1819636581x1919895156x540876901x540028466x1633886250x1935767150x1869377347x1735536242x539631714x1131963764x1919904879x1650946606x538970683x538976288x1763713056x1663574118x1635151457x1819231091x1915646575x540884512x691351088x537557792x538976288x538976288x538976288x1970496882x1866888300x1915643250x824196384x757084206x808333856x673196576x540028465x1633886253x1935767150x1869377347x695348850x673196576x540028465x1702109229x1819231096x1915646575x537541417x538976288x538976288x538970749x538976288x1763713056x1663574118x1635151457x1819231091x1731097199x540884512x691351088x537557792x538976288x538976288x538976288x1970496882x1866888300x1731093874x824196384x757084206x808333856x673196576x540028465x1633886253x1935767150x1869377347x694627954x673196576x540028465x1702109229x1819231096x1731097199x537541417x538976288x538976288x538970749x538976288x1763713056x1663574118x1635151457x1819231091x1647211119x540884512x691351088x537557792x538976288x538976288x538976288x1970496882x1866888300x1647207794x824196384x757084206x808333856x673196576x540028465x1633886253x1935767150x1869377347x694300274x673196576x540028465x1702109229x1819231096x1647211119x537541417x538976288x538976288x538970749x2099257376x1936483616x1718165605x1818372128x1298427493x543515759x891305277x538999593x791617568x1685217640x1751607660x538970740x538976288x1914708000x1819636581x1919895156x540876901x540028466x1633886250x1935767150x1869377347x1735536242x539631714x1131963764x1919904879x1650946606x538970683x538976288x1763713056x1948786790x1866692709x779251564x1027481714x892219424x175841321x538976288x538976288x538976288x1936028192x1182035061x778400367x540876914x540028465x775036973x539631664x808333608x1663053088x1635151457x1819231091x1915646575x539631657x808333608x1948265760x1866692709x779251564x171649394x538976288x538976288x537558304x538976288x538976288x673212009x1131963764x1919904879x1042310958x774905917x2065705269x538976266x538976288x538976288x1701978144x1953265011x1701998406x1025533742x808333600x840969504x706752558x774973472x539828272x1986945379x1866691425x779251564x706750823x774973472x539828272x1131963764x1919904879x992569134x538976266x538976288x175972384x538976288x538976288x543582496x2019914792x1869377347x543305330x807419198x539571502x538970747x538976288x538976288x1914708000x1819636581x1919895156x543305317x774971453x539828272x540028466x824713258x757084206x1851876128x1131635062x1919904879x539583022x824713258x757084206x2019914784x1869377347x694300274x538970683x538976288x2099257376x538976266x545071136x1702063205x543582496x1701601832x1867342958x1025533284x691413053x538976379x1932472096x1819567727x1952999273x538976266x538976288x1701978144x1953265011x1701998406x840973600x706752558x1851876128x1131635062x1919904879x1650946606x1948264992x1866692709x779251564x543319922x1633886251x1935767150x1869377347x1735536242x539631714x1986945379x1866691425x779251564x543319922x1982341162x543518287x775036973x539631664x1131963764x1919904879x1650946606x537541417x538976288x538976288x673212009x1131963764x1919904879x1042313774x774905917x2065705269x538976266x538976288x538976288x1701978144x1953265011x1701998406x1025536558x808333856x1663052320x1635151457x1819231091x1915646575x673196576x540028465x1702109229x1819231096x1915646575x539697193x808333864x1948264992x1866692709x779251564x539828338x691023409x1931487776x678720113x1986945379x1866691425x779251564x171649394x538976288x538976288x537558304x538976288x538976288x673212009x1131963764x1919904879x1042310958x774905917x2065705269x538976266x538976288x538976288x1701978144x1953265011x1701998406x1025533742x808333856x1663052320x1635151457x1819231091x1731097199x673196576x540028465x1702109229x1819231096x1731097199x539697193x808333864x1948264992x1866692709x779251564x539828327x691023409x1931487776x678720113x1986945379x1866691425x779251564x171649383x538976288x538976288x537558304x538976288x538976288x673212009x1131963764x1919904879x1042309678x774905917x2065705269x538976266x538976288x538976288x1701978144x1953265011x1701998406x1025532462x808333856x1663052320x1635151457x1819231091x1647211119x673196576x540028465x1702109229x1819231096x1647211119x539697193x808333864x1948264992x1866692709x779251564x539828322x691023409x1931487776x678720113x1986945379x1866691425x779251564x171649378x538976288x538976288x537558304x538976288x1818566781x1763730803x1646796902x1684956524x1701080909x540884256x544942391x790634528x1986618415x174417001x538976288x538976288x1936028192x1182035061x543519343x1333141565x171664750x538976288x538976288x543582496x2019914792x1869377347x544353906x774905918x2065705264x538976266x538976288x538976288x1701978144x1953265011x1701998406x1025536558x1851876128x1131635062x1919904879x790655534x2019914784x1869377347x997338738x538976266x538976288x175972384x538976288x538976288x543582496x2019914792x1869377347x543633010x774905918x2065705264x538976266x538976288x538976288x1701978144x1953265011x1701998406x1025533742x1851876128x1131635062x1919904879x790652718x2019914784x1869377347x996617842x538976266x538976288x175972384x538976288x538976288x543582496x2019914792x1869377347x543305330x774905918x2065705264x538976266x538976288x538976288x1701978144x1953265011x1701998406x1025532462x1851876128x1131635062x1919904879x790651438x2019914784x1869377347x996290162x538976266x538976288x175972384x538976288x538976288x1936028192x1182035061x543519343x1768759357x1333143662x539780462x1970496882x1866888300x992568690x538976266x545071136x1702063205x543582496x1701601832x1867342958x1025533284x691544125x538976379x1630482208x537551972x538976288x538976288x1970496882x1866888300x1025533298x1851876128x1131635062x1919904879x1650946606x1948265248x1866692709x779251564x996304754x538976266x538976288x1701978144x1953265011x1701998406x1830829344x1982361193x744844879x1936028192x1182035061x694514287x538970683x2099257376x1936483616x1718165605x1818372128x1298427493x543515759x958414141x538999593x791617568x1935832435x1667330676x538970740x538976288x1914708000x1819636581x1919895156x540876901x1986945379x1866691425x779251564x543319922x1702109229x1819231096x1915646575x171663975x538976288x538976288x1936028192x1182035061x543519343x1634541629x1517693048x745501285x1936028192x1182035061x694514287x538970683x2099257376x1936483616x1718165605x1818372128x1298427493x543515759x824196413x544942384x791617568x1717987684x538976266x538976288x1701978144x1953265011x1701998406x1629502752x1663595362x1635151457x1819231091x1915646575x757097063x2019914784x1869377347x1735536242x171649378x538976288x1696628000x543519596x673212009x1852140642x1685015908x1027416165x691089696x538976379x1633955631x1852140402x538976266x538976288x1701978144x1953265011x1701998406x1830829344x1663594089x1635151457x1819231091x1915646575x539779687x1131963764x1919904879x1650946606x537541417x538976288x1818566781x1763730803x1646796902x1684956524x1701080909x540884256x2066297393x790634528x1734962223x1852142696x538976266x538976288x1701978144x1953265011x1701998406x1830829344x1663596641x1635151457x1819231091x1915646575x539779687x1131963764x1919904879x1650946606x537541417x538976288x538970749x790634528x1701998639x1819634976x1819306356x1868963961x1818697842x1852140610x1853179492x538970723x1981816864x540304229x1970496882x1866691692x544370540x1702240317x1915237475x1819636581x1919895156x539631717x1131963764x1919904879x539779374x1131963764x1919904879x992567598x538976266x1701978144x1852994932x1936028192x1131703413x1919904879x2099251771x1870006794x1830839401x678324577x1684631414x175835689x538976288x878929270x1851876128x1131635062x1919904879x1948269856x1970567269x1144153458x1886284072x1833530485x1415931745x1970567269x539780466x845374838x1600939816x1734439494x1919905603x544747108x1633886255x1935767150x1952737623x1730161768x1917214572x1866688353x778334831x539959417x1986945379x1699246945x1952999273x171649321x538976288x878929270x2019914784x1869377347x540876914x1954047348x845509237x1852385348x1232369008x1701273965x1954047316x845509237x1702109228x1920300152x1869562725x1852400754x694514785x538970683x1702109216x1819231096x1025536623x1667593760x1702111284x1819231096x1915646575x1981819424x1869377347x544353906x1131814954x1919904879x539779374x1131963764x1919904879x706766638x1866692128x779251564x539631719x1819231094x1630433903x1702109228x1819231096x1647211119x1981819424x1869377347x543305330x1131814954x1919904879x539779374x1131963764x1919904879x706765102x1866692128x779251564x171649377x538976288x1180658791x1130848626x1919904879x1646279968x1684956524x1869377347x1702111346x1819231096x539783791x1986945379x1866691425x695365484x175966779x"));
    this.dataPath = paramString;
    setDrawMode(AEOpenRenderConfig.DRAW_MODE.TRIANGLES);
    initParticle(paramList);
  }
  
  private void calTexCoordList(int paramInt1, int paramInt2, int paramInt3, float[] paramArrayOfFloat)
  {
    if (paramInt1 < this.mTexCoords.size())
    {
      Object localObject = (ArrayList)this.mTexCoords.get(paramInt1);
      if (paramInt2 >= 0)
      {
        paramInt1 = paramInt2;
        if (paramInt2 < ((ArrayList)localObject).size()) {}
      }
      else
      {
        paramInt1 = 0;
      }
      if (paramInt1 < ((ArrayList)localObject).size())
      {
        localObject = (ARParticleFilter.TexCoord)((ArrayList)localObject).get(paramInt1);
        paramInt2 = 0;
        paramInt1 = paramInt3 * 12;
        while ((paramInt2 < 12) && (paramInt1 < paramArrayOfFloat.length))
        {
          paramArrayOfFloat[paramInt1] = localObject.texCoord[paramInt2];
          paramInt2 += 1;
          paramInt1 += 1;
        }
      }
    }
  }
  
  private boolean changeTexture(String paramString)
  {
    if (!this.mPathToBitmapIndexMapping.containsKey(paramString)) {}
    int i;
    do
    {
      return false;
      i = ((Integer)this.mPathToBitmapIndexMapping.get(paramString)).intValue();
      if (this.mTextures[i] != 0) {
        break;
      }
      paramString = this.mTextureBitmaps[i];
    } while (!isBitmapLegal(paramString));
    this.mTextureSizes[i] = new ARParticleFilter.Size(this, paramString.getWidth(), paramString.getHeight());
    GLES20.glGenTextures(1, this.mTextures, i);
    GLES20.glBindTexture(3553, this.mTextures[i]);
    GLES20.glTexParameteri(3553, 10240, 9729);
    GLES20.glTexParameteri(3553, 10241, 9729);
    GLES20.glTexParameteri(3553, 10242, 33071);
    GLES20.glTexParameteri(3553, 10243, 33071);
    try
    {
      GLUtils.texImage2D(3553, 0, paramString, 0);
      paramString.recycle();
      paramString = new UniformParam.TextureParam("inputImageTexture2", this.mTextures[i], 33986);
      paramString.initialParams(getProgramIds());
      addParam(paramString);
      if ((this.mTextureSizes[i] != null) && (this.mTextureSizes[i].isValid())) {}
      for (boolean bool = true;; bool = false) {
        return bool;
      }
      return false;
    }
    catch (OutOfMemoryError paramString) {}
  }
  
  private void initParticle(List<String> paramList)
  {
    if (paramList != null)
    {
      this.mParticleDirList = new ArrayList();
      paramList = new ArrayList(paramList);
      int i = 0;
      while (i < paramList.size())
      {
        this.mParticleDirList.add(((String)paramList.get(i)).substring(0, ((String)paramList.get(i)).lastIndexOf("/")));
        paramList.set(i, FileUtils.getRealPath(this.dataPath + File.separator + (String)paramList.get(i)));
        i += 1;
      }
      this.mParticleSystem.loadParticleData(paramList);
      this.mSpriteList = this.mParticleSystem.getSprites();
      this.mTextureBitmaps = new Bitmap[this.mSpriteList.size()];
      this.mTextures = new int[this.mSpriteList.size()];
      this.mTextureSizes = new ARParticleFilter.Size[this.mSpriteList.size()];
      i = 0;
      while ((i < this.mSpriteList.size()) && (i < this.mParticleDirList.size()))
      {
        this.mPathToBitmapIndexMapping.put((String)this.mParticleDirList.get(i) + File.separator + ((Sprite)this.mSpriteList.get(i)).path, Integer.valueOf(i));
        this.mTexCoords.add(new ArrayList());
        i += 1;
      }
      this.task = new ARParticleFilter.BitmapDecodeTask(this);
      this.task.execute(new Void[0]);
    }
    this.mParticleCalculationHandler = new ARParticleFilter.ParticleCalculationHandler(this, HandlerThreadManager.getInstance().getHandlerThread(HandlerThreadTag.CAL_PARTICLE).getLooper());
    this.mParticleCalculationHandler.sendEmptyMessage(0);
  }
  
  private boolean isBitmapLegal(Bitmap paramBitmap)
  {
    return (paramBitmap != null) && (!paramBitmap.isRecycled());
  }
  
  private void playMusicIfNeeded(ARParticleFilter.FrameData paramFrameData)
  {
    if (paramFrameData.needPlayMusic)
    {
      Iterator localIterator = paramFrameData.frameParticleData.iterator();
      while (localIterator.hasNext())
      {
        paramFrameData = (ARParticleFilter.FrameParticleData)localIterator.next();
        if (!TextUtils.isEmpty(paramFrameData.audioPath))
        {
          String str = paramFrameData.audioPath;
          if (!this.mPlayerMapping.containsKey(str)) {
            if (!str.startsWith("assets://")) {
              break label130;
            }
          }
          label130:
          for (paramFrameData = PlayerUtil.createPlayerFromAssets(AEModule.getContext(), str.replace("assets://", ""), false);; paramFrameData = PlayerUtil.createPlayerFromUri(AEModule.getContext(), str, false))
          {
            this.mPlayerMapping.put(str, paramFrameData);
            paramFrameData = (PlayerUtil.Player)this.mPlayerMapping.get(str);
            if (paramFrameData == null) {
              break;
            }
            PlayerUtil.startPlayer(paramFrameData, true);
            break;
          }
        }
      }
    }
  }
  
  private float pow2(float paramFloat)
  {
    return paramFloat * paramFloat;
  }
  
  private void vectorNormalization(float[] paramArrayOfFloat)
  {
    if ((paramArrayOfFloat == null) || (paramArrayOfFloat.length < 3)) {}
    float f;
    do
    {
      return;
      f = (float)Math.sqrt(pow2(paramArrayOfFloat[0]) + pow2(paramArrayOfFloat[1]) + pow2(paramArrayOfFloat[2]));
    } while (f <= 0.0F);
    paramArrayOfFloat[0] /= f;
    paramArrayOfFloat[1] /= f;
    paramArrayOfFloat[2] /= f;
  }
  
  public void Render(Frame paramFrame)
  {
    ARParticleFilter.FrameData localFrameData = this.frameDataBufferQueue[this.frameDataBufferQueueIndex];
    if ((localFrameData == null) || (!localFrameData.ready)) {
      if (this.mLastFrameData != null) {
        localFrameData = this.mLastFrameData;
      }
    }
    for (;;)
    {
      this.mLastFrameData = localFrameData;
      localFrameData.ready = false;
      this.frameDataBufferQueueIndex = ((this.frameDataBufferQueueIndex + 1) % 2);
      this.mParticleCalculationHandler.sendEmptyMessage(this.frameDataBufferQueueIndex);
      int i = 0;
      while ((i < localFrameData.frameParticleData.size()) && (i < this.mParticleDirList.size()))
      {
        int j = paramFrame.getTextureId();
        ARParticleFilter.FrameParticleData localFrameParticleData = (ARParticleFilter.FrameParticleData)localFrameData.frameParticleData.get(i);
        if (needCopyTex(localFrameParticleData.blendMode))
        {
          this.mCopyFilter.RenderProcess(paramFrame.getTextureId(), this.width, this.height, -1, 0.0D, this.mCopyFrame);
          j = this.mCopyFrame.getTextureId();
          paramFrame.bindFrame(-1, paramFrame.width, paramFrame.height, 0.0D);
        }
        if (!changeTexture((String)this.mParticleDirList.get(i) + File.separator + localFrameParticleData.tex))
        {
          i += 1;
        }
        else
        {
          setPositionIndex(localFrameParticleData.positionIndex);
          setParticleCenter(localFrameParticleData.particleCenter);
          setParticleSize(localFrameParticleData.particleSize);
          setParticleColor(localFrameParticleData.particleColor);
          setCoordNum(localFrameParticleData.particleCount * 6);
          setTexCords(localFrameParticleData.texCoords);
          addParam(new UniformParam.IntParam("blendMode", localFrameParticleData.blendMode));
          addParam(new UniformParam.Mat4Param("u_MVPMatrix", ARMatrixUtil.getMovedMVPMatrix(this.near, this.far)));
          addParam(new UniformParam.FloatParam("canvasWidth", this.mCanvasWidth));
          addParam(new UniformParam.FloatParam("canvasHeight", this.mCanvasHeight));
          if (ARMatrixUtil.isFrontCamera) {}
          for (int k = 1;; k = 0)
          {
            addParam(new UniformParam.IntParam("isFrontCamera", k));
            OnDrawFrameGLSL();
            super.renderTexture(j, this.width, this.height);
            break;
          }
        }
      }
      playMusicIfNeeded(localFrameData);
      return;
    }
  }
  
  public void addTouchPoint(PointF paramPointF)
  {
    float f1 = ARMatrixUtil.nearRectHeight / ARMatrixUtil.nearRectWidth;
    float f2 = ARMatrixUtil.nearRectWidth;
    float f3 = this.mViewDistance / ARMatrixUtil.near;
    float f4 = ARMatrixUtil.nearRectHeight;
    float f5 = this.mViewDistance / ARMatrixUtil.near;
    Object localObject2 = new Point3D();
    ((Point3D)localObject2).x = (this.mViewDistance * ARMatrixUtil.cameraX);
    ((Point3D)localObject2).y = (this.mViewDistance * ARMatrixUtil.cameraY);
    ((Point3D)localObject2).z = (this.mViewDistance * ARMatrixUtil.cameraZ);
    Object localObject1 = new float[3];
    localObject1[0] = (ARMatrixUtil.cameraUpX * f1 + ARMatrixUtil.cameraRightX);
    localObject1[1] = (ARMatrixUtil.cameraUpY * f1 + ARMatrixUtil.cameraRightY);
    localObject1[2] = (ARMatrixUtil.cameraUpZ * f1 + ARMatrixUtil.cameraRightZ);
    vectorNormalization((float[])localObject1);
    f2 = (float)Math.sqrt(pow2(f2 * f3) + pow2(f4 * f5)) / 2.0F;
    Point3D localPoint3D1 = new Point3D();
    localPoint3D1.x = (((Point3D)localObject2).x - localObject1[0] * f2);
    localPoint3D1.y = (((Point3D)localObject2).y - localObject1[1] * f2);
    localPoint3D1.z = (((Point3D)localObject2).z - localObject1[2] * f2);
    float[] arrayOfFloat = new float[3];
    arrayOfFloat[0] = (ARMatrixUtil.cameraUpX * f1 - ARMatrixUtil.cameraRightX);
    arrayOfFloat[1] = (ARMatrixUtil.cameraUpY * f1 - ARMatrixUtil.cameraRightY);
    arrayOfFloat[2] = (f1 * ARMatrixUtil.cameraUpZ - ARMatrixUtil.cameraRightZ);
    vectorNormalization(arrayOfFloat);
    localObject1 = new Point3D();
    ((Point3D)localObject2).x += arrayOfFloat[0] * f2;
    ((Point3D)localObject2).y += arrayOfFloat[1] * f2;
    ((Point3D)localObject2).z += arrayOfFloat[2] * f2;
    Point3D localPoint3D2 = new Point3D();
    localPoint3D2.x = (((Point3D)localObject2).x - arrayOfFloat[0] * f2);
    localPoint3D2.y = (((Point3D)localObject2).y - arrayOfFloat[1] * f2);
    localPoint3D2.z = (((Point3D)localObject2).z - f2 * arrayOfFloat[2]);
    f2 = paramPointF.x / this.width;
    f1 = f2;
    if (ARMatrixUtil.isFrontCamera) {
      f1 = 1.0F - f2;
    }
    localObject2 = new float[3];
    localObject2[0] = ((localPoint3D2.x - localPoint3D1.x) * f1);
    localObject2[1] = ((localPoint3D2.y - localPoint3D1.y) * f1);
    localObject2[2] = (f1 * (localPoint3D2.z - localPoint3D1.z));
    f1 = 1.0F - paramPointF.y / this.height;
    paramPointF = new float[3];
    paramPointF[0] = ((((Point3D)localObject1).x - localPoint3D1.x) * f1);
    paramPointF[1] = ((((Point3D)localObject1).y - localPoint3D1.y) * f1);
    paramPointF[2] = (f1 * (((Point3D)localObject1).z - localPoint3D1.z));
    localObject1 = new Point3D();
    ((Point3D)localObject1).x = (localPoint3D1.x + localObject2[0] + paramPointF[0]);
    ((Point3D)localObject1).y = (localPoint3D1.y + localObject2[1] + paramPointF[1]);
    f1 = localPoint3D1.z;
    ((Point3D)localObject1).z = (localObject2[2] + f1 + paramPointF[2]);
    this.mParticleSystem.emitImmediately(((Point3D)localObject1).x, ((Point3D)localObject1).y, ((Point3D)localObject1).z);
  }
  
  public void clear()
  {
    super.clearGLSLSelf();
    ARMatrixUtil.stopOrientationSensor();
    Bitmap[] arrayOfBitmap = this.mTextureBitmaps;
    int j = arrayOfBitmap.length;
    int i = 0;
    while (i < j)
    {
      Bitmap localBitmap = arrayOfBitmap[i];
      if (isBitmapLegal(localBitmap)) {
        localBitmap.recycle();
      }
      i += 1;
    }
    if (this.task != null) {
      this.task.cancel(true);
    }
    GLES20.glDeleteTextures(this.mTextures.length, this.mTextures, 0);
    this.mCopyFilter.ClearGLSL();
    this.mCopyFrame.clear();
    destroyAudioPlayer();
    if (this.mParticleCalculationHandler != null)
    {
      this.mParticleCalculationHandler.isStopped = true;
      HandlerThreadManager.getInstance().destroyHandlerThread(HandlerThreadTag.CAL_PARTICLE);
    }
    this.mParticleSystem.release();
    System.gc();
  }
  
  public void destroyAudioPlayer()
  {
    Iterator localIterator = this.mPlayerMapping.values().iterator();
    while (localIterator.hasNext()) {
      PlayerUtil.destroyPlayer((PlayerUtil.Player)localIterator.next());
    }
    this.mPlayerMapping.clear();
  }
  
  public void initAttribParams()
  {
    setTexCords(new float[] { 0.0F, 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 1.0F, 1.0F });
    setCoordNum(4);
    addAttribParam(new AttributeParam("positionIndex", new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, 1));
    addAttribParam(new AttributeParam("particleCenter", new float[] { 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F }, 3));
    addAttribParam(new AttributeParam("particleSize", new float[] { 0.0F, 0.0F }, 2));
    addAttribParam(new AttributeParam("particleColor", new float[] { 0.0F, 0.0F, 0.0F, 0.0F }, 4));
    initParams();
  }
  
  public void initParams()
  {
    this.mViewDistance = (this.near + (this.far - this.near) * 0.5F);
    addParam(new UniformParam.Mat4Param("u_MVPMatrix", ARMatrixUtil.getMovedMVPMatrix(this.near, this.far)));
    addParam(new UniformParam.IntParam("blendMode", 0));
    addParam(new UniformParam.FloatParam("canvasWidth", 1.0F));
    addParam(new UniformParam.FloatParam("canvasHeight", 1.0F));
    addParam(new UniformParam.IntParam("isFrontCamera", 0));
    ARMatrixUtil.startOrientationSensor();
    this.mCopyFilter.apply();
  }
  
  public boolean needCopyTex()
  {
    if (this.mSpriteList != null)
    {
      Iterator localIterator = this.mSpriteList.iterator();
      while (localIterator.hasNext())
      {
        Sprite localSprite = (Sprite)localIterator.next();
        if ((localSprite.blendMode >= 2) && (localSprite.blendMode <= 12)) {
          return true;
        }
      }
    }
    return false;
  }
  
  public boolean needCopyTex(int paramInt)
  {
    return (paramInt >= 2) && (paramInt <= 12);
  }
  
  public boolean setParticleCenter(float[] paramArrayOfFloat)
  {
    addAttribParam(new AttributeParam("particleCenter", paramArrayOfFloat, 3));
    return true;
  }
  
  public boolean setParticleColor(float[] paramArrayOfFloat)
  {
    addAttribParam(new AttributeParam("particleColor", paramArrayOfFloat, 4));
    return true;
  }
  
  public boolean setParticleSize(float[] paramArrayOfFloat)
  {
    addAttribParam(new AttributeParam("particleSize", paramArrayOfFloat, 2));
    return true;
  }
  
  public boolean setPositionIndex(float[] paramArrayOfFloat)
  {
    addAttribParam(new AttributeParam("positionIndex", paramArrayOfFloat, 1));
    return true;
  }
  
  public void updateAndRender(Frame paramFrame)
  {
    ARMatrixUtil.updateOrientation();
    Render(paramFrame);
  }
  
  public void updateVideoSize(int paramInt1, int paramInt2, double paramDouble)
  {
    super.updateVideoSize(paramInt1, paramInt2, paramDouble);
    this.mCanvasWidth = paramInt1;
    this.mCanvasHeight = paramInt2;
    ARMatrixUtil.updateRenderSize(paramInt1, paramInt2);
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mobileqq\classes10.jar
 * Qualified Name:     com.tencent.ttpic.ar.filter.ARParticleFilter
 * JD-Core Version:    0.7.0.1
 */