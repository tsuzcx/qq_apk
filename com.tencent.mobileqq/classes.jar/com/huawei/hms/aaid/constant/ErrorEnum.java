package com.huawei.hms.aaid.constant;

import android.util.SparseArray;
import com.huawei.hms.common.ApiException;
import com.huawei.hms.support.api.client.Status;

public enum ErrorEnum
{
  public static final SparseArray<ErrorEnum> ENUM_MAPPER;
  public int externalCode;
  public int internalCode;
  public String message;
  
  static
  {
    ERROR_NO_TOKEN = new ErrorEnum("ERROR_NO_TOKEN", 1, 800000000, 907122030, "token missing");
    ERROR_NO_TOKENSIGN = new ErrorEnum("ERROR_NO_TOKENSIGN", 2, 800000001, 907122032, "token invalid");
    ERROR_NO_NETWORK = new ErrorEnum("ERROR_NO_NETWORK", 3, 800000002, 907122031, "no network");
    ERROR_SERVICE_NOT_AVAILABLE = new ErrorEnum("ERROR_SERVICE_NOT_AVAILABLE", 4, 800000003, 907122046, "service not available");
    ERROR_PUSH_SERVER = new ErrorEnum("ERROR_PUSH_SERVER", 5, 800000004, 907122047, "push server error");
    ERROR_UNKNOWN = new ErrorEnum("ERROR_UNKNOWN", 6, 800000005, 907122045, "unknown error");
    ERROR_NO_RIGHT = new ErrorEnum("ERROR_NO_RIGHT", 7, 800100000, 907122036, "no right");
    ERROR_NO_CONNECTION_ID = new ErrorEnum("ERROR_NO_CONNECTION_ID", 8, 800100001, 907122037, "get token error");
    ERROR_LENGTH = new ErrorEnum("ERROR_LENGTH", 9, 800100002, 907122037, "get token error");
    ERROR_NO_DEVICE_ID_TYPE = new ErrorEnum("ERROR_NO_DEVICE_ID_TYPE", 10, 800100003, 907122037, "get token error");
    ERROR_PARAM_INVALID = new ErrorEnum("ERROR_PARAM_INVALID", 11, 800100004, 907122037, "get token error");
    ERROR_TOKEN_URL_EMPTY = new ErrorEnum("ERROR_TOKEN_URL_EMPTY", 12, 800100005, 907122037, "get token error");
    ERROR_NOT_ALLOW_CROSS_APPLY = new ErrorEnum("ERROR_NOT_ALLOW_CROSS_APPLY", 13, 800100006, 907122053, "Failed to apply for the token. Cross-region application is not allowed.");
    ERROR_MULTISENDER_NO_RIGHT = new ErrorEnum("ERROR_MULTISENDER_NO_RIGHT", 14, 800100007, 907122039, "Failed to apply for the token. No multisender right.");
    ERROR_TOKEN_DECRYPT = new ErrorEnum("ERROR_TOKEN_DECRYPT", 15, 800200001, 907122032, "token invalid");
    ERROR_TOKENSIGN_VALID = new ErrorEnum("ERROR_TOKENSIGN_VALID", 16, 800200002, 907122032, "token invalid");
    ERROR_TOPIC_EXCEED = new ErrorEnum("ERROR_TOPIC_EXCEED", 17, 800200003, 907122034, "topic exceed");
    ERROR_TOPIC_SEND = new ErrorEnum("ERROR_TOPIC_SEND", 18, 800200004, 907122035, "topic send error");
    ERROR_STORAGE_LOCATION_EMPTY = new ErrorEnum("ERROR_STORAGE_LOCATION_EMPTY", 19, 800200005, 907122038, "storage location is empty or invalid");
    ERROR_SIZE = new ErrorEnum("ERROR_SIZE", 20, 800300000, 907122041, "message size error");
    ERROR_INVALID_PARAMETERS = new ErrorEnum("ERROR_INVALID_PARAMETERS", 21, 800300001, 907122042, "parameter invalid");
    ERROR_TOO_MANY_MESSAGES = new ErrorEnum("ERROR_TOO_MANY_MESSAGES", 22, 800300002, 907122043, "too many messages");
    ERROR_TTL_EXCEEDED = new ErrorEnum("ERROR_TTL_EXCEEDED", 23, 800300003, 907122044, "ttl exceed");
    ERROR_UPSTREAM_TOKEN_DECRYPT = new ErrorEnum("ERROR_UPSTREAM_TOKEN_DECRYPT", 24, 800300004, 907122032, "token invalid");
    ERROR_UPSTREAM_TOKENSIGN_VALID = new ErrorEnum("ERROR_UPSTREAM_TOKENSIGN_VALID", 25, 800300005, 907122032, "token invalid");
    ERROR_UPSTREAM_DEVICE_NOT_IN_GROUP = new ErrorEnum("ERROR_UPSTREAM_DEVICE_NOT_IN_GROUP", 26, 800300006, 907122057, "device not in device group");
    ERROR_UPSTREAM_STORAGE_LOCATION_EMPTY = new ErrorEnum("ERROR_UPSTREAM_STORAGE_LOCATION_EMPTY", 27, 800300007, 907122038, "storage location is empty or invalid");
    ERROR_CACHE_SIZE_EXCEED = new ErrorEnum("ERROR_CACHE_SIZE_EXCEED", 28, 800300008, 907122058, "cache size exceeds threshold");
    ERROR_MSG_CACHE = new ErrorEnum("ERROR_MSG_CACHE", 29, 800300009, 907122059, "message is cached");
    ERROR_APP_SERVER_NOT_ONLINE = new ErrorEnum("ERROR_APP_SERVER_NOT_ONLINE", 30, 800300010, 907122060, "app server is not online.");
    ERROR_OVER_FLOW_CONTROL_SIZE = new ErrorEnum("ERROR_OVER_FLOW_CONTROL_SIZE", 31, 800300011, 907122061, "frequency of message is over flow control size.");
    ERROR_PUSH_ARGUMENTS_INVALID = new ErrorEnum("ERROR_PUSH_ARGUMENTS_INVALID", 32, 807135000, 907135000, "arguments invalid");
    ERROR_PUSH_INTERNAL_ERROR = new ErrorEnum("ERROR_PUSH_INTERNAL_ERROR", 33, 807135001, 907135001, "internal error");
    ERROR_PUSH_NAMING_INVALID = new ErrorEnum("ERROR_PUSH_NAMING_INVALID", 34, 807135002, 907135002, "naming invalid");
    ERROR_PUSH_CLIENT_API_INVALID = new ErrorEnum("ERROR_PUSH_CLIENT_API_INVALID", 35, 807135003, 907135003, "client api invalid");
    ERROR_PUSH_EXECUTE_TIMEOUT = new ErrorEnum("ERROR_PUSH_EXECUTE_TIMEOUT", 36, 807135004, 907135004, "execute timeout");
    ERROR_PUSH_NOT_IN_SERVICE = new ErrorEnum("ERROR_PUSH_NOT_IN_SERVICE", 37, 807135005, 907135005, "not int service");
    ERROR_SPUSH_ESSION_INVALID = new ErrorEnum("ERROR_SPUSH_ESSION_INVALID", 38, 807135006, 907135006, "session invalid");
    ERROR_ARGUMENTS_INVALID = new ErrorEnum("ERROR_ARGUMENTS_INVALID", 39, 907135000, 907135000, "arguments invalid");
    ERROR_INTERNAL_ERROR = new ErrorEnum("ERROR_INTERNAL_ERROR", 40, 907135001, 907135001, "internal error");
    ERROR_NAMING_INVALID = new ErrorEnum("ERROR_NAMING_INVALID", 41, 907135002, 907135002, "naming invalid");
    ERROR_CLIENT_API_INVALID = new ErrorEnum("ERROR_CLIENT_API_INVALID", 42, 907135003, 907135003, "client api invalid");
    ERROR_EXECUTE_TIMEOUT = new ErrorEnum("ERROR_EXECUTE_TIMEOUT", 43, 907135004, 907135004, "execute timeout");
    ERROR_NOT_IN_SERVICE = new ErrorEnum("ERROR_NOT_IN_SERVICE", 44, 907135005, 907135005, "not int service");
    ERROR_SESSION_INVALID = new ErrorEnum("ERROR_SESSION_INVALID", 45, 907135006, 907135006, "session invalid");
    ERROR_API_NOT_SPECIFIED = new ErrorEnum("ERROR_API_NOT_SPECIFIED", 46, 1002, 1002, "API not specified");
    ERROR_GET_SCOPE_ERROR = new ErrorEnum("ERROR_GET_SCOPE_ERROR", 47, 907135700, 907135700, "get scope error");
    ERROR_SCOPE_LIST_EMPTY = new ErrorEnum("ERROR_SCOPE_LIST_EMPTY", 48, 907135701, 907135701, "scope list empty");
    ERROR_CERT_FINGERPRINT_EMPTY = new ErrorEnum("ERROR_CERT_FINGERPRINT_EMPTY", 49, 907135702, 907135702, "certificate fingerprint empty");
    ERROR_PERMISSION_LIST_EMPTY = new ErrorEnum("ERROR_PERMISSION_LIST_EMPTY", 50, 907135703, 907135703, "permission list empty");
    ERROR_AUTH_INFO_NOT_EXIST = new ErrorEnum("ERROR_AUTH_INFO_NOT_EXIST", 51, 6002, 6002, "auth info not exist");
    ERROR_CERT_FINGERPRINT_ERROR = new ErrorEnum("ERROR_CERT_FINGERPRINT_ERROR", 52, 6003, 6003, "certificate fingerprint error");
    ERROR_PERMISSION_NOT_EXIST = new ErrorEnum("ERROR_PERMISSION_NOT_EXIST", 53, 6004, 6004, "permission not exist");
    ERROR_PERMISSION_NOT_AUTHORIZED = new ErrorEnum("ERROR_PERMISSION_NOT_AUTHORIZED", 54, 6005, 6005, "permission not authorized");
    ERROR_PERMISSION_EXPIRED = new ErrorEnum("ERROR_PERMISSION_EXPIRED", 55, 6006, 6006, "permission expired");
    ERROR_NO_NETWORK_OLD = new ErrorEnum("ERROR_NO_NETWORK_OLD", 56, 907122005, 907122031, "no network");
    ERROR_NO_RIGHT_SELF_MAPPING = new ErrorEnum("ERROR_NO_RIGHT_SELF_MAPPING", 57, 907122011, 907122036, "no right");
    ERROR_NO_CONNECTION_ID_OLD = new ErrorEnum("ERROR_NO_CONNECTION_ID_OLD", 58, 907122012, 907122037, "get token error");
    ERROR_LENGTH_OLD = new ErrorEnum("ERROR_LENGTH_OLD", 59, 907122013, 907122037, "get token error");
    ERROR_NO_DEVICE_ID_TYPE_OLD = new ErrorEnum("ERROR_NO_DEVICE_ID_TYPE_OLD", 60, 907122014, 907122037, "get token error");
    ERROR_PUSH_SERVER_OLD = new ErrorEnum("ERROR_PUSH_SERVER_OLD", 61, 907122017, 907122047, "push server error");
    ERROR_NO_TOKEN_OLD = new ErrorEnum("ERROR_NO_TOKEN_OLD", 62, 907122019, 907122030, "token missing");
    ERROR_HMS_CLIENT_API = new ErrorEnum("ERROR_HMS_CLIENT_API", 63, 907122048, 907122048, "HMS client api invalid");
    ERROR_OPERATION_NOT_SUPPORTED = new ErrorEnum("ERROR_OPERATION_NOT_SUPPORTED", 64, 907122049, 907122049, "operation not supported");
    ERROR_MAIN_THREAD = new ErrorEnum("ERROR_MAIN_THREAD", 65, 907122050, 907122050, "operation in MAIN thread prohibited");
    ERROR_HMS_DEVICE_AUTH_FAILED_SELF_MAPPING = new ErrorEnum("ERROR_HMS_DEVICE_AUTH_FAILED_SELF_MAPPING", 66, 907122051, 907122051, "device certificate auth fail");
    ERROR_BIND_SERVICE_SELF_MAPPING = new ErrorEnum("ERROR_BIND_SERVICE_SELF_MAPPING", 67, 907122052, 907122052, "bind service failed.");
    ERROR_AUTO_INITIALIZING = new ErrorEnum("ERROR_AUTO_INITIALIZING", 68, 907122054, 907122054, "push kit initializing, try again later");
    ERROR_RETRY_LATER_SELF_MAPPING = new ErrorEnum("ERROR_RETRY_LATER_SELF_MAPPING", 69, 907122055, 907122055, "System busy, please retry later.");
    ERROR_SEND_SELF_MAPPING = new ErrorEnum("ERROR_SEND_SELF_MAPPING", 70, 907122056, 907122056, "send error.");
    ERROR_MISSING_PROJECT_ID = new ErrorEnum("ERROR_MISSING_PROJECT_ID", 71, 907122064, 907122064, "agc connect services config missing project id");
    ERROR_RESTRICT_GET_TOKEN = new ErrorEnum("ERROR_RESTRICT_GET_TOKEN", 72, 800100014, 907122065, "restrict get token");
    ERROR_GET_3RD_PARTY_TOKEN_FAILED = new ErrorEnum("ERROR_GET_3RD_PARTY_TOKEN_FAILED", 73, 907122101, 907122101, "get 3rd-party token failed.");
    ERROR_DELETE_3RD_PARTY_TOKEN_FAILED = new ErrorEnum("ERROR_DELETE_3RD_PARTY_TOKEN_FAILED", 74, 907122102, 907122102, "delete 3rd-party token failed.");
    ERROR_3RD_PARTY_INTERNAL_ERROR = new ErrorEnum("ERROR_3RD_PARTY_INTERNAL_ERROR", 75, 907122103, 907122103, "3rd-party internal error.");
    ERROR_FETCH_DOMAIN_FAILED = new ErrorEnum("ERROR_FETCH_DOMAIN_FAILED", 76, 907135104, 907135104, "fetch domain failed.");
    ERROR_BUILD_CONTENT_ERROR = new ErrorEnum("ERROR_BUILD_CONTENT_ERROR", 77, 907122105, 907122105, "build content error.");
    ERROR_HWID_NOT_LOGIN = new ErrorEnum("ERROR_HWID_NOT_LOGIN", 78, 907122066, 907122066, "account logout");
    ERROR_PROFILE_EXCEED = new ErrorEnum("ERROR_PROFILE_EXCEED", 79, 800400000, 907122067, "profile num over limit");
    ERROR_OPER_IN_CHILD_PROCESS = new ErrorEnum("ERROR_OPER_IN_CHILD_PROCESS", 80, 907122068, 907122068, "Operations in child processes are not supported.");
    Object localObject1 = SUCCESS;
    int i = 0;
    $VALUES = new ErrorEnum[] { localObject1, ERROR_NO_TOKEN, ERROR_NO_TOKENSIGN, ERROR_NO_NETWORK, ERROR_SERVICE_NOT_AVAILABLE, ERROR_PUSH_SERVER, ERROR_UNKNOWN, ERROR_NO_RIGHT, ERROR_NO_CONNECTION_ID, ERROR_LENGTH, ERROR_NO_DEVICE_ID_TYPE, ERROR_PARAM_INVALID, ERROR_TOKEN_URL_EMPTY, ERROR_NOT_ALLOW_CROSS_APPLY, ERROR_MULTISENDER_NO_RIGHT, ERROR_TOKEN_DECRYPT, ERROR_TOKENSIGN_VALID, ERROR_TOPIC_EXCEED, ERROR_TOPIC_SEND, ERROR_STORAGE_LOCATION_EMPTY, ERROR_SIZE, ERROR_INVALID_PARAMETERS, ERROR_TOO_MANY_MESSAGES, ERROR_TTL_EXCEEDED, ERROR_UPSTREAM_TOKEN_DECRYPT, ERROR_UPSTREAM_TOKENSIGN_VALID, ERROR_UPSTREAM_DEVICE_NOT_IN_GROUP, ERROR_UPSTREAM_STORAGE_LOCATION_EMPTY, ERROR_CACHE_SIZE_EXCEED, ERROR_MSG_CACHE, ERROR_APP_SERVER_NOT_ONLINE, ERROR_OVER_FLOW_CONTROL_SIZE, ERROR_PUSH_ARGUMENTS_INVALID, ERROR_PUSH_INTERNAL_ERROR, ERROR_PUSH_NAMING_INVALID, ERROR_PUSH_CLIENT_API_INVALID, ERROR_PUSH_EXECUTE_TIMEOUT, ERROR_PUSH_NOT_IN_SERVICE, ERROR_SPUSH_ESSION_INVALID, ERROR_ARGUMENTS_INVALID, ERROR_INTERNAL_ERROR, ERROR_NAMING_INVALID, ERROR_CLIENT_API_INVALID, ERROR_EXECUTE_TIMEOUT, ERROR_NOT_IN_SERVICE, ERROR_SESSION_INVALID, ERROR_API_NOT_SPECIFIED, ERROR_GET_SCOPE_ERROR, ERROR_SCOPE_LIST_EMPTY, ERROR_CERT_FINGERPRINT_EMPTY, ERROR_PERMISSION_LIST_EMPTY, ERROR_AUTH_INFO_NOT_EXIST, ERROR_CERT_FINGERPRINT_ERROR, ERROR_PERMISSION_NOT_EXIST, ERROR_PERMISSION_NOT_AUTHORIZED, ERROR_PERMISSION_EXPIRED, ERROR_NO_NETWORK_OLD, ERROR_NO_RIGHT_SELF_MAPPING, ERROR_NO_CONNECTION_ID_OLD, ERROR_LENGTH_OLD, ERROR_NO_DEVICE_ID_TYPE_OLD, ERROR_PUSH_SERVER_OLD, ERROR_NO_TOKEN_OLD, ERROR_HMS_CLIENT_API, ERROR_OPERATION_NOT_SUPPORTED, ERROR_MAIN_THREAD, ERROR_HMS_DEVICE_AUTH_FAILED_SELF_MAPPING, ERROR_BIND_SERVICE_SELF_MAPPING, ERROR_AUTO_INITIALIZING, ERROR_RETRY_LATER_SELF_MAPPING, ERROR_SEND_SELF_MAPPING, ERROR_MISSING_PROJECT_ID, ERROR_RESTRICT_GET_TOKEN, ERROR_GET_3RD_PARTY_TOKEN_FAILED, ERROR_DELETE_3RD_PARTY_TOKEN_FAILED, ERROR_3RD_PARTY_INTERNAL_ERROR, ERROR_FETCH_DOMAIN_FAILED, ERROR_BUILD_CONTENT_ERROR, ERROR_HWID_NOT_LOGIN, ERROR_PROFILE_EXCEED, ERROR_OPER_IN_CHILD_PROCESS };
    ENUM_MAPPER = new SparseArray();
    localObject1 = values();
    int j = localObject1.length;
    while (i < j)
    {
      Object localObject2 = localObject1[i];
      ENUM_MAPPER.put(localObject2.internalCode, localObject2);
      ENUM_MAPPER.put(localObject2.externalCode, localObject2);
      i += 1;
    }
  }
  
  public ErrorEnum(int paramInt1, int paramInt2, String paramString)
  {
    this.internalCode = paramInt1;
    this.externalCode = paramInt2;
    this.message = paramString;
  }
  
  public static ErrorEnum fromCode(int paramInt)
  {
    return (ErrorEnum)ENUM_MAPPER.get(paramInt, ERROR_UNKNOWN);
  }
  
  public int getExternalCode()
  {
    return this.externalCode;
  }
  
  public int getInternalCode()
  {
    return this.internalCode;
  }
  
  public String getMessage()
  {
    return this.message;
  }
  
  public ApiException toApiException()
  {
    return new ApiException(new Status(getExternalCode(), getMessage()));
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mobileqq\classes2.jar
 * Qualified Name:     com.huawei.hms.aaid.constant.ErrorEnum
 * JD-Core Version:    0.7.0.1
 */