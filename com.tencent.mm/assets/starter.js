!function(e){"use strict";var t,r=Object.prototype.toString,o=function(e){var t=r.call(e),o="[object Arguments]"===t;return o||(o="[object Array]"!==t&&null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Function]"===r.call(e.callee)),o};if(!Object.keys){var n=Object.prototype.hasOwnProperty,l=Object.prototype.toString,i=o,c=Object.prototype.propertyIsEnumerable,u=!c.call({toString:null},"toString"),a=c.call((function(){}),"prototype"),f=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],s=function(e){var t=e.constructor;return t&&t.prototype===e},p={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},y=function(){if("undefined"==typeof window)return!1;for(var e in window)try{if(!p["$"+e]&&n.call(window,e)&&null!==window[e]&&"object"==typeof window[e])try{s(window[e])}catch(e){return!0}}catch(e){return!0}return!1}();t=function(e){var t=null!==e&&"object"==typeof e,r="[object Function]"===l.call(e),o=i(e),c=t&&"[object String]"===l.call(e),p=[];if(!t&&!r&&!o)throw new TypeError("Object.keys called on a non-object");var b=a&&r;if(c&&e.length>0&&!n.call(e,0))for(var h=0;h<e.length;++h)p.push(String(h));if(o&&e.length>0)for(var d=0;d<e.length;++d)p.push(String(d));else for(var g in e)b&&"prototype"===g||!n.call(e,g)||p.push(String(g));if(u)for(var w=function(e){if("undefined"==typeof window||!y)return s(e);try{return s(e)}catch(e){return!1}}(e),j=0;j<f.length;++j)w&&"constructor"===f[j]||!n.call(e,f[j])||p.push(f[j]);return p}}var b=t,h=Array.prototype.slice,d=Object.keys,g=d?function(e){return d(e)}:b,w=Object.keys;g.shim=function(){Object.keys?function(){var e=Object.keys(arguments);return e&&e.length===arguments.length}(1,2)||(Object.keys=function(e){return o(e)?w(h.call(e)):w(e)}):Object.keys=g;return Object.keys||g};var j=g,v="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),O=Object.prototype.toString,m=Array.prototype.concat,$=Object.defineProperty,S=$&&function(){var e={};try{for(var t in $(e,"x",{enumerable:!1,value:e}),e)return!1;return e.x===e}catch(e){return!1}}(),k=function(e,t,r,o){var n;(!(t in e)||"function"==typeof(n=o)&&"[object Function]"===O.call(n)&&o())&&(S?$(e,t,{configurable:!0,enumerable:!1,value:r,writable:!0}):e[t]=r)},x=function(e,t){var r=arguments.length>2?arguments[2]:{},o=j(t);v&&(o=m.call(o,Object.getOwnPropertySymbols(t)));for(var n=0;n<o.length;n+=1)k(e,o[n],t[o[n]],r[o[n]])};x.supportsDescriptors=!!S;var P=x,T="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};var I,E=(function(e){"undefined"!=typeof self?e.exports=self:"undefined"!=typeof window?e.exports=window:e.exports=Function("return this")()}(I={exports:{}},I.exports),I.exports),M=function(){return"object"==typeof T&&T&&T.Math===Math&&T.Array===Array?T:E},A=M(),D=function(){return A};P(D,{getPolyfill:M,implementation:E,shim:function(){var e=M();if(P.supportsDescriptors){var t=Object.getOwnPropertyDescriptor(e,"globalThis");(!t||t.configurable&&(t.enumerable||t.writable||globalThis!==e))&&Object.defineProperty(e,"globalThis",{configurable:!0,enumerable:!1,value:e,writable:!1})}else"object"==typeof globalThis&&globalThis===e||(e.globalThis=e);return e}});let F=D();class z{constructor(){this.currentModuleId="",this.cache={}}getPath(e){return e}register(e,t){if(!this.currentModuleId)throw new Error("not module id");let r={},o=t(((e,t)=>{if("string"==typeof e)r[e]=t;else for(let t in e)r[t]=e[t];return t}));e.forEach(((e,t)=>{let r=this.cache[e];if(!r)throw new Error(`dep ${e} not found`);o.setters[t](r)})),o.execute(),this.cache[this.currentModuleId]=r,this.currentModuleId=""}}F.System=new z,e.SystemClass=z,Object.defineProperty(e,"__esModule",{value:!0})}({});
