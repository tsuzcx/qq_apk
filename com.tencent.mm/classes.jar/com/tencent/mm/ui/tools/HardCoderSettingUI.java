package com.tencent.mm.ui.tools;

import android.app.Activity;
import android.app.Dialog;
import android.app.TimePickerDialog;
import android.app.TimePickerDialog.OnTimeSetListener;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.text.Editable;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import com.tencent.matrix.trace.core.AppMethodBeat;
import com.tencent.mm.hardcoder.WXHardCoderJNI;
import com.tencent.mm.plugin.hardcoder.a;
import com.tencent.mm.pluginsdk.f.h;
import com.tencent.mm.sdk.platformtools.aa;
import com.tencent.mm.sdk.platformtools.ab;
import com.tencent.mm.sdk.platformtools.ah;
import com.tencent.mm.sdk.platformtools.bo;
import com.tencent.mm.ui.MMActivity;
import java.sql.Time;
import java.text.DateFormat;

public class HardCoderSettingUI
  extends MMActivity
{
  private EditText AsA;
  private Spinner AsB;
  private Spinner AsC;
  private CheckBox AsD;
  private CheckBox AsE;
  private EditText AsF;
  private EditText AsG;
  private EditText AsH;
  private Spinner AsI;
  private Spinner AsJ;
  private CheckBox AsK;
  private CheckBox AsL;
  private EditText AsM;
  private EditText AsN;
  private EditText AsO;
  private Spinner AsP;
  private Spinner AsQ;
  private CheckBox AsR;
  private CheckBox AsS;
  private EditText AsT;
  private EditText AsU;
  private EditText AsV;
  private Spinner AsW;
  private Spinner AsX;
  private CheckBox AsY;
  private CheckBox AsZ;
  private CheckBox Asc;
  private EditText Asd;
  private CheckBox Ase;
  private CheckBox Asf;
  private CheckBox Asg;
  private TextView Ash;
  private TextView Asi;
  private CheckBox Asj;
  private EditText Ask;
  private EditText Asl;
  private EditText Asm;
  private Spinner Asn;
  private Spinner Aso;
  private CheckBox Asp;
  private CheckBox Asq;
  private EditText Asr;
  private EditText Ass;
  private EditText Ast;
  private Spinner Asu;
  private Spinner Asv;
  private CheckBox Asw;
  private CheckBox Asx;
  private EditText Asy;
  private EditText Asz;
  private EditText AtA;
  private EditText AtB;
  private Spinner AtC;
  private Spinner AtD;
  private CheckBox AtE;
  private CheckBox AtF;
  private EditText AtG;
  private EditText AtH;
  private EditText AtI;
  private Spinner AtJ;
  private Spinner AtK;
  private CheckBox AtL;
  private CheckBox AtM;
  private EditText AtN;
  private EditText AtO;
  private EditText AtP;
  private Spinner AtQ;
  private Spinner AtR;
  private CheckBox AtS;
  private CheckBox AtT;
  private EditText AtU;
  private EditText AtV;
  private EditText AtW;
  private Spinner AtX;
  private Spinner AtY;
  private CheckBox AtZ;
  private EditText Ata;
  private EditText Atb;
  private EditText Atc;
  private Spinner Atd;
  private Spinner Ate;
  private CheckBox Atf;
  private EditText Atg;
  private CheckBox Ath;
  private EditText Ati;
  private EditText Atj;
  private EditText Atk;
  private EditText Atl;
  private EditText Atm;
  private EditText Atn;
  private Spinner Ato;
  private Spinner Atp;
  private CheckBox Atq;
  private CheckBox Atr;
  private EditText Ats;
  private EditText Att;
  private EditText Atu;
  private Spinner Atv;
  private Spinner Atw;
  private CheckBox Atx;
  private CheckBox Aty;
  private EditText Atz;
  private Spinner AuA;
  private CheckBox AuB;
  private CheckBox AuC;
  private EditText AuD;
  private EditText AuE;
  private EditText AuF;
  private Spinner AuG;
  private Spinner AuH;
  private CheckBox AuI;
  private CheckBox Aua;
  private EditText Aub;
  private EditText Auc;
  private EditText Aud;
  private Spinner Aue;
  private Spinner Auf;
  private CheckBox Aug;
  private CheckBox Auh;
  private EditText Aui;
  private EditText Auj;
  private EditText Auk;
  private Spinner Aul;
  private Spinner Aum;
  private CheckBox Aun;
  private CheckBox Auo;
  private EditText Aup;
  private EditText Auq;
  private EditText Aur;
  private Spinner Aus;
  private Spinner Aut;
  private CheckBox Auu;
  private CheckBox Auv;
  private EditText Auw;
  private EditText Aux;
  private EditText Auy;
  private Spinner Auz;
  private boolean qHM;
  private final TimePickerDialog.OnTimeSetListener qHN;
  
  public HardCoderSettingUI()
  {
    AppMethodBeat.i(34875);
    this.qHM = false;
    this.qHN = new HardCoderSettingUI.5(this);
    AppMethodBeat.o(34875);
  }
  
  private static void a(SharedPreferences.Editor paramEditor)
  {
    AppMethodBeat.i(34879);
    paramEditor.putBoolean("KEY_HC_ENABLE", WXHardCoderJNI.getEnable());
    paramEditor.putBoolean("KEY_HC_DEBUG", WXHardCoderJNI.getDebug());
    paramEditor.putInt("KEY_HC_RETRY_INTERVAL", WXHardCoderJNI.hcRetryInterval);
    paramEditor.putBoolean("KEY_HC_TIME_LIMIT", WXHardCoderJNI.hcTimeLimit);
    paramEditor.putInt("KEY_HC_BEGIN_TIME_HOUR", WXHardCoderJNI.hcBeginTimeHour);
    paramEditor.putInt("KEY_HC_BEGIN_TIME_MIN", WXHardCoderJNI.hcBeginTimeMin);
    paramEditor.putInt("KEY_HC_END_TIME_HOUR", WXHardCoderJNI.hcEndTimeHour);
    paramEditor.putInt("KEY_HC_END_TIME_MIN", WXHardCoderJNI.hcEndTimeMin);
    paramEditor.putBoolean("KEY_HC_BOOT_ENABLE", WXHardCoderJNI.hcBootEnable);
    paramEditor.putInt("KEY_HC_BOOT_DELEY", WXHardCoderJNI.hcBootDelay);
    paramEditor.putInt("KEY_HC_BOOT_CPU", WXHardCoderJNI.hcBootCPU);
    paramEditor.putInt("KEY_HC_BOOT_IO", WXHardCoderJNI.hcBootIO);
    paramEditor.putBoolean("KEY_HC_BOOT_THR", WXHardCoderJNI.hcBootThr);
    paramEditor.putInt("KEY_HC_BOOT_TIMEOUT", WXHardCoderJNI.hcBootTimeout);
    paramEditor.putLong("KEY_HC_BOOT_ACTION", WXHardCoderJNI.hcBootAction);
    paramEditor.putBoolean("KEY_HC_ENTER_CHATTING_ENABLE", WXHardCoderJNI.hcEnterChattingEnable);
    paramEditor.putInt("KEY_HC_ENTER_CHATTING_DELEY", WXHardCoderJNI.hcEnterChattingDelay);
    paramEditor.putInt("KEY_HC_ENTER_CHATTING_CPU", WXHardCoderJNI.hcEnterChattingCPU);
    paramEditor.putInt("KEY_HC_ENTER_CHATTING_IO", WXHardCoderJNI.hcEnterChattingIO);
    paramEditor.putBoolean("KEY_HC_ENTER_CHATTING_THR", WXHardCoderJNI.hcEnterChattingThr);
    paramEditor.putInt("KEY_HC_ENTER_CHATTING_TIMEOUT", WXHardCoderJNI.hcEnterChattingTimeout);
    paramEditor.putLong("KEY_HC_ENTER_CHATTING_ACTION", WXHardCoderJNI.hcEnterChattingAction);
    paramEditor.putBoolean("KEY_HC_QUIT_CHATTING_ENABLE", WXHardCoderJNI.hcQuitChattingEnable);
    paramEditor.putInt("KEY_HC_QUIT_CHATTING_DELEY", WXHardCoderJNI.hcQuitChattingDelay);
    paramEditor.putInt("KEY_HC_QUIT_CHATTING_CPU", WXHardCoderJNI.hcQuitChattingCPU);
    paramEditor.putInt("KEY_HC_QUIT_CHATTING_IO", WXHardCoderJNI.hcQuitChattingIO);
    paramEditor.putBoolean("KEY_HC_QUIT_CHATTING_THR", WXHardCoderJNI.hcQuitChattingThr);
    paramEditor.putInt("KEY_HC_QUIT_CHATTING_TIMEOUT", WXHardCoderJNI.hcQuitChattingTimeout);
    paramEditor.putLong("KEY_HC_QUIT_CHATTING_ACTION", WXHardCoderJNI.hcQuitChattingAction);
    paramEditor.putBoolean("KEY_HC_SEND_MSG_ENABLE", WXHardCoderJNI.hcSendMsgEnable);
    paramEditor.putInt("KEY_HC_SEND_MSG_DELEY", WXHardCoderJNI.hcSendMsgDelay);
    paramEditor.putInt("KEY_HC_SEND_MSG_CPU", WXHardCoderJNI.hcSendMsgCPU);
    paramEditor.putInt("KEY_HC_SEND_MSG_IO", WXHardCoderJNI.hcSendMsgIO);
    paramEditor.putBoolean("KEY_HC_SEND_MSG_THR", WXHardCoderJNI.hcSendMsgThr);
    paramEditor.putInt("KEY_HC_SEND_MSG_TIMEOUT", WXHardCoderJNI.hcSendMsgTimeout);
    paramEditor.putLong("KEY_HC_SEND_MSG_ACTION", WXHardCoderJNI.hcSendMsgAction);
    paramEditor.putBoolean("KEY_HC_SEND_PIC_MSG_ENABLE", WXHardCoderJNI.hcSendPicMsgEnable);
    paramEditor.putInt("KEY_HC_SEND_PIC_MSG_DELEY", WXHardCoderJNI.hcSendPicMsgDelay);
    paramEditor.putInt("KEY_HC_SEND_PIC_MSG_CPU", WXHardCoderJNI.hcSendPicMsgCPU);
    paramEditor.putInt("KEY_HC_SEND_PIC_MSG_IO", WXHardCoderJNI.hcSendPicMsgIO);
    paramEditor.putBoolean("KEY_HC_SEND_PIC_MSG_THR", WXHardCoderJNI.hcSendPicMsgThr);
    paramEditor.putInt("KEY_HC_SEND_PIC_MSG_TIMEOUT", WXHardCoderJNI.hcSendPicMsgTimeout);
    paramEditor.putLong("KEY_HC_SEND_PIC_MSG_ACTION", WXHardCoderJNI.hcSendPicMsgAction);
    paramEditor.putBoolean("KEY_HC_RECEIVE_MSG_ENABLE", WXHardCoderJNI.hcReceiveMsgEnable);
    paramEditor.putInt("KEY_HC_RECEIVE_MSG_DELEY", WXHardCoderJNI.hcReceiveMsgDelay);
    paramEditor.putInt("KEY_HC_RECEIVE_MSG_CPU", WXHardCoderJNI.hcReceiveMsgCPU);
    paramEditor.putInt("KEY_HC_RECEIVE_MSG_IO", WXHardCoderJNI.hcReceiveMsgIO);
    paramEditor.putBoolean("KEY_HC_RECEIVE_MSG_THR", WXHardCoderJNI.hcReceiveMsgThr);
    paramEditor.putInt("KEY_HC_RECEIVE_MSG_TIMEOUT", WXHardCoderJNI.hcReceiveMsgTimeout);
    paramEditor.putLong("KEY_HC_RECEIVE_MSG_ACTION", WXHardCoderJNI.hcReceiveMsgAction);
    paramEditor.putBoolean("KEY_HC_UPDATE_CHATROOM_ENABLE", WXHardCoderJNI.hcUpdateChatroomEnable);
    paramEditor.putInt("KEY_HC_UPDATE_CHATROOM_DELEY", WXHardCoderJNI.hcUpdateChatroomDelay);
    paramEditor.putInt("KEY_HC_UPDATE_CHATROOM_CPU", WXHardCoderJNI.hcUpdateChatroomCPU);
    paramEditor.putInt("KEY_HC_UPDATE_CHATROOM_IO", WXHardCoderJNI.hcUpdateChatroomIO);
    paramEditor.putBoolean("KEY_HC_UPDATE_CHATROOM_THR", WXHardCoderJNI.hcUpdateChatroomThr);
    paramEditor.putInt("KEY_HC_UPDATE_CHATROOM_TIMEOUT", WXHardCoderJNI.hcUpdateChatroomTimeout);
    paramEditor.putLong("KEY_HC_UPDATE_CHATROOM_ACTION", WXHardCoderJNI.hcUpdateChatroomAction);
    paramEditor.putLong("KEY_HC_UPDATE_CHATROOM_MEMBER_COUNT", WXHardCoderJNI.hcUpdateChatroomMemberCount);
    paramEditor.putBoolean("KEY_HC_DB_ENABLE", WXHardCoderJNI.hcDBEnable);
    paramEditor.putInt("KEY_HC_DB_DELEY_QUERY", WXHardCoderJNI.hcDBDelayQuery);
    paramEditor.putInt("KEY_HC_DB_DELEY_WRITE", WXHardCoderJNI.hcDBDelayWrite);
    paramEditor.putInt("KEY_HC_DB_CPU", WXHardCoderJNI.hcDBCPU);
    paramEditor.putInt("KEY_HC_DB_IO", WXHardCoderJNI.hcDBIO);
    paramEditor.putBoolean("KEY_HC_DB_THR", WXHardCoderJNI.hcDBThr);
    paramEditor.putInt("KEY_HC_DB_TIMEOUT", WXHardCoderJNI.hcDBTimeout);
    paramEditor.putInt("KEY_HC_DB_TIMEOUT", WXHardCoderJNI.hcDBTimeoutBusy);
    paramEditor.putLong("KEY_HC_DB_ACTION_QUERY", WXHardCoderJNI.hcDBActionQuery);
    paramEditor.putLong("KEY_HC_DB_ACTION_WRITE", WXHardCoderJNI.hcDBActionWrite);
    paramEditor.putBoolean("KEY_HC_ENCODE_VIDEO_ENABLE", WXHardCoderJNI.hcEncodeVideoEnable);
    paramEditor.putInt("KEY_HC_ENCODE_VIDEO_DELEY", WXHardCoderJNI.hcEncodeVideoDelay);
    paramEditor.putInt("KEY_HC_ENCODE_VIDEO_CPU", WXHardCoderJNI.hcEncodeVideoCPU);
    paramEditor.putInt("KEY_HC_ENCODE_VIDEO_IO", WXHardCoderJNI.hcEncodeVideoIO);
    paramEditor.putBoolean("KEY_HC_ENCODE_VIDEO_THR", WXHardCoderJNI.hcEncodeVideoThr);
    paramEditor.putInt("KEY_HC_ENCODE_VIDEO_TIMEOUT", WXHardCoderJNI.hcEncodeVideoTimeout);
    paramEditor.putLong("KEY_HC_ENCODE_VIDEO_ACTION", WXHardCoderJNI.hcEncodeVideoAction);
    paramEditor.putBoolean("KEY_HC_DECODE_PIC_ENABLE", WXHardCoderJNI.hcDecodePicEnable);
    paramEditor.putInt("KEY_HC_DECODE_PIC_DELEY", WXHardCoderJNI.hcDecodePicDelay);
    paramEditor.putInt("KEY_HC_DECODE_PIC_CPU", WXHardCoderJNI.hcDecodePicCPU);
    paramEditor.putInt("KEY_HC_DECODE_PIC_IO", WXHardCoderJNI.hcDecodePicIO);
    paramEditor.putBoolean("KEY_HC_DECODE_PIC_THR", WXHardCoderJNI.hcDecodePicThr);
    paramEditor.putInt("KEY_HC_DECODE_PIC_TIMEOUT", WXHardCoderJNI.hcDecodePicTimeout);
    paramEditor.putLong("KEY_HC_DECODE_PIC_ACTION", WXHardCoderJNI.hcDecodePicAction);
    paramEditor.putBoolean("KEY_HC_GIF_ENABLE", WXHardCoderJNI.hcGifEnable);
    paramEditor.putInt("KEY_HC_GIF_DELEY", WXHardCoderJNI.hcGifDelay);
    paramEditor.putInt("KEY_HC_GIF_CPU", WXHardCoderJNI.hcGifCPU);
    paramEditor.putInt("KEY_HC_GIF_IO", WXHardCoderJNI.hcGifIO);
    paramEditor.putBoolean("KEY_HC_GIF_THR", WXHardCoderJNI.hcGifThr);
    paramEditor.putInt("KEY_HC_GIF_TIMEOUT", WXHardCoderJNI.hcGifTimeout);
    paramEditor.putLong("KEY_HC_GIF_ACTION", WXHardCoderJNI.hcGifAction);
    paramEditor.putBoolean("KEY_HC_GIF_FRAME_ENABLE", WXHardCoderJNI.hcGifFrameEnable);
    paramEditor.putInt("KEY_HC_GIF_FRAME_DELEY", WXHardCoderJNI.hcGifFrameDelay);
    paramEditor.putInt("KEY_HC_GIF_FRAME_CPU", WXHardCoderJNI.hcGifFrameCPU);
    paramEditor.putInt("KEY_HC_GIF_FRAME_IO", WXHardCoderJNI.hcGifFrameIO);
    paramEditor.putBoolean("KEY_HC_GIF_FRAME_THR", WXHardCoderJNI.hcGifFrameThr);
    paramEditor.putInt("KEY_HC_GIF_FRAME_TIMEOUT", WXHardCoderJNI.hcGifFrameTimeout);
    paramEditor.putLong("KEY_HC_GIF_FRAME_ACTION", WXHardCoderJNI.hcGifFrameAction);
    paramEditor.putBoolean("KEY_HC_SNS_SCROLL_ENABLE", WXHardCoderJNI.hcSNSScrollEnable);
    paramEditor.putInt("KEY_HC_SNS_SCROLL_DELEY", WXHardCoderJNI.hcSNSScrollDelay);
    paramEditor.putInt("KEY_HC_SNS_SCROLL_CPU", WXHardCoderJNI.hcSNSScrollCPU);
    paramEditor.putInt("KEY_HC_SNS_SCROLL_IO", WXHardCoderJNI.hcSNSScrollIO);
    paramEditor.putBoolean("KEY_HC_SNS_SCROLL_THR", WXHardCoderJNI.hcSNSScrollThr);
    paramEditor.putInt("KEY_HC_SNS_SCROLL_TIMEOUT", WXHardCoderJNI.hcSNSScrollTimeout);
    paramEditor.putLong("KEY_HC_SNS_SCROLL_ACTION", WXHardCoderJNI.hcSNSScrollAction);
    paramEditor.putBoolean("KEY_HC_SNS_USER_SCROLL_ENABLE", WXHardCoderJNI.hcSNSUserScrollEnable);
    paramEditor.putInt("KEY_HC_SNS_USER_SCROLL_DELEY", WXHardCoderJNI.hcSNSUserScrollDelay);
    paramEditor.putInt("KEY_HC_SNS_USER_SCROLL_CPU", WXHardCoderJNI.hcSNSUserScrollCPU);
    paramEditor.putInt("KEY_HC_SNS_USER_SCROLL_IO", WXHardCoderJNI.hcSNSUserScrollIO);
    paramEditor.putBoolean("KEY_HC_SNS_USER_SCROLL_THR", WXHardCoderJNI.hcSNSUserScrollThr);
    paramEditor.putInt("KEY_HC_SNS_USER_SCROLL_TIMEOUT", WXHardCoderJNI.hcSNSUserScrollTimeout);
    paramEditor.putLong("KEY_HC_SNS_USER_SCROLL_ACTION", WXHardCoderJNI.hcSNSUserScrollAction);
    paramEditor.putBoolean("KEY_HC_SNS_MSG_SCROLL_ENABLE", WXHardCoderJNI.hcSNSMsgScrollEnable);
    paramEditor.putInt("KEY_HC_SNS_MSG_SCROLL_DELEY", WXHardCoderJNI.hcSNSMsgScrollDelay);
    paramEditor.putInt("KEY_HC_SNS_MSG_SCROLL_CPU", WXHardCoderJNI.hcSNSMsgScrollCPU);
    paramEditor.putInt("KEY_HC_SNS_MSG_SCROLL_IO", WXHardCoderJNI.hcSNSMsgScrollIO);
    paramEditor.putBoolean("KEY_HC_SNS_MSG_SCROLL_THR", WXHardCoderJNI.hcSNSMsgScrollThr);
    paramEditor.putInt("KEY_HC_SNS_MSG_SCROLL_TIMEOUT", WXHardCoderJNI.hcSNSMsgScrollTimeout);
    paramEditor.putLong("KEY_HC_SNS_MSG_SCROLL_ACTION", WXHardCoderJNI.hcSNSMsgScrollAction);
    paramEditor.putBoolean("KEY_HC_MEDIA_GALLERY_SCROLL_ENABLE", WXHardCoderJNI.hcMediaGalleryScrollEnable);
    paramEditor.putInt("KEY_HC_MEDIA_GALLERY_SCROLL_DELEY", WXHardCoderJNI.hcMediaGalleryScrollDelay);
    paramEditor.putInt("KEY_HC_MEDIA_GALLERY_SCROLL_CPU", WXHardCoderJNI.hcMediaGalleryScrollCPU);
    paramEditor.putInt("KEY_HC_MEDIA_GALLERY_SCROLL_IO", WXHardCoderJNI.hcMediaGalleryScrollIO);
    paramEditor.putBoolean("KEY_HC_MEDIA_GALLERY_SCROLL_THR", WXHardCoderJNI.hcMediaGalleryScrollThr);
    paramEditor.putInt("KEY_HC_MEDIA_GALLERY_SCROLL_TIMEOUT", WXHardCoderJNI.hcMediaGalleryScrollTimeout);
    paramEditor.putLong("KEY_HC_MEDIA_GALLERY_SCROLL_ACTION", WXHardCoderJNI.hcMediaGalleryScrollAction);
    paramEditor.putBoolean("KEY_HCALBUM_SCROLL_ENABLE", WXHardCoderJNI.hcAlbumScrollEnable);
    paramEditor.putInt("KEY_HC_ALBUM_SCROLL_DELEY", WXHardCoderJNI.hcAlbumScrollDelay);
    paramEditor.putInt("KEY_HC_ALBUM_SCROLL_CPU", WXHardCoderJNI.hcAlbumScrollCPU);
    paramEditor.putInt("KEY_HC_ALBUM_SCROLL_IO", WXHardCoderJNI.hcAlbumScrollIO);
    paramEditor.putBoolean("KEY_HC_ALBUM_SCROLL_THR", WXHardCoderJNI.hcAlbumScrollThr);
    paramEditor.putInt("KEY_HC_ALBUM_SCROLL_TIMEOUT", WXHardCoderJNI.hcAlbumScrollTimeout);
    paramEditor.putLong("KEY_HC_ALBUM_SCROLL_ACTION", WXHardCoderJNI.hcAlbumScrollAction);
    paramEditor.apply();
    AppMethodBeat.o(34879);
  }
  
  private static String d(Context paramContext, int paramInt1, int paramInt2)
  {
    AppMethodBeat.i(34880);
    String str1 = aa.g(paramContext.getSharedPreferences(ah.dsP(), 0));
    String str2 = aa.dsG();
    if ((!str1.equalsIgnoreCase("zh_CN")) && ((!str1.equalsIgnoreCase("language_default")) || (!"zh_CN".equalsIgnoreCase(str2))))
    {
      paramContext = DateFormat.getTimeInstance(3, aa.apg(str1)).format(new Time(paramInt1, paramInt2, 0));
      AppMethodBeat.o(34880);
      return paramContext;
    }
    if (paramInt1 > 12) {}
    for (int i = paramInt1 - 12;; i = paramInt1)
    {
      paramContext = h.r(paramContext, paramInt1 * 3600000L + paramInt2 * 60000L) + String.format("%02d:%02d", new Object[] { Integer.valueOf(i), Integer.valueOf(paramInt2) });
      AppMethodBeat.o(34880);
      return paramContext;
    }
  }
  
  public int getLayoutId()
  {
    return 2130969853;
  }
  
  public void onCreate(Bundle paramBundle)
  {
    AppMethodBeat.i(34876);
    super.onCreate(paramBundle);
    setMMTitle(2131303272);
    setBackBtn(new HardCoderSettingUI.1(this));
    paramBundle = getContext().getSharedPreferences("hardcoder_setting", 0);
    if (!paramBundle.contains("KEY_HC_ENABLE")) {
      a(paramBundle.edit().putBoolean("KEY_HC_ENABLE", true));
    }
    this.Ase = ((CheckBox)findViewById(2131824837));
    this.Ase.setChecked(WXHardCoderJNI.getDebug());
    this.Asc = ((CheckBox)findViewById(2131824836));
    this.Asc.setChecked(WXHardCoderJNI.getEnable());
    this.Asd = ((EditText)findViewById(2131824839));
    this.Asd.setText(WXHardCoderJNI.hcRetryInterval);
    this.Asf = ((CheckBox)findViewById(2131824838));
    this.Asg = ((CheckBox)findViewById(2131824840));
    this.Asg.setChecked(WXHardCoderJNI.hcTimeLimit);
    this.Ash = ((TextView)findViewById(2131824841));
    this.Asi = ((TextView)findViewById(2131824842));
    this.Ash.setText(d(this, WXHardCoderJNI.hcBeginTimeHour, WXHardCoderJNI.hcBeginTimeMin));
    this.Asi.setText(d(this, WXHardCoderJNI.hcEndTimeHour, WXHardCoderJNI.hcEndTimeMin));
    this.Ash.setOnClickListener(new HardCoderSettingUI.2(this));
    this.Asi.setOnClickListener(new HardCoderSettingUI.3(this));
    this.Asj = ((CheckBox)findViewById(2131824843));
    this.Asj.setChecked(WXHardCoderJNI.hcBootEnable);
    this.Ask = ((EditText)findViewById(2131824845));
    this.Ask.setText(WXHardCoderJNI.hcBootDelay);
    this.Asl = ((EditText)findViewById(2131824844));
    this.Asl.setText(WXHardCoderJNI.hcBootTimeout);
    this.Asl.setSelection(this.Asl.getText().length());
    this.Asm = ((EditText)findViewById(2131824846));
    this.Asm.setText(WXHardCoderJNI.hcBootAction);
    this.Asn = ((Spinner)findViewById(2131824847));
    this.Asn.setSelection(WXHardCoderJNI.hcBootCPU);
    this.Aso = ((Spinner)findViewById(2131824848));
    this.Aso.setSelection(WXHardCoderJNI.hcBootIO);
    this.Asp = ((CheckBox)findViewById(2131824849));
    this.Asp.setChecked(WXHardCoderJNI.hcBootThr);
    this.Asq = ((CheckBox)findViewById(2131824857));
    this.Asq.setChecked(WXHardCoderJNI.hcEnterChattingEnable);
    this.Asr = ((EditText)findViewById(2131824859));
    this.Asr.setText(WXHardCoderJNI.hcEnterChattingDelay);
    this.Ass = ((EditText)findViewById(2131824858));
    this.Ass.setText(WXHardCoderJNI.hcEnterChattingTimeout);
    this.Ass.setSelection(this.Ass.getText().length());
    this.Ast = ((EditText)findViewById(2131824860));
    this.Ast.setText(WXHardCoderJNI.hcEnterChattingAction);
    this.Asu = ((Spinner)findViewById(2131824861));
    this.Asu.setSelection(WXHardCoderJNI.hcEnterChattingCPU);
    this.Asv = ((Spinner)findViewById(2131824862));
    this.Asv.setSelection(WXHardCoderJNI.hcEnterChattingIO);
    this.Asw = ((CheckBox)findViewById(2131824863));
    this.Asw.setChecked(WXHardCoderJNI.hcEnterChattingThr);
    this.Asx = ((CheckBox)findViewById(2131824864));
    this.Asx.setChecked(WXHardCoderJNI.hcQuitChattingEnable);
    this.Asy = ((EditText)findViewById(2131824866));
    this.Asy.setText(WXHardCoderJNI.hcQuitChattingDelay);
    this.Asz = ((EditText)findViewById(2131824865));
    this.Asz.setText(WXHardCoderJNI.hcQuitChattingTimeout);
    this.Asz.setSelection(this.Asz.getText().length());
    this.AsA = ((EditText)findViewById(2131824867));
    this.AsA.setText(WXHardCoderJNI.hcQuitChattingAction);
    this.AsB = ((Spinner)findViewById(2131824868));
    this.AsB.setSelection(WXHardCoderJNI.hcQuitChattingCPU);
    this.AsC = ((Spinner)findViewById(2131824869));
    this.AsC.setSelection(WXHardCoderJNI.hcQuitChattingIO);
    this.AsD = ((CheckBox)findViewById(2131824870));
    this.AsD.setChecked(WXHardCoderJNI.hcQuitChattingThr);
    this.AsE = ((CheckBox)findViewById(2131824878));
    this.AsE.setChecked(WXHardCoderJNI.hcSendMsgEnable);
    this.AsF = ((EditText)findViewById(2131824880));
    this.AsF.setText(WXHardCoderJNI.hcSendMsgDelay);
    this.AsG = ((EditText)findViewById(2131824879));
    this.AsG.setText(WXHardCoderJNI.hcSendMsgTimeout);
    this.AsG.setSelection(this.AsG.getText().length());
    this.AsH = ((EditText)findViewById(2131824881));
    this.AsH.setText(WXHardCoderJNI.hcSendMsgAction);
    this.AsI = ((Spinner)findViewById(2131824882));
    this.AsI.setSelection(WXHardCoderJNI.hcSendMsgCPU);
    this.AsJ = ((Spinner)findViewById(2131824883));
    this.AsJ.setSelection(WXHardCoderJNI.hcSendMsgIO);
    this.AsK = ((CheckBox)findViewById(2131824884));
    this.AsK.setChecked(WXHardCoderJNI.hcSendMsgThr);
    this.AsL = ((CheckBox)findViewById(2131824871));
    this.AsL.setChecked(WXHardCoderJNI.hcSendPicMsgEnable);
    this.AsM = ((EditText)findViewById(2131824873));
    this.AsM.setText(WXHardCoderJNI.hcSendPicMsgDelay);
    this.AsN = ((EditText)findViewById(2131824872));
    this.AsN.setText(WXHardCoderJNI.hcSendPicMsgTimeout);
    this.AsN.setSelection(this.AsN.getText().length());
    this.AsO = ((EditText)findViewById(2131824874));
    this.AsO.setText(WXHardCoderJNI.hcSendPicMsgAction);
    this.AsP = ((Spinner)findViewById(2131824875));
    this.AsP.setSelection(WXHardCoderJNI.hcSendPicMsgCPU);
    this.AsQ = ((Spinner)findViewById(2131824876));
    this.AsQ.setSelection(WXHardCoderJNI.hcSendPicMsgIO);
    this.AsR = ((CheckBox)findViewById(2131824877));
    this.AsR.setChecked(WXHardCoderJNI.hcSendPicMsgThr);
    this.AsS = ((CheckBox)findViewById(2131824885));
    this.AsS.setChecked(WXHardCoderJNI.hcReceiveMsgEnable);
    this.AsT = ((EditText)findViewById(2131824887));
    this.AsT.setText(WXHardCoderJNI.hcReceiveMsgDelay);
    this.AsU = ((EditText)findViewById(2131824886));
    this.AsU.setText(WXHardCoderJNI.hcReceiveMsgTimeout);
    this.AsU.setSelection(this.AsU.getText().length());
    this.AsV = ((EditText)findViewById(2131824888));
    this.AsV.setText(WXHardCoderJNI.hcReceiveMsgAction);
    this.AsW = ((Spinner)findViewById(2131824889));
    this.AsW.setSelection(WXHardCoderJNI.hcReceiveMsgCPU);
    this.AsX = ((Spinner)findViewById(2131824890));
    this.AsX.setSelection(WXHardCoderJNI.hcReceiveMsgIO);
    this.AsY = ((CheckBox)findViewById(2131824891));
    this.AsY.setChecked(WXHardCoderJNI.hcReceiveMsgThr);
    this.AsZ = ((CheckBox)findViewById(2131824892));
    this.AsZ.setChecked(WXHardCoderJNI.hcUpdateChatroomEnable);
    this.Ata = ((EditText)findViewById(2131824895));
    this.Ata.setText(WXHardCoderJNI.hcUpdateChatroomDelay);
    this.Atb = ((EditText)findViewById(2131824894));
    this.Atb.setText(WXHardCoderJNI.hcUpdateChatroomTimeout);
    this.Atb.setSelection(this.Atb.getText().length());
    this.Atc = ((EditText)findViewById(2131824896));
    this.Atc.setText(WXHardCoderJNI.hcUpdateChatroomAction);
    this.Atd = ((Spinner)findViewById(2131824897));
    this.Atd.setSelection(WXHardCoderJNI.hcUpdateChatroomCPU);
    this.Ate = ((Spinner)findViewById(2131824898));
    this.Ate.setSelection(WXHardCoderJNI.hcUpdateChatroomIO);
    this.Atf = ((CheckBox)findViewById(2131824899));
    this.Atf.setChecked(WXHardCoderJNI.hcUpdateChatroomThr);
    this.Atg = ((EditText)findViewById(2131824893));
    this.Atg.setText(WXHardCoderJNI.hcUpdateChatroomMemberCount);
    this.Ath = ((CheckBox)findViewById(2131824900));
    this.Ath.setChecked(WXHardCoderJNI.hcDBEnable);
    this.Ati = ((EditText)findViewById(2131824902));
    this.Ati.setText(WXHardCoderJNI.hcDBDelayQuery);
    this.Atj = ((EditText)findViewById(2131824905));
    this.Atj.setText(WXHardCoderJNI.hcDBDelayWrite);
    this.Atk = ((EditText)findViewById(2131824901));
    this.Atk.setText(WXHardCoderJNI.hcDBTimeout);
    this.Atl = ((EditText)findViewById(2131824904));
    this.Atl.setText(WXHardCoderJNI.hcDBTimeoutBusy);
    this.Atm = ((EditText)findViewById(2131824903));
    this.Atm.setText(WXHardCoderJNI.hcDBActionQuery);
    this.Atn = ((EditText)findViewById(2131824906));
    this.Atn.setText(WXHardCoderJNI.hcDBActionWrite);
    this.Ato = ((Spinner)findViewById(2131824907));
    this.Ato.setSelection(WXHardCoderJNI.hcDBCPU);
    this.Atp = ((Spinner)findViewById(2131824908));
    this.Atp.setSelection(WXHardCoderJNI.hcDBIO);
    this.Atq = ((CheckBox)findViewById(2131824909));
    this.Atq.setChecked(WXHardCoderJNI.hcDBThr);
    this.Atr = ((CheckBox)findViewById(2131824850));
    this.Atr.setChecked(WXHardCoderJNI.hcEncodeVideoEnable);
    this.Ats = ((EditText)findViewById(2131824852));
    this.Ats.setText(WXHardCoderJNI.hcEncodeVideoDelay);
    this.Att = ((EditText)findViewById(2131824851));
    this.Att.setText(WXHardCoderJNI.hcEncodeVideoTimeout);
    this.Atu = ((EditText)findViewById(2131824853));
    this.Atu.setText(WXHardCoderJNI.hcEncodeVideoAction);
    this.Atv = ((Spinner)findViewById(2131824854));
    this.Atv.setSelection(WXHardCoderJNI.hcEncodeVideoCPU);
    this.Atw = ((Spinner)findViewById(2131824855));
    this.Atw.setSelection(WXHardCoderJNI.hcEncodeVideoIO);
    this.Atx = ((CheckBox)findViewById(2131824856));
    this.Atx.setChecked(WXHardCoderJNI.hcEncodeVideoThr);
    this.Aty = ((CheckBox)findViewById(2131824910));
    this.Aty.setChecked(WXHardCoderJNI.hcDecodePicEnable);
    this.Atz = ((EditText)findViewById(2131824912));
    this.Atz.setText(WXHardCoderJNI.hcDecodePicDelay);
    this.AtA = ((EditText)findViewById(2131824911));
    this.AtA.setText(WXHardCoderJNI.hcDecodePicTimeout);
    this.AtB = ((EditText)findViewById(2131824913));
    this.AtB.setText(WXHardCoderJNI.hcDecodePicAction);
    this.AtC = ((Spinner)findViewById(2131824914));
    this.AtC.setSelection(WXHardCoderJNI.hcDecodePicCPU);
    this.AtD = ((Spinner)findViewById(2131824915));
    this.AtD.setSelection(WXHardCoderJNI.hcDecodePicIO);
    this.AtE = ((CheckBox)findViewById(2131824916));
    this.AtE.setChecked(WXHardCoderJNI.hcDecodePicThr);
    this.AtF = ((CheckBox)findViewById(2131824917));
    this.AtF.setChecked(WXHardCoderJNI.hcGifEnable);
    this.AtG = ((EditText)findViewById(2131824919));
    this.AtG.setText(WXHardCoderJNI.hcGifDelay);
    this.AtH = ((EditText)findViewById(2131824918));
    this.AtH.setText(WXHardCoderJNI.hcGifTimeout);
    this.AtI = ((EditText)findViewById(2131824920));
    this.AtI.setText(WXHardCoderJNI.hcGifAction);
    this.AtJ = ((Spinner)findViewById(2131824921));
    this.AtJ.setSelection(WXHardCoderJNI.hcGifCPU);
    this.AtK = ((Spinner)findViewById(2131824922));
    this.AtK.setSelection(WXHardCoderJNI.hcGifIO);
    this.AtL = ((CheckBox)findViewById(2131824923));
    this.AtL.setChecked(WXHardCoderJNI.hcGifThr);
    this.AtM = ((CheckBox)findViewById(2131824924));
    this.AtM.setChecked(WXHardCoderJNI.hcGifFrameEnable);
    this.AtN = ((EditText)findViewById(2131824926));
    this.AtN.setText(WXHardCoderJNI.hcGifFrameDelay);
    this.AtO = ((EditText)findViewById(2131824925));
    this.AtO.setText(WXHardCoderJNI.hcGifFrameTimeout);
    this.AtP = ((EditText)findViewById(2131824927));
    this.AtP.setText(WXHardCoderJNI.hcGifFrameAction);
    this.AtQ = ((Spinner)findViewById(2131824928));
    this.AtQ.setSelection(WXHardCoderJNI.hcGifFrameCPU);
    this.AtR = ((Spinner)findViewById(2131824929));
    this.AtR.setSelection(WXHardCoderJNI.hcGifFrameIO);
    this.AtS = ((CheckBox)findViewById(2131824930));
    this.AtS.setChecked(WXHardCoderJNI.hcGifFrameThr);
    this.AtT = ((CheckBox)findViewById(2131824931));
    this.AtT.setChecked(WXHardCoderJNI.hcSNSScrollEnable);
    this.AtU = ((EditText)findViewById(2131824933));
    this.AtU.setText(WXHardCoderJNI.hcSNSScrollDelay);
    this.AtV = ((EditText)findViewById(2131824932));
    this.AtV.setText(WXHardCoderJNI.hcSNSScrollTimeout);
    this.AtW = ((EditText)findViewById(2131824934));
    this.AtW.setText(WXHardCoderJNI.hcSNSScrollAction);
    this.AtX = ((Spinner)findViewById(2131824935));
    this.AtX.setSelection(WXHardCoderJNI.hcSNSScrollCPU);
    this.AtY = ((Spinner)findViewById(2131824936));
    this.AtY.setSelection(WXHardCoderJNI.hcSNSScrollIO);
    this.AtZ = ((CheckBox)findViewById(2131824937));
    this.AtZ.setChecked(WXHardCoderJNI.hcSNSScrollThr);
    this.Aua = ((CheckBox)findViewById(2131824938));
    this.Aua.setChecked(WXHardCoderJNI.hcSNSUserScrollEnable);
    this.Aub = ((EditText)findViewById(2131824940));
    this.Aub.setText(WXHardCoderJNI.hcSNSUserScrollDelay);
    this.Auc = ((EditText)findViewById(2131824939));
    this.Auc.setText(WXHardCoderJNI.hcSNSUserScrollTimeout);
    this.Aud = ((EditText)findViewById(2131824941));
    this.Aud.setText(WXHardCoderJNI.hcSNSUserScrollAction);
    this.Aue = ((Spinner)findViewById(2131824942));
    this.Aue.setSelection(WXHardCoderJNI.hcSNSUserScrollCPU);
    this.Auf = ((Spinner)findViewById(2131824943));
    this.Auf.setSelection(WXHardCoderJNI.hcSNSUserScrollIO);
    this.Aug = ((CheckBox)findViewById(2131824944));
    this.Aug.setChecked(WXHardCoderJNI.hcSNSUserScrollThr);
    this.Auh = ((CheckBox)findViewById(2131824945));
    this.Auh.setChecked(WXHardCoderJNI.hcSNSMsgScrollEnable);
    this.Aui = ((EditText)findViewById(2131824947));
    this.Aui.setText(WXHardCoderJNI.hcSNSMsgScrollDelay);
    this.Auj = ((EditText)findViewById(2131824946));
    this.Auj.setText(WXHardCoderJNI.hcSNSMsgScrollTimeout);
    this.Auk = ((EditText)findViewById(2131824948));
    this.Auk.setText(WXHardCoderJNI.hcSNSMsgScrollAction);
    this.Aul = ((Spinner)findViewById(2131824949));
    this.Aul.setSelection(WXHardCoderJNI.hcSNSMsgScrollCPU);
    this.Aum = ((Spinner)findViewById(2131824950));
    this.Aum.setSelection(WXHardCoderJNI.hcSNSMsgScrollIO);
    this.Aun = ((CheckBox)findViewById(2131824951));
    this.Aun.setChecked(WXHardCoderJNI.hcSNSMsgScrollThr);
    this.Auo = ((CheckBox)findViewById(2131824952));
    this.Auo.setChecked(WXHardCoderJNI.hcMediaGalleryScrollEnable);
    this.Aup = ((EditText)findViewById(2131824954));
    this.Aup.setText(WXHardCoderJNI.hcMediaGalleryScrollDelay);
    this.Auq = ((EditText)findViewById(2131824953));
    this.Auq.setText(WXHardCoderJNI.hcMediaGalleryScrollTimeout);
    this.Aur = ((EditText)findViewById(2131824955));
    this.Aur.setText(WXHardCoderJNI.hcMediaGalleryScrollAction);
    this.Aus = ((Spinner)findViewById(2131824956));
    this.Aus.setSelection(WXHardCoderJNI.hcMediaGalleryScrollCPU);
    this.Aut = ((Spinner)findViewById(2131824957));
    this.Aut.setSelection(WXHardCoderJNI.hcMediaGalleryScrollIO);
    this.Auu = ((CheckBox)findViewById(2131824958));
    this.Auu.setChecked(WXHardCoderJNI.hcMediaGalleryScrollThr);
    this.Auv = ((CheckBox)findViewById(2131824959));
    this.Auv.setChecked(WXHardCoderJNI.hcAlbumScrollEnable);
    this.Auw = ((EditText)findViewById(2131824961));
    this.Auw.setText(WXHardCoderJNI.hcAlbumScrollDelay);
    this.Aux = ((EditText)findViewById(2131824960));
    this.Aux.setText(WXHardCoderJNI.hcAlbumScrollTimeout);
    this.Auy = ((EditText)findViewById(2131824962));
    this.Auy.setText(WXHardCoderJNI.hcAlbumScrollAction);
    this.Auz = ((Spinner)findViewById(2131824963));
    this.Auz.setSelection(WXHardCoderJNI.hcAlbumScrollCPU);
    this.AuA = ((Spinner)findViewById(2131824964));
    this.AuA.setSelection(WXHardCoderJNI.hcAlbumScrollIO);
    this.AuB = ((CheckBox)findViewById(2131824965));
    this.AuB.setChecked(WXHardCoderJNI.hcAlbumScrollThr);
    this.AuC = ((CheckBox)findViewById(2131824966));
    this.AuC.setChecked(WXHardCoderJNI.hcBizEnable);
    this.AuD = ((EditText)findViewById(2131824968));
    this.AuD.setText(WXHardCoderJNI.hcBizDelay);
    this.AuE = ((EditText)findViewById(2131824967));
    this.AuE.setText(WXHardCoderJNI.hcBizTimeout);
    this.AuF = ((EditText)findViewById(2131824969));
    this.AuF.setText(WXHardCoderJNI.hcBizAction);
    this.AuG = ((Spinner)findViewById(2131824970));
    this.AuG.setSelection(WXHardCoderJNI.hcBizCPU);
    this.AuH = ((Spinner)findViewById(2131824971));
    this.AuH.setSelection(WXHardCoderJNI.hcBizIO);
    this.AuI = ((CheckBox)findViewById(2131824972));
    this.AuI.setChecked(WXHardCoderJNI.hcBizThr);
    this.Asc.setOnClickListener(new HardCoderSettingUI.4(this));
    AppMethodBeat.o(34876);
  }
  
  protected Dialog onCreateDialog(int paramInt)
  {
    AppMethodBeat.i(34877);
    switch (paramInt)
    {
    default: 
      AppMethodBeat.o(34877);
      return null;
    }
    if (this.qHM)
    {
      localTimePickerDialog = new TimePickerDialog(getContext(), this.qHN, WXHardCoderJNI.hcBeginTimeHour, WXHardCoderJNI.hcBeginTimeMin, false);
      AppMethodBeat.o(34877);
      return localTimePickerDialog;
    }
    TimePickerDialog localTimePickerDialog = new TimePickerDialog(getContext(), this.qHN, WXHardCoderJNI.hcEndTimeHour, WXHardCoderJNI.hcBeginTimeMin, false);
    AppMethodBeat.o(34877);
    return localTimePickerDialog;
  }
  
  public void onDestroy()
  {
    AppMethodBeat.i(34878);
    ab.i("HardCoderSettingUI", "save");
    if ((this.Asc.isChecked()) && (!WXHardCoderJNI.getEnable()))
    {
      WXHardCoderJNI.setHcEnable(this.Asc.isChecked());
      WXHardCoderJNI.initHardCoder(a.bHO(), a.bHO());
    }
    WXHardCoderJNI.setDebug(this.Ase.isChecked());
    WXHardCoderJNI.setHcEnable(this.Asc.isChecked());
    WXHardCoderJNI.hcRetryInterval = bo.getInt(this.Asd.getText().toString(), WXHardCoderJNI.hcRetryInterval);
    if (WXHardCoderJNI.isCheckEnv())
    {
      WXHardCoderJNI.setDebug(WXHardCoderJNI.getDebug());
      WXHardCoderJNI.setHcEnable(WXHardCoderJNI.getEnable());
      WXHardCoderJNI.setRetryConnectInterval(WXHardCoderJNI.hcRetryInterval);
    }
    WXHardCoderJNI.hcTimeLimit = this.Asg.isChecked();
    WXHardCoderJNI.hcBootEnable = this.Asj.isChecked();
    WXHardCoderJNI.hcBootDelay = bo.getInt(this.Ask.getText().toString(), WXHardCoderJNI.hcBootDelay);
    WXHardCoderJNI.hcBootCPU = this.Asn.getSelectedItemPosition();
    WXHardCoderJNI.hcBootIO = this.Aso.getSelectedItemPosition();
    WXHardCoderJNI.hcBootThr = this.Asp.isChecked();
    WXHardCoderJNI.hcBootTimeout = bo.getInt(this.Asl.getText().toString(), WXHardCoderJNI.hcBootTimeout);
    WXHardCoderJNI.hcBootAction = bo.getLong(this.Asm.getText().toString(), WXHardCoderJNI.hcBootAction);
    WXHardCoderJNI.hcEnterChattingEnable = this.Asq.isChecked();
    WXHardCoderJNI.hcEnterChattingDelay = bo.getInt(this.Asr.getText().toString(), WXHardCoderJNI.hcEnterChattingDelay);
    WXHardCoderJNI.hcEnterChattingCPU = this.Asu.getSelectedItemPosition();
    WXHardCoderJNI.hcEnterChattingIO = this.Asv.getSelectedItemPosition();
    WXHardCoderJNI.hcEnterChattingThr = this.Asw.isChecked();
    WXHardCoderJNI.hcEnterChattingTimeout = bo.getInt(this.Ass.getText().toString(), WXHardCoderJNI.hcEnterChattingTimeout);
    WXHardCoderJNI.hcEnterChattingAction = bo.getLong(this.Ast.getText().toString(), WXHardCoderJNI.hcEnterChattingAction);
    WXHardCoderJNI.hcQuitChattingEnable = this.Asx.isChecked();
    WXHardCoderJNI.hcQuitChattingDelay = bo.getInt(this.Asy.getText().toString(), WXHardCoderJNI.hcQuitChattingDelay);
    WXHardCoderJNI.hcQuitChattingCPU = this.AsB.getSelectedItemPosition();
    WXHardCoderJNI.hcQuitChattingIO = this.AsC.getSelectedItemPosition();
    WXHardCoderJNI.hcQuitChattingThr = this.AsD.isChecked();
    WXHardCoderJNI.hcQuitChattingTimeout = bo.getInt(this.Asz.getText().toString(), WXHardCoderJNI.hcQuitChattingTimeout);
    WXHardCoderJNI.hcQuitChattingAction = bo.getLong(this.AsA.getText().toString(), WXHardCoderJNI.hcQuitChattingAction);
    WXHardCoderJNI.hcSendMsgEnable = this.AsE.isChecked();
    WXHardCoderJNI.hcSendMsgDelay = bo.getInt(this.AsF.getText().toString(), WXHardCoderJNI.hcSendMsgDelay);
    WXHardCoderJNI.hcSendMsgCPU = this.AsI.getSelectedItemPosition();
    WXHardCoderJNI.hcSendMsgIO = this.AsJ.getSelectedItemPosition();
    WXHardCoderJNI.hcSendMsgThr = this.AsK.isChecked();
    WXHardCoderJNI.hcSendMsgTimeout = bo.getInt(this.AsG.getText().toString(), WXHardCoderJNI.hcSendMsgTimeout);
    WXHardCoderJNI.hcSendMsgAction = bo.getLong(this.AsH.getText().toString(), WXHardCoderJNI.hcSendMsgAction);
    WXHardCoderJNI.hcSendPicMsgEnable = this.AsL.isChecked();
    WXHardCoderJNI.hcSendPicMsgDelay = bo.getInt(this.AsM.getText().toString(), WXHardCoderJNI.hcSendPicMsgDelay);
    WXHardCoderJNI.hcSendPicMsgCPU = this.AsP.getSelectedItemPosition();
    WXHardCoderJNI.hcSendPicMsgIO = this.AsQ.getSelectedItemPosition();
    WXHardCoderJNI.hcSendPicMsgThr = this.AsR.isChecked();
    WXHardCoderJNI.hcSendPicMsgTimeout = bo.getInt(this.AsN.getText().toString(), WXHardCoderJNI.hcSendPicMsgTimeout);
    WXHardCoderJNI.hcSendPicMsgAction = bo.getLong(this.AsO.getText().toString(), WXHardCoderJNI.hcSendPicMsgAction);
    WXHardCoderJNI.hcReceiveMsgEnable = this.AsS.isChecked();
    WXHardCoderJNI.hcReceiveMsgDelay = bo.getInt(this.AsT.getText().toString(), WXHardCoderJNI.hcReceiveMsgDelay);
    WXHardCoderJNI.hcReceiveMsgCPU = this.AsW.getSelectedItemPosition();
    WXHardCoderJNI.hcReceiveMsgIO = this.AsX.getSelectedItemPosition();
    WXHardCoderJNI.hcReceiveMsgThr = this.AsY.isChecked();
    WXHardCoderJNI.hcReceiveMsgTimeout = bo.getInt(this.AsU.getText().toString(), WXHardCoderJNI.hcReceiveMsgTimeout);
    WXHardCoderJNI.hcReceiveMsgAction = bo.getLong(this.AsV.getText().toString(), WXHardCoderJNI.hcReceiveMsgAction);
    WXHardCoderJNI.hcUpdateChatroomEnable = this.AsZ.isChecked();
    WXHardCoderJNI.hcUpdateChatroomDelay = bo.getInt(this.Ata.getText().toString(), WXHardCoderJNI.hcUpdateChatroomDelay);
    WXHardCoderJNI.hcUpdateChatroomCPU = this.Atd.getSelectedItemPosition();
    WXHardCoderJNI.hcUpdateChatroomIO = this.Ate.getSelectedItemPosition();
    WXHardCoderJNI.hcUpdateChatroomThr = this.Atf.isChecked();
    WXHardCoderJNI.hcUpdateChatroomTimeout = bo.getInt(this.Atb.getText().toString(), WXHardCoderJNI.hcUpdateChatroomTimeout);
    WXHardCoderJNI.hcUpdateChatroomAction = bo.getLong(this.Atc.getText().toString(), WXHardCoderJNI.hcUpdateChatroomAction);
    WXHardCoderJNI.hcUpdateChatroomMemberCount = bo.getLong(this.Atg.getText().toString(), WXHardCoderJNI.hcUpdateChatroomMemberCount);
    WXHardCoderJNI.hcDBEnable = this.Ath.isChecked();
    WXHardCoderJNI.hcDBDelayQuery = bo.getInt(this.Ati.getText().toString(), WXHardCoderJNI.hcDBDelayQuery);
    WXHardCoderJNI.hcDBDelayWrite = bo.getInt(this.Atj.getText().toString(), WXHardCoderJNI.hcDBDelayWrite);
    WXHardCoderJNI.hcDBCPU = this.Asn.getSelectedItemPosition();
    WXHardCoderJNI.hcDBIO = this.Aso.getSelectedItemPosition();
    WXHardCoderJNI.hcDBThr = this.Asp.isChecked();
    WXHardCoderJNI.hcDBTimeout = bo.getInt(this.Atk.getText().toString(), WXHardCoderJNI.hcDBTimeout);
    WXHardCoderJNI.hcDBTimeoutBusy = bo.getInt(this.Atl.getText().toString(), WXHardCoderJNI.hcDBTimeoutBusy);
    WXHardCoderJNI.hcDBActionQuery = bo.getLong(this.Atm.getText().toString(), WXHardCoderJNI.hcDBActionQuery);
    WXHardCoderJNI.hcDBActionWrite = bo.getLong(this.Atn.getText().toString(), WXHardCoderJNI.hcDBActionWrite);
    WXHardCoderJNI.hcEncodeVideoEnable = this.Atr.isChecked();
    WXHardCoderJNI.hcEncodeVideoDelay = bo.getInt(this.Ats.getText().toString(), WXHardCoderJNI.hcEncodeVideoDelay);
    WXHardCoderJNI.hcEncodeVideoCPU = this.Atv.getSelectedItemPosition();
    WXHardCoderJNI.hcEncodeVideoIO = this.Atw.getSelectedItemPosition();
    WXHardCoderJNI.hcEncodeVideoThr = this.Atx.isChecked();
    WXHardCoderJNI.hcEncodeVideoTimeout = bo.getInt(this.Att.getText().toString(), WXHardCoderJNI.hcEncodeVideoTimeout);
    WXHardCoderJNI.hcEncodeVideoAction = bo.getLong(this.Atu.getText().toString(), WXHardCoderJNI.hcEncodeVideoAction);
    WXHardCoderJNI.hcDecodePicEnable = this.Aty.isChecked();
    WXHardCoderJNI.hcDecodePicDelay = bo.getInt(this.Atz.getText().toString(), WXHardCoderJNI.hcDecodePicDelay);
    WXHardCoderJNI.hcDecodePicCPU = this.AtC.getSelectedItemPosition();
    WXHardCoderJNI.hcDecodePicIO = this.AtD.getSelectedItemPosition();
    WXHardCoderJNI.hcDecodePicThr = this.AtE.isChecked();
    WXHardCoderJNI.hcDecodePicTimeout = bo.getInt(this.AtA.getText().toString(), WXHardCoderJNI.hcDecodePicTimeout);
    WXHardCoderJNI.hcDecodePicAction = bo.getLong(this.AtB.getText().toString(), WXHardCoderJNI.hcDecodePicAction);
    WXHardCoderJNI.hcGifEnable = this.AtF.isChecked();
    WXHardCoderJNI.hcGifDelay = bo.getInt(this.AtG.getText().toString(), WXHardCoderJNI.hcGifDelay);
    WXHardCoderJNI.hcGifCPU = this.AtJ.getSelectedItemPosition();
    WXHardCoderJNI.hcGifIO = this.AtK.getSelectedItemPosition();
    WXHardCoderJNI.hcGifThr = this.AtL.isChecked();
    WXHardCoderJNI.hcGifTimeout = bo.getInt(this.AtH.getText().toString(), WXHardCoderJNI.hcGifTimeout);
    WXHardCoderJNI.hcGifAction = bo.getLong(this.AtI.getText().toString(), WXHardCoderJNI.hcGifAction);
    WXHardCoderJNI.hcGifFrameEnable = this.AtM.isChecked();
    WXHardCoderJNI.hcGifFrameDelay = bo.getInt(this.AtN.getText().toString(), WXHardCoderJNI.hcGifFrameDelay);
    WXHardCoderJNI.hcGifFrameCPU = this.AtQ.getSelectedItemPosition();
    WXHardCoderJNI.hcGifFrameIO = this.AtR.getSelectedItemPosition();
    WXHardCoderJNI.hcGifFrameThr = this.AtS.isChecked();
    WXHardCoderJNI.hcGifFrameTimeout = bo.getInt(this.AtO.getText().toString(), WXHardCoderJNI.hcGifFrameTimeout);
    WXHardCoderJNI.hcGifFrameAction = bo.getLong(this.AtP.getText().toString(), WXHardCoderJNI.hcGifFrameAction);
    WXHardCoderJNI.hcSNSScrollEnable = this.AtT.isChecked();
    WXHardCoderJNI.hcSNSScrollDelay = bo.getInt(this.AtU.getText().toString(), WXHardCoderJNI.hcSNSScrollDelay);
    WXHardCoderJNI.hcSNSScrollCPU = this.AtX.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSScrollIO = this.AtY.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSScrollThr = this.AtZ.isChecked();
    WXHardCoderJNI.hcSNSScrollTimeout = bo.getInt(this.AtV.getText().toString(), WXHardCoderJNI.hcSNSScrollTimeout);
    WXHardCoderJNI.hcSNSScrollAction = bo.getLong(this.AtW.getText().toString(), WXHardCoderJNI.hcSNSScrollAction);
    WXHardCoderJNI.hcSNSUserScrollEnable = this.Aua.isChecked();
    WXHardCoderJNI.hcSNSUserScrollDelay = bo.getInt(this.Aub.getText().toString(), WXHardCoderJNI.hcSNSUserScrollDelay);
    WXHardCoderJNI.hcSNSUserScrollCPU = this.Aue.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSUserScrollIO = this.Auf.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSUserScrollThr = this.Aug.isChecked();
    WXHardCoderJNI.hcSNSUserScrollTimeout = bo.getInt(this.Auc.getText().toString(), WXHardCoderJNI.hcSNSUserScrollTimeout);
    WXHardCoderJNI.hcSNSUserScrollAction = bo.getLong(this.Aud.getText().toString(), WXHardCoderJNI.hcSNSUserScrollAction);
    WXHardCoderJNI.hcSNSMsgScrollEnable = this.Auh.isChecked();
    WXHardCoderJNI.hcSNSMsgScrollDelay = bo.getInt(this.Aui.getText().toString(), WXHardCoderJNI.hcSNSMsgScrollDelay);
    WXHardCoderJNI.hcSNSMsgScrollCPU = this.Aul.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSMsgScrollIO = this.Aum.getSelectedItemPosition();
    WXHardCoderJNI.hcSNSMsgScrollThr = this.Aun.isChecked();
    WXHardCoderJNI.hcSNSMsgScrollTimeout = bo.getInt(this.Auj.getText().toString(), WXHardCoderJNI.hcSNSMsgScrollTimeout);
    WXHardCoderJNI.hcSNSMsgScrollAction = bo.getLong(this.Auk.getText().toString(), WXHardCoderJNI.hcSNSMsgScrollAction);
    WXHardCoderJNI.hcMediaGalleryScrollEnable = this.Auo.isChecked();
    WXHardCoderJNI.hcMediaGalleryScrollDelay = bo.getInt(this.Aup.getText().toString(), WXHardCoderJNI.hcMediaGalleryScrollDelay);
    WXHardCoderJNI.hcMediaGalleryScrollCPU = this.Aus.getSelectedItemPosition();
    WXHardCoderJNI.hcMediaGalleryScrollIO = this.Aut.getSelectedItemPosition();
    WXHardCoderJNI.hcMediaGalleryScrollThr = this.Auu.isChecked();
    WXHardCoderJNI.hcMediaGalleryScrollTimeout = bo.getInt(this.Auq.getText().toString(), WXHardCoderJNI.hcMediaGalleryScrollTimeout);
    WXHardCoderJNI.hcMediaGalleryScrollAction = bo.getLong(this.Aur.getText().toString(), WXHardCoderJNI.hcMediaGalleryScrollAction);
    WXHardCoderJNI.hcAlbumScrollEnable = this.Auv.isChecked();
    WXHardCoderJNI.hcAlbumScrollDelay = bo.getInt(this.Auw.getText().toString(), WXHardCoderJNI.hcAlbumScrollDelay);
    WXHardCoderJNI.hcAlbumScrollCPU = this.Auz.getSelectedItemPosition();
    WXHardCoderJNI.hcAlbumScrollIO = this.AuA.getSelectedItemPosition();
    WXHardCoderJNI.hcAlbumScrollThr = this.AuB.isChecked();
    WXHardCoderJNI.hcAlbumScrollTimeout = bo.getInt(this.Aux.getText().toString(), WXHardCoderJNI.hcAlbumScrollTimeout);
    WXHardCoderJNI.hcAlbumScrollAction = bo.getLong(this.Auy.getText().toString(), WXHardCoderJNI.hcAlbumScrollAction);
    WXHardCoderJNI.hcBizEnable = this.AuC.isChecked();
    WXHardCoderJNI.hcBizDelay = bo.getInt(this.AuD.getText().toString(), WXHardCoderJNI.hcBizDelay);
    WXHardCoderJNI.hcBizCPU = this.AuG.getSelectedItemPosition();
    WXHardCoderJNI.hcBizIO = this.AuH.getSelectedItemPosition();
    WXHardCoderJNI.hcBizThr = this.AuI.isChecked();
    WXHardCoderJNI.hcBizTimeout = bo.getInt(this.AuE.getText().toString(), WXHardCoderJNI.hcBizTimeout);
    WXHardCoderJNI.hcBizAction = bo.getLong(this.AuF.getText().toString(), WXHardCoderJNI.hcBizAction);
    a(getContext().getSharedPreferences("hardcoder_setting", 0).edit());
    WXHardCoderJNI.reloadSPConfig(WXHardCoderJNI.RELOAD_SCENE_SETTING);
    super.onDestroy();
    AppMethodBeat.o(34878);
  }
  
  public void onWindowFocusChanged(boolean paramBoolean)
  {
    super.onWindowFocusChanged(paramBoolean);
    AppMethodBeat.at(this, paramBoolean);
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mm\classes8.jar
 * Qualified Name:     com.tencent.mm.ui.tools.HardCoderSettingUI
 * JD-Core Version:    0.7.0.1
 */