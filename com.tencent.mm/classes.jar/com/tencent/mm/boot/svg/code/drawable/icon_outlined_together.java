package com.tencent.mm.boot.svg.code.drawable;

import android.graphics.Canvas;
import android.graphics.DashPathEffect;
import android.graphics.Paint;
import android.graphics.Paint.Cap;
import android.graphics.Paint.Join;
import android.graphics.Paint.Style;
import android.graphics.Path;
import android.os.Looper;
import com.tencent.mm.svg.WeChatSVGRenderC2Java;
import com.tencent.mm.svg.c;

public class icon_outlined_together
  extends c
{
  private final int height = 72;
  private final int width = 72;
  
  public int doCommand(int paramInt, Object... paramVarArgs)
  {
    switch (paramInt)
    {
    }
    for (;;)
    {
      return 0;
      return 72;
      return 72;
      Canvas localCanvas = (Canvas)paramVarArgs[0];
      paramVarArgs = (Looper)paramVarArgs[1];
      c.instanceMatrix(paramVarArgs);
      c.instanceMatrixArray(paramVarArgs);
      Object localObject = c.instancePaint(paramVarArgs);
      ((Paint)localObject).setFlags(385);
      ((Paint)localObject).setStyle(Paint.Style.FILL);
      Paint localPaint = c.instancePaint(paramVarArgs);
      localPaint.setFlags(385);
      localPaint.setStyle(Paint.Style.STROKE);
      ((Paint)localObject).setColor(-16777216);
      localPaint.setStrokeWidth(1.0F);
      localPaint.setStrokeCap(Paint.Cap.BUTT);
      localPaint.setStrokeJoin(Paint.Join.MITER);
      localPaint.setStrokeMiter(4.0F);
      localPaint.setPathEffect(null);
      localPaint = c.instancePaint(localPaint, paramVarArgs);
      localPaint.setStrokeWidth(1.0F);
      localCanvas.save();
      localObject = c.instancePaint((Paint)localObject, paramVarArgs);
      ((Paint)localObject).setColor(-16777216);
      Path localPath = c.instancePath(paramVarArgs);
      localPath.moveTo(68.417671F, 25.342937F);
      localPath.cubicTo(70.598366F, 27.837978F, 70.343536F, 31.628412F, 67.848495F, 33.809109F);
      localPath.cubicTo(64.045052F, 37.133366F, 60.663387F, 39.162502F, 55.825272F, 41.017647F);
      localPath.lineTo(55.564682F, 41.116871F);
      localPath.lineTo(55.073463F, 41.300175F);
      localPath.cubicTo(54.65303F, 41.455097F, 54.218307F, 41.610443F, 53.766884F, 41.767185F);
      localPath.cubicTo(52.532959F, 42.195625F, 51.184578F, 42.576F, 49.757046F, 42.905174F);
      localPath.lineTo(48.590309F, 58.763992F);
      localPath.cubicTo(48.483807F, 60.212429F, 47.517387F, 61.455009F, 46.139748F, 61.914818F);
      localPath.cubicTo(42.768978F, 63.039864F, 40.085564F, 63.599998F, 36.303886F, 63.599998F);
      localPath.cubicTo(32.55518F, 63.599998F, 29.712223F, 63.049774F, 25.984558F, 61.953819F);
      localPath.cubicTo(24.575556F, 61.539566F, 23.562607F, 60.312424F, 23.417755F, 58.857185F);
      localPath.lineTo(23.409693F, 58.763992F);
      localPath.lineTo(22.243048F, 42.905128F);
      localPath.cubicTo(20.815617F, 42.575993F, 19.467052F, 42.195629F, 18.233116F, 41.767185F);
      localPath.cubicTo(17.89455F, 41.649628F, 17.565374F, 41.532856F, 17.238632F, 41.414257F);
      localPath.lineTo(16.912441F, 41.294949F);
      localPath.lineTo(16.420849F, 41.111435F);
      localPath.cubicTo(11.457252F, 39.234558F, 8.02287F, 37.19273F, 4.151502F, 33.809109F);
      localPath.cubicTo(1.65646F, 31.628412F, 1.401632F, 27.837978F, 3.582328F, 25.342937F);
      localPath.cubicTo(5.738243F, 22.876249F, 9.467518F, 22.59915F, 11.962942F, 24.700365F);
      localPath.lineTo(12.048498F, 24.773764F);
      localPath.lineTo(12.201894F, 24.907215F);
      localPath.lineTo(12.342941F, 25.028793F);
      localPath.lineTo(12.660194F, 25.297844F);
      localPath.lineTo(12.838642F, 25.446552F);
      localPath.lineTo(13.088802F, 25.651638F);
      localPath.lineTo(13.39716F, 25.898535F);
      localPath.cubicTo(15.369439F, 27.457504F, 17.214602F, 28.512568F, 19.797091F, 29.54958F);
      localPath.lineTo(20.033916F, 29.643818F);
      localPath.lineTo(20.446289F, 29.804173F);
      localPath.lineTo(20.580589F, 29.855425F);
      localPath.lineTo(20.841494F, 29.953726F);
      localPath.lineTo(21.265772F, 30.110142F);
      localPath.lineTo(21.704443F, 30.267885F);
      localPath.lineTo(22.169214F, 30.431087F);
      localPath.cubicTo(25.543367F, 31.602654F, 30.668863F, 32.345852F, 35.465965F, 32.397133F);
      localPath.lineTo(35.727287F, 32.399242F);
      localPath.lineTo(36.0F, 32.400002F);
      localPath.cubicTo(40.857197F, 32.400002F, 46.139847F, 31.673279F, 49.633606F, 30.498545F);
      localPath.lineTo(49.819046F, 30.435186F);
      localPath.lineTo(50.270653F, 30.276733F);
      localPath.lineTo(50.707298F, 30.11994F);
      localPath.lineTo(51.144306F, 29.95899F);
      localPath.lineTo(51.537907F, 29.810272F);
      localPath.lineTo(51.949833F, 29.650181F);
      localPath.cubicTo(54.593575F, 28.607639F, 56.458485F, 27.567766F, 58.408142F, 26.051394F);
      localPath.lineTo(58.58564F, 25.912216F);
      localPath.lineTo(58.894447F, 25.665127F);
      localPath.lineTo(59.041103F, 25.545601F);
      localPath.lineTo(59.325161F, 25.310196F);
      localPath.lineTo(59.642864F, 25.04089F);
      localPath.cubicTo(59.744629F, 24.953699F, 59.847469F, 24.864691F, 59.951504F, 24.773764F);
      localPath.cubicTo(62.446545F, 22.593069F, 66.236977F, 22.847897F, 68.417671F, 25.342937F);
      localPath.close();
      localPath.moveTo(6.292931F, 27.712036F);
      localPath.cubicTo(5.420653F, 28.710052F, 5.522584F, 30.226227F, 6.520601F, 31.098505F);
      localPath.cubicTo(10.005728F, 34.144547F, 13.022708F, 35.953354F, 17.446877F, 37.649979F);
      localPath.lineTo(17.694124F, 37.744125F);
      localPath.lineTo(18.171247F, 37.922203F);
      localPath.cubicTo(18.573433F, 38.0704F, 18.987244F, 38.218197F, 19.413946F, 38.366356F);
      localPath.cubicTo(20.130901F, 38.615295F, 20.887892F, 38.845203F, 21.675869F, 39.056053F);
      localPath.lineTo(21.965906F, 39.132404F);
      localPath.cubicTo(22.136332F, 39.176586F, 22.30813F, 39.219894F, 22.481213F, 39.262329F);
      localPath.lineTo(22.787632F, 39.336239F);
      localPath.lineTo(23.12953F, 39.415836F);
      localPath.lineTo(23.574137F, 39.515095F);
      localPath.cubicTo(23.728741F, 39.548782F, 23.884172F, 39.581814F, 24.040375F, 39.614182F);
      localPath.lineTo(24.385443F, 39.684368F);
      localPath.lineTo(24.878283F, 39.780144F);
      localPath.lineTo(25.270475F, 39.852734F);
      localPath.lineTo(25.633377F, 39.91713F);
      localPath.lineTo(27.0F, 58.5F);
      localPath.cubicTo(30.401297F, 59.5F, 32.902592F, 60.0F, 36.303886F, 60.0F);
      localPath.cubicTo(39.615677F, 60.0F, 41.882141F, 59.52597F, 44.764881F, 58.577908F);
      localPath.lineTo(45.0F, 58.5F);
      localPath.lineTo(46.366623F, 39.91713F);
      localPath.lineTo(46.908646F, 39.819969F);
      localPath.lineTo(47.270054F, 39.751858F);
      localPath.lineTo(47.625896F, 39.682106F);
      localPath.cubicTo(47.793823F, 39.648544F, 47.960922F, 39.614227F, 48.127121F, 39.579159F);
      localPath.lineTo(48.298149F, 39.542732F);
      localPath.lineTo(48.879635F, 39.413754F);
      localPath.lineTo(49.185352F, 39.342636F);
      localPath.cubicTo(49.451782F, 39.279633F, 49.715363F, 39.214588F, 49.975773F, 39.147511F);
      localPath.cubicTo(50.889408F, 38.912174F, 51.764042F, 38.651772F, 52.586052F, 38.366356F);
      localPath.cubicTo(52.906082F, 38.255238F, 53.218857F, 38.144321F, 53.524914F, 38.033287F);
      localPath.lineTo(53.828751F, 37.922203F);
      localPath.lineTo(54.305878F, 37.744125F);
      localPath.cubicTo(58.865711F, 36.019924F, 61.929733F, 34.200954F, 65.479401F, 31.098505F);
      localPath.cubicTo(66.477417F, 30.226227F, 66.579346F, 28.710052F, 65.707069F, 27.712036F);
      localPath.cubicTo(64.834793F, 26.71402F, 63.318619F, 26.612089F, 62.320602F, 27.484367F);
      localPath.lineTo(62.152409F, 27.630657F);
      localPath.lineTo(61.985172F, 27.774679F);
      localPath.lineTo(61.653271F, 28.056082F);
      localPath.lineTo(61.406322F, 28.261486F);
      localPath.lineTo(61.160801F, 28.462206F);
      localPath.lineTo(60.835243F, 28.722784F);
      localPath.cubicTo(58.572922F, 30.511015F, 56.422955F, 31.734968F, 53.521088F, 32.899506F);
      localPath.lineTo(53.270493F, 32.999187F);
      localPath.lineTo(52.842319F, 33.165642F);
      localPath.lineTo(52.624054F, 33.248741F);
      localPath.lineTo(52.402908F, 33.33181F);
      localPath.lineTo(51.951702F, 33.498024F);
      localPath.lineTo(51.488125F, 33.664616F);
      localPath.lineTo(51.011616F, 33.831917F);
      localPath.cubicTo(49.624142F, 34.313671F, 48.032616F, 34.718266F, 46.337021F, 35.042542F);
      localPath.lineTo(45.952621F, 35.114124F);
      localPath.lineTo(45.607372F, 35.176018F);
      localPath.lineTo(45.18602F, 35.24765F);
      localPath.lineTo(44.818481F, 35.307259F);
      localPath.cubicTo(44.591084F, 35.343376F, 44.362473F, 35.37804F, 44.132835F, 35.411297F);
      localPath.lineTo(43.662201F, 35.477203F);
      localPath.lineTo(43.326126F, 35.521793F);
      localPath.lineTo(42.947769F, 35.569561F);
      localPath.lineTo(42.549503F, 35.616886F);
      localPath.lineTo(42.179367F, 35.65844F);
      localPath.lineTo(41.567413F, 35.721748F);
      localPath.lineTo(40.975475F, 35.776775F);
      localPath.lineTo(40.534714F, 35.813862F);
      localPath.lineTo(40.026737F, 35.852505F);
      localPath.lineTo(39.632675F, 35.879433F);
      localPath.lineTo(39.111107F, 35.910999F);
      localPath.lineTo(38.504673F, 35.941826F);
      localPath.lineTo(37.985085F, 35.963161F);
      localPath.lineTo(37.488388F, 35.979115F);
      localPath.lineTo(37.138306F, 35.987705F);
      localPath.lineTo(36.558613F, 35.997005F);
      localPath.lineTo(36.282532F, 35.999229F);
      localPath.lineTo(36.0F, 36.0F);
      localPath.lineTo(35.717468F, 35.999229F);
      localPath.lineTo(35.48037F, 35.997406F);
      localPath.lineTo(35.13443F, 35.992855F);
      localPath.lineTo(34.562469F, 35.980499F);
      localPath.lineTo(34.090382F, 35.96587F);
      localPath.lineTo(33.651798F, 35.948746F);
      localPath.lineTo(32.94833F, 35.914299F);
      localPath.lineTo(32.471432F, 35.886105F);
      localPath.lineTo(32.178806F, 35.866882F);
      localPath.lineTo(31.825987F, 35.841763F);
      localPath.lineTo(31.409523F, 35.80938F);
      localPath.lineTo(31.015659F, 35.776024F);
      localPath.lineTo(30.653433F, 35.743F);
      localPath.lineTo(30.18578F, 35.69701F);
      localPath.lineTo(29.859545F, 35.662666F);
      localPath.lineTo(29.500214F, 35.622669F);
      localPath.lineTo(29.015575F, 35.565067F);
      localPath.lineTo(28.521225F, 35.501904F);
      localPath.lineTo(28.1327F, 35.449066F);
      localPath.lineTo(27.795692F, 35.400906F);
      localPath.lineTo(27.360966F, 35.335514F);
      localPath.lineTo(27.12331F, 35.298172F);
      localPath.lineTo(26.781408F, 35.24242F);
      localPath.lineTo(26.339727F, 35.166763F);
      localPath.lineTo(25.976538F, 35.101379F);
      localPath.lineTo(25.56719F, 35.024117F);
      localPath.lineTo(25.216038F, 34.954708F);
      localPath.lineTo(24.911634F, 34.892109F);
      localPath.lineTo(24.557377F, 34.816303F);
      localPath.lineTo(24.208929F, 34.738506F);
      localPath.cubicTo(23.14542F, 34.496017F, 22.138828F, 34.219563F, 21.217163F, 33.910038F);
      localPath.lineTo(20.988386F, 33.831917F);
      localPath.lineTo(20.511873F, 33.664616F);
      localPath.lineTo(20.048298F, 33.498024F);
      localPath.lineTo(19.59709F, 33.33181F);
      localPath.lineTo(19.375946F, 33.248741F);
      localPath.lineTo(19.157682F, 33.165642F);
      localPath.lineTo(18.729507F, 32.999187F);
      localPath.cubicTo(15.783965F, 31.837635F, 13.615023F, 30.631088F, 11.358417F, 28.874691F);
      localPath.lineTo(11.164759F, 28.722784F);
      localPath.lineTo(10.8392F, 28.462206F);
      localPath.lineTo(10.593678F, 28.261486F);
      localPath.lineTo(10.346728F, 28.056082F);
      localPath.lineTo(10.014829F, 27.774679F);
      localPath.cubicTo(9.903639F, 27.679411F, 9.791861F, 27.582659F, 9.6794F, 27.484367F);
      localPath.cubicTo(8.681383F, 26.612089F, 7.165209F, 26.71402F, 6.292931F, 27.712036F);
      localPath.close();
      localPath.moveTo(9.048866F, 40.787304F);
      localPath.cubicTo(10.067523F, 41.401909F, 11.118366F, 41.968361F, 12.228962F, 42.503143F);
      localPath.lineTo(13.014708F, 50.615829F);
      localPath.lineTo(13.022969F, 50.684639F);
      localPath.cubicTo(13.104718F, 51.254406F, 13.506641F, 51.729786F, 14.059885F, 51.902855F);
      localPath.cubicTo(16.018091F, 52.515434F, 17.941473F, 53.043961F, 19.830029F, 53.48843F);
      localPath.lineTo(20.0585F, 56.618412F);
      localPath.cubicTo(17.804567F, 56.116344F, 15.506491F, 55.49876F, 13.164207F, 54.766029F);
      localPath.cubicTo(11.470051F, 54.23605F, 10.248882F, 52.761131F, 10.039443F, 51.004673F);
      localPath.lineTo(10.028672F, 50.904953F);
      localPath.lineTo(9.048866F, 40.787304F);
      localPath.close();
      localPath.moveTo(62.951633F, 40.787304F);
      localPath.lineTo(61.971828F, 50.904953F);
      localPath.lineTo(61.96106F, 51.004673F);
      localPath.cubicTo(61.751617F, 52.761131F, 60.530449F, 54.23605F, 58.836296F, 54.766029F);
      localPath.cubicTo(56.494011F, 55.49876F, 54.195934F, 56.116344F, 51.942001F, 56.618412F);
      localPath.lineTo(51.942001F, 56.618412F);
      localPath.lineTo(52.170471F, 53.48843F);
      localPath.cubicTo(54.059029F, 53.043961F, 55.98241F, 52.515434F, 57.940617F, 51.902855F);
      localPath.cubicTo(58.493858F, 51.729786F, 58.895782F, 51.254406F, 58.977531F, 50.684639F);
      localPath.lineTo(58.977531F, 50.684639F);
      localPath.lineTo(58.985794F, 50.615829F);
      localPath.lineTo(59.771538F, 42.503143F);
      localPath.cubicTo(60.882133F, 41.968361F, 61.932976F, 41.401909F, 62.951633F, 40.787304F);
      localPath.lineTo(62.951633F, 40.787304F);
      localPath.close();
      localPath.moveTo(36.0F, 13.2F);
      localPath.cubicTo(38.319595F, 13.2F, 40.419598F, 14.140202F, 41.939697F, 15.660303F);
      localPath.cubicTo(43.459797F, 17.180405F, 44.400002F, 19.280405F, 44.400002F, 21.6F);
      localPath.cubicTo(44.400002F, 23.919596F, 43.459797F, 26.019596F, 41.939697F, 27.539698F);
      localPath.cubicTo(40.419598F, 29.059797F, 38.319595F, 30.0F, 36.0F, 30.0F);
      localPath.cubicTo(33.680405F, 30.0F, 31.580404F, 29.059797F, 30.060303F, 27.539698F);
      localPath.cubicTo(28.540201F, 26.019596F, 27.6F, 23.919596F, 27.6F, 21.6F);
      localPath.cubicTo(27.6F, 19.280405F, 28.540201F, 17.180405F, 30.060303F, 15.660303F);
      localPath.cubicTo(31.580404F, 14.140202F, 33.680405F, 13.2F, 36.0F, 13.2F);
      localPath.close();
      localPath.moveTo(36.0F, 16.799999F);
      localPath.cubicTo(33.349033F, 16.799999F, 31.200001F, 18.949034F, 31.200001F, 21.6F);
      localPath.cubicTo(31.200001F, 24.250967F, 33.349033F, 26.4F, 36.0F, 26.4F);
      localPath.cubicTo(38.650967F, 26.4F, 40.799999F, 24.250967F, 40.799999F, 21.6F);
      localPath.cubicTo(40.799999F, 18.949034F, 38.650967F, 16.799999F, 36.0F, 16.799999F);
      localPath.close();
      localPath.moveTo(17.4F, 10.2F);
      localPath.cubicTo(21.04508F, 10.2F, 24.0F, 13.154921F, 24.0F, 16.799999F);
      localPath.cubicTo(24.0F, 20.44508F, 21.04508F, 23.4F, 17.4F, 23.4F);
      localPath.cubicTo(13.754921F, 23.4F, 10.8F, 20.44508F, 10.8F, 16.799999F);
      localPath.cubicTo(10.8F, 13.154921F, 13.754921F, 10.2F, 17.4F, 10.2F);
      localPath.close();
      localPath.moveTo(54.599998F, 10.2F);
      localPath.cubicTo(58.245079F, 10.2F, 61.200001F, 13.154921F, 61.200001F, 16.799999F);
      localPath.cubicTo(61.200001F, 20.44508F, 58.245079F, 23.4F, 54.599998F, 23.4F);
      localPath.cubicTo(50.954922F, 23.4F, 48.0F, 20.44508F, 48.0F, 16.799999F);
      localPath.cubicTo(48.0F, 13.154921F, 50.954922F, 10.2F, 54.599998F, 10.2F);
      localPath.close();
      localPath.moveTo(17.4F, 13.2F);
      localPath.cubicTo(15.411775F, 13.2F, 13.8F, 14.811775F, 13.8F, 16.799999F);
      localPath.cubicTo(13.8F, 18.788225F, 15.411775F, 20.4F, 17.4F, 20.4F);
      localPath.cubicTo(19.388226F, 20.4F, 21.0F, 18.788225F, 21.0F, 16.799999F);
      localPath.cubicTo(21.0F, 14.811775F, 19.388226F, 13.2F, 17.4F, 13.2F);
      localPath.close();
      localPath.moveTo(54.599998F, 13.2F);
      localPath.cubicTo(52.611774F, 13.2F, 51.0F, 14.811775F, 51.0F, 16.799999F);
      localPath.cubicTo(51.0F, 18.788225F, 52.611774F, 20.4F, 54.599998F, 20.4F);
      localPath.cubicTo(56.588226F, 20.4F, 58.200001F, 18.788225F, 58.200001F, 16.799999F);
      localPath.cubicTo(58.200001F, 14.811775F, 56.588226F, 13.2F, 54.599998F, 13.2F);
      localPath.close();
      WeChatSVGRenderC2Java.setFillType(localPath, 1);
      localCanvas.drawPath(localPath, (Paint)localObject);
      localCanvas.restore();
      localPaint = c.instancePaint(localPaint, paramVarArgs);
      localPaint.setColor(-16777216);
      localCanvas.saveLayerAlpha(null, 0, 31);
      localObject = c.instancePaint(localPaint, paramVarArgs);
      ((Paint)localObject).setPathEffect(new DashPathEffect(new float[] { 9.0F, 9.0F, 9.0F, 15.0F }, 0.0F));
      localCanvas.save();
      localObject = c.instancePaint((Paint)localObject, paramVarArgs);
      localPath = c.instancePath(paramVarArgs);
      localPath.moveTo(0.0F, 0.0F);
      localPath.lineTo(72.0F, 0.0F);
      localPath.lineTo(72.0F, 72.0F);
      localPath.lineTo(0.0F, 72.0F);
      localPath.lineTo(0.0F, 0.0F);
      localPath.close();
      localCanvas.drawPath(localPath, (Paint)localObject);
      localCanvas.restore();
      localCanvas.save();
      localObject = c.instancePaint(localPaint, paramVarArgs);
      ((Paint)localObject).setStrokeWidth(0.5F);
      localPath = c.instancePath(paramVarArgs);
      localPath.moveTo(9.25F, 13.75F);
      localPath.cubicTo(9.25F, 11.264719F, 11.264719F, 9.25F, 13.75F, 9.25F);
      localPath.lineTo(58.25F, 9.25F);
      localPath.cubicTo(60.735283F, 9.25F, 62.75F, 11.264719F, 62.75F, 13.75F);
      localPath.lineTo(62.75F, 58.25F);
      localPath.cubicTo(62.75F, 60.735283F, 60.735283F, 62.75F, 58.25F, 62.75F);
      localPath.lineTo(13.75F, 62.75F);
      localPath.cubicTo(11.264719F, 62.75F, 9.25F, 60.735283F, 9.25F, 58.25F);
      localPath.lineTo(9.25F, 13.75F);
      localPath.close();
      localCanvas.drawPath(localPath, (Paint)localObject);
      localCanvas.restore();
      localCanvas.save();
      localObject = c.instancePaint(localPaint, paramVarArgs);
      ((Paint)localObject).setStrokeWidth(0.5F);
      localPath = c.instancePath(paramVarArgs);
      localPath.moveTo(6.25F, 16.75F);
      localPath.cubicTo(6.25F, 14.264719F, 8.264719F, 12.25F, 10.75F, 12.25F);
      localPath.lineTo(61.25F, 12.25F);
      localPath.cubicTo(63.735283F, 12.25F, 65.75F, 14.264719F, 65.75F, 16.75F);
      localPath.lineTo(65.75F, 55.25F);
      localPath.cubicTo(65.75F, 57.735283F, 63.735283F, 59.75F, 61.25F, 59.75F);
      localPath.lineTo(10.75F, 59.75F);
      localPath.cubicTo(8.264719F, 59.75F, 6.25F, 57.735283F, 6.25F, 55.25F);
      localPath.lineTo(6.25F, 16.75F);
      localPath.close();
      localCanvas.drawPath(localPath, (Paint)localObject);
      localCanvas.restore();
      localCanvas.save();
      localObject = c.instancePaint(localPaint, paramVarArgs);
      ((Paint)localObject).setStrokeWidth(0.5F);
      localPath = c.instancePath(paramVarArgs);
      localPath.moveTo(36.0F, 6.25F);
      localPath.cubicTo(52.430473F, 6.25F, 65.75F, 19.569529F, 65.75F, 36.0F);
      localPath.cubicTo(65.75F, 52.430473F, 52.430473F, 65.75F, 36.0F, 65.75F);
      localPath.cubicTo(19.569529F, 65.75F, 6.25F, 52.430473F, 6.25F, 36.0F);
      localPath.cubicTo(6.25F, 19.569529F, 19.569529F, 6.25F, 36.0F, 6.25F);
      localPath.close();
      localCanvas.drawPath(localPath, (Paint)localObject);
      localCanvas.restore();
      localCanvas.save();
      localObject = c.instancePaint(localPaint, paramVarArgs);
      ((Paint)localObject).setStrokeWidth(0.5F);
      localPath = c.instancePath(paramVarArgs);
      localPath.moveTo(55.5F, 6.25F);
      localPath.cubicTo(56.673607F, 6.25F, 57.736107F, 6.725698F, 58.505203F, 7.494796F);
      localPath.cubicTo(59.274303F, 8.263895F, 59.75F, 9.326395F, 59.75F, 10.5F);
      localPath.lineTo(59.75F, 10.5F);
      localPath.lineTo(59.75F, 61.5F);
      localPath.cubicTo(59.75F, 62.673607F, 59.274303F, 63.736107F, 58.505203F, 64.505203F);
      localPath.cubicTo(57.736107F, 65.2743F, 56.673607F, 65.75F, 55.5F, 65.75F);
      localPath.lineTo(55.5F, 65.75F);
      localPath.lineTo(16.5F, 65.75F);
      localPath.cubicTo(15.326395F, 65.75F, 14.263895F, 65.2743F, 13.494796F, 64.505203F);
      localPath.cubicTo(12.725698F, 63.736107F, 12.25F, 62.673607F, 12.25F, 61.5F);
      localPath.lineTo(12.25F, 61.5F);
      localPath.lineTo(12.25F, 10.5F);
      localPath.cubicTo(12.25F, 9.326395F, 12.725698F, 8.263895F, 13.494796F, 7.494796F);
      localPath.cubicTo(14.263895F, 6.725698F, 15.326395F, 6.25F, 16.5F, 6.25F);
      localPath.lineTo(16.5F, 6.25F);
      localPath.close();
      localCanvas.drawPath(localPath, (Paint)localObject);
      localCanvas.restore();
      localCanvas.save();
      localObject = c.instancePaint(localPaint, paramVarArgs);
      ((Paint)localObject).setStrokeWidth(0.5F);
      localPath = c.instancePath(paramVarArgs);
      localPath.moveTo(0.0F, 0.0F);
      localPath.lineTo(72.0F, 72.0F);
      localCanvas.drawPath(localPath, (Paint)localObject);
      localCanvas.restore();
      localCanvas.save();
      localPaint = c.instancePaint(localPaint, paramVarArgs);
      localPaint.setStrokeWidth(0.5F);
      localObject = c.instancePath(paramVarArgs);
      ((Path)localObject).moveTo(72.0F, 0.0F);
      ((Path)localObject).lineTo(0.0F, 72.0F);
      localCanvas.drawPath((Path)localObject, localPaint);
      localCanvas.restore();
      localCanvas.restore();
      c.done(paramVarArgs);
    }
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.mm\classes12.jar
 * Qualified Name:     com.tencent.mm.boot.svg.code.drawable.icon_outlined_together
 * JD-Core Version:    0.7.0.1
 */