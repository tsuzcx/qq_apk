import java.util.ArrayList;
import java.util.HashMap;

public class amxn
{
  private static ArrayList<String> Aa;
  private static ArrayList<String> Ab;
  private static ArrayList<String> Ac;
  private static ArrayList<String> Ad;
  private static ArrayList<String> Ae;
  private static ArrayList<String> Af;
  private static ArrayList<String> Ag;
  public static HashMap<String, Integer> mX;
  public static HashMap<String, Integer> mY;
  public static StringBuilder result = new StringBuilder();
  private static ArrayList<ArrayList<String>> zH = new ArrayList();
  private static ArrayList<String> zI = new ArrayList();
  private static ArrayList<String> zJ = new ArrayList();
  private static ArrayList<String> zK = new ArrayList();
  private static ArrayList<String> zL = new ArrayList();
  private static ArrayList<String> zM = new ArrayList();
  private static ArrayList<String> zN = new ArrayList();
  private static ArrayList<String> zO = new ArrayList();
  private static ArrayList<String> zP = new ArrayList();
  private static ArrayList<String> zQ = new ArrayList();
  private static ArrayList<String> zR = new ArrayList();
  private static ArrayList<String> zS = new ArrayList();
  private static ArrayList<String> zT = new ArrayList();
  private static ArrayList<String> zU = new ArrayList();
  private static ArrayList<String> zV = new ArrayList();
  private static ArrayList<String> zW = new ArrayList();
  private static ArrayList<String> zX = new ArrayList();
  private static ArrayList<String> zY = new ArrayList();
  private static ArrayList<String> zZ = new ArrayList();
  
  static
  {
    Aa = new ArrayList();
    Ab = new ArrayList();
    Ac = new ArrayList();
    Ad = new ArrayList();
    Ae = new ArrayList();
    Af = new ArrayList();
    Ag = new ArrayList();
    zI.add("b");
    zI.add("c");
    zI.add("d");
    zI.add("f");
    zI.add("g");
    zI.add("h");
    zI.add("j");
    zI.add("k");
    zI.add("l");
    zI.add("m");
    zI.add("n");
    zI.add("p");
    zI.add("q");
    zI.add("r");
    zI.add("s");
    zI.add("t");
    zI.add("w");
    zI.add("x");
    zI.add("y");
    zI.add("z");
    zI.add("ch");
    zI.add("sh");
    zI.add("zh");
    zJ.add("a");
    zJ.add("ai");
    zJ.add("an");
    zJ.add("ang");
    zJ.add("ao");
    zJ.add("e");
    zJ.add("en");
    zJ.add("eng");
    zJ.add("er");
    zJ.add("o");
    zJ.add("ou");
    zJ.add("ong");
    zK.add("a");
    zK.add("ai");
    zK.add("an");
    zK.add("ang");
    zK.add("ao");
    zK.add("ei");
    zK.add("en");
    zK.add("eng");
    zK.add("i");
    zK.add("ian");
    zK.add("iao");
    zK.add("ie");
    zK.add("in");
    zK.add("ing");
    zK.add("o");
    zK.add("u");
    zL.add("a");
    zL.add("ai");
    zL.add("an");
    zL.add("ang");
    zL.add("ao");
    zL.add("e");
    zL.add("en");
    zL.add("eng");
    zL.add("i");
    zL.add("ong");
    zL.add("ou");
    zL.add("u");
    zL.add("uan");
    zL.add("ui");
    zL.add("un");
    zL.add("uo");
    zM.add("a");
    zM.add("ai");
    zM.add("an");
    zM.add("ang");
    zM.add("ao");
    zM.add("e");
    zM.add("ei");
    zM.add("en");
    zM.add("eng");
    zM.add("i");
    zM.add("ia");
    zM.add("ian");
    zM.add("iao");
    zM.add("ie");
    zM.add("ing");
    zM.add("iu");
    zM.add("ong");
    zM.add("ou");
    zM.add("u");
    zM.add("uan");
    zM.add("ui");
    zM.add("un");
    zM.add("uo");
    zN.add("a");
    zN.add("an");
    zN.add("ang");
    zN.add("ei");
    zN.add("en");
    zN.add("eng");
    zN.add("iao");
    zN.add("o");
    zN.add("ou");
    zN.add("u");
    zO.add("a");
    zO.add("ai");
    zO.add("an");
    zO.add("ang");
    zO.add("ao");
    zO.add("e");
    zO.add("ei");
    zO.add("en");
    zO.add("eng");
    zO.add("ong");
    zO.add("ou");
    zO.add("u");
    zO.add("uai");
    zO.add("uan");
    zO.add("uang");
    zO.add("ui");
    zO.add("un");
    zO.add("uo");
    zP.add("a");
    zP.add("ai");
    zP.add("an");
    zP.add("ang");
    zP.add("ao");
    zP.add("e");
    zP.add("ei");
    zP.add("en");
    zP.add("eng");
    zP.add("ong");
    zP.add("ou");
    zP.add("u");
    zP.add("ua");
    zP.add("uai");
    zP.add("uan");
    zP.add("uang");
    zP.add("ui");
    zP.add("un");
    zP.add("uo");
    zQ.add("i");
    zQ.add("ia");
    zQ.add("ian");
    zQ.add("iang");
    zQ.add("iao");
    zQ.add("ie");
    zQ.add("in");
    zQ.add("ing");
    zQ.add("iong");
    zQ.add("iu");
    zQ.add("u");
    zQ.add("uan");
    zQ.add("ue");
    zQ.add("un");
    zR.add("a");
    zR.add("ai");
    zR.add("an");
    zR.add("ang");
    zR.add("ao");
    zR.add("e");
    zR.add("en");
    zR.add("eng");
    zR.add("ong");
    zR.add("ou");
    zR.add("u");
    zR.add("ui");
    zR.add("un");
    zR.add("uo");
    zS.add("a");
    zS.add("ai");
    zS.add("an");
    zS.add("ang");
    zS.add("ao");
    zS.add("e");
    zS.add("ei");
    zS.add("eng");
    zS.add("i");
    zS.add("ia");
    zS.add("ian");
    zS.add("iao");
    zS.add("ie");
    zS.add("in");
    zS.add("ing");
    zS.add("iu");
    zS.add("o");
    zS.add("ong");
    zS.add("ou");
    zS.add("u");
    zS.add("uan");
    zS.add("un");
    zS.add("uo");
    zS.add("v");
    zS.add("ve");
    zT.add("a");
    zT.add("ai");
    zT.add("an");
    zT.add("ang");
    zT.add("ao");
    zT.add("e");
    zT.add("ei");
    zT.add("en");
    zT.add("eng");
    zT.add("i");
    zT.add("ian");
    zT.add("iao");
    zT.add("ie");
    zT.add("in");
    zT.add("ing");
    zT.add("iu");
    zT.add("o");
    zT.add("ou");
    zT.add("u");
    zU.add("a");
    zU.add("ai");
    zU.add("an");
    zU.add("ang");
    zU.add("ao");
    zU.add("e");
    zU.add("ei");
    zU.add("en");
    zU.add("eng");
    zU.add("i");
    zU.add("ian");
    zU.add("iang");
    zU.add("iao");
    zU.add("ie");
    zU.add("in");
    zU.add("ing");
    zU.add("iu");
    zU.add("ong");
    zU.add("ou");
    zU.add("u");
    zU.add("uan");
    zU.add("un");
    zU.add("uo");
    zU.add("v");
    zU.add("ve");
    zV.add("a");
    zV.add("ai");
    zV.add("an");
    zV.add("ang");
    zV.add("ao");
    zV.add("e");
    zV.add("ei");
    zV.add("en");
    zV.add("eng");
    zV.add("i");
    zV.add("ian");
    zV.add("iao");
    zV.add("ie");
    zV.add("in");
    zV.add("ing");
    zV.add("o");
    zV.add("ou");
    zV.add("u");
    zW.add("i");
    zW.add("ia");
    zW.add("ian");
    zW.add("iang");
    zW.add("iao");
    zW.add("ie");
    zW.add("in");
    zW.add("ing");
    zW.add("iong");
    zW.add("iu");
    zW.add("u");
    zW.add("uan");
    zW.add("ue");
    zW.add("un");
    zX.add("an");
    zX.add("ang");
    zX.add("ao");
    zX.add("e");
    zX.add("en");
    zX.add("eng");
    zX.add("i");
    zX.add("ong");
    zX.add("ou");
    zX.add("u");
    zX.add("ua");
    zX.add("uan");
    zX.add("ui");
    zX.add("un");
    zX.add("uo");
    zY.add("a");
    zY.add("ai");
    zY.add("an");
    zY.add("ang");
    zY.add("ao");
    zY.add("e");
    zY.add("en");
    zY.add("eng");
    zY.add("i");
    zY.add("ong");
    zY.add("ou");
    zY.add("u");
    zY.add("uan");
    zY.add("ui");
    zY.add("un");
    zY.add("uo");
    zZ.add("a");
    zZ.add("ai");
    zZ.add("an");
    zZ.add("ang");
    zZ.add("ao");
    zZ.add("e");
    zZ.add("ei");
    zZ.add("eng");
    zZ.add("i");
    zZ.add("ian");
    zZ.add("iao");
    zZ.add("ie");
    zZ.add("ing");
    zZ.add("ong");
    zZ.add("ou");
    zZ.add("u");
    zZ.add("uan");
    zZ.add("ui");
    zZ.add("un");
    zZ.add("uo");
    Aa.add("a");
    Aa.add("ai");
    Aa.add("an");
    Aa.add("ang");
    Aa.add("ei");
    Aa.add("en");
    Aa.add("eng");
    Aa.add("o");
    Aa.add("u");
    Ab.add("i");
    Ab.add("ia");
    Ab.add("ian");
    Ab.add("iang");
    Ab.add("iao");
    Ab.add("ie");
    Ab.add("in");
    Ab.add("ing");
    Ab.add("iong");
    Ab.add("iu");
    Ab.add("u");
    Ab.add("uan");
    Ab.add("ue");
    Ab.add("un");
    Ac.add("a");
    Ac.add("an");
    Ac.add("ang");
    Ac.add("ao");
    Ac.add("e");
    Ac.add("i");
    Ac.add("in");
    Ac.add("ing");
    Ac.add("o");
    Ac.add("ong");
    Ac.add("ou");
    Ac.add("u");
    Ac.add("uan");
    Ac.add("ue");
    Ac.add("un");
    Ad.add("a");
    Ad.add("ai");
    Ad.add("an");
    Ad.add("ang");
    Ad.add("ao");
    Ad.add("e");
    Ad.add("ei");
    Ad.add("en");
    Ad.add("eng");
    Ad.add("i");
    Ad.add("ong");
    Ad.add("ou");
    Ad.add("u");
    Ad.add("uan");
    Ad.add("ui");
    Ad.add("un");
    Ad.add("uo");
    Ag.add("a");
    Ag.add("ai");
    Ag.add("an");
    Ag.add("ang");
    Ag.add("ao");
    Ag.add("e");
    Ag.add("en");
    Ag.add("eng");
    Ag.add("i");
    Ag.add("ong");
    Ag.add("ou");
    Ag.add("u");
    Ag.add("ua");
    Ag.add("uai");
    Ag.add("uan");
    Ag.add("uang");
    Ag.add("ui");
    Ag.add("un");
    Ag.add("uo");
    Ae.add("a");
    Ae.add("ai");
    Ae.add("an");
    Ae.add("ang");
    Ae.add("ao");
    Ae.add("e");
    Ae.add("ei");
    Ae.add("en");
    Ae.add("eng");
    Ae.add("i");
    Ae.add("ou");
    Ae.add("u");
    Ae.add("ua");
    Ae.add("uai");
    Ae.add("uan");
    Ae.add("uang");
    Ae.add("ui");
    Ae.add("un");
    Ae.add("uo");
    Af.add("a");
    Af.add("ai");
    Af.add("an");
    Af.add("ang");
    Af.add("ao");
    Af.add("e");
    Af.add("ei");
    Af.add("en");
    Af.add("eng");
    Af.add("i");
    Af.add("ong");
    Af.add("ou");
    Af.add("u");
    Af.add("ua");
    Af.add("uai");
    Af.add("uan");
    Af.add("uang");
    Af.add("ui");
    Af.add("un");
    Af.add("uo");
    zH.add(zJ);
    zH.add(zK);
    zH.add(zL);
    zH.add(zM);
    zH.add(zN);
    zH.add(zO);
    zH.add(zP);
    zH.add(zQ);
    zH.add(zR);
    zH.add(zS);
    zH.add(zT);
    zH.add(zU);
    zH.add(zV);
    zH.add(zW);
    zH.add(zX);
    zH.add(zY);
    zH.add(zZ);
    zH.add(Aa);
    zH.add(Ab);
    zH.add(Ac);
    zH.add(Ad);
    zH.add(Ag);
    zH.add(Ae);
    zH.add(Af);
    mX = new HashMap();
    mY = new HashMap();
    mX.put("a", Integer.valueOf(1));
    mX.put("o", Integer.valueOf(2));
    mX.put("e", Integer.valueOf(3));
    mX.put("i", Integer.valueOf(4));
    mX.put("u", Integer.valueOf(5));
    mX.put("v", Integer.valueOf(6));
    mX.put("ai", Integer.valueOf(7));
    mX.put("ei", Integer.valueOf(7));
    mX.put("ui", Integer.valueOf(8));
    mX.put("ao", Integer.valueOf(9));
    mX.put("ou", Integer.valueOf(10));
    mX.put("iu", Integer.valueOf(11));
    mX.put("ie", Integer.valueOf(12));
    mX.put("ve", Integer.valueOf(13));
    mX.put("er", Integer.valueOf(14));
    mX.put("an", Integer.valueOf(15));
    mX.put("en", Integer.valueOf(16));
    mX.put("in", Integer.valueOf(17));
    mX.put("un", Integer.valueOf(18));
    mX.put("ven", Integer.valueOf(19));
    mX.put("ang", Integer.valueOf(15));
    mX.put("eng", Integer.valueOf(16));
    mX.put("ing", Integer.valueOf(17));
    mX.put("ong", Integer.valueOf(20));
    mY.put("b", Integer.valueOf(1));
    mY.put("p", Integer.valueOf(2));
    mY.put("m", Integer.valueOf(3));
    mY.put("f", Integer.valueOf(4));
    mY.put("d", Integer.valueOf(5));
    mY.put("t", Integer.valueOf(6));
    mY.put("n", Integer.valueOf(7));
    mY.put("l", Integer.valueOf(7));
    mY.put("g", Integer.valueOf(8));
    mY.put("k", Integer.valueOf(9));
    mY.put("h", Integer.valueOf(10));
    mY.put("j", Integer.valueOf(11));
    mY.put("q", Integer.valueOf(12));
    mY.put("x", Integer.valueOf(13));
    mY.put("zh", Integer.valueOf(14));
    mY.put("ch", Integer.valueOf(15));
    mY.put("sh", Integer.valueOf(16));
    mY.put("r", Integer.valueOf(17));
    mY.put("z", Integer.valueOf(14));
    mY.put("c", Integer.valueOf(15));
    mY.put("s", Integer.valueOf(16));
    mY.put("y", Integer.valueOf(18));
    mY.put("w", Integer.valueOf(19));
  }
  
  public static boolean bu(String paramString1, String paramString2)
  {
    return mY.get(paramString1) == mY.get(paramString2);
  }
  
  public static boolean bv(String paramString1, String paramString2)
  {
    return mX.get(paramString1) == mX.get(paramString2);
  }
  
  public static void dOE()
  {
    result = new StringBuilder();
  }
  
  public static int dZ(String paramString)
  {
    int m = 1;
    paramString = paramString.toCharArray();
    int i = 0;
    int j = 0;
    int k = 0;
    if (i < paramString.length)
    {
      if (isChinese(paramString[i])) {
        j = 1;
      }
      for (;;)
      {
        i += 1;
        break;
        k = 1;
      }
    }
    if ((j != 0) && (k == 0)) {
      i = 2;
    }
    do
    {
      return i;
      i = m;
    } while (j != 0);
    return 0;
  }
  
  public static final boolean isChinese(char paramChar)
  {
    Character.UnicodeBlock localUnicodeBlock = Character.UnicodeBlock.of(paramChar);
    return (localUnicodeBlock == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS) || (localUnicodeBlock == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS) || (localUnicodeBlock == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A) || (localUnicodeBlock == Character.UnicodeBlock.GENERAL_PUNCTUATION) || (localUnicodeBlock == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION) || (localUnicodeBlock == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS);
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.tim\classes3.jar
 * Qualified Name:     amxn
 * JD-Core Version:    0.7.0.1
 */