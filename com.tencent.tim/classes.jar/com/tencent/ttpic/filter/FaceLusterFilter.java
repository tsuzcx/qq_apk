package com.tencent.ttpic.filter;

import android.graphics.Bitmap;
import android.opengl.GLES20;
import android.opengl.Matrix;
import com.tencent.aekit.openrender.AEOpenRenderConfig.DRAW_MODE;
import com.tencent.aekit.openrender.AttributeParam;
import com.tencent.aekit.openrender.UniformParam.Float3fParam;
import com.tencent.aekit.openrender.UniformParam.FloatParam;
import com.tencent.aekit.openrender.UniformParam.Mat4Param;
import com.tencent.aekit.openrender.UniformParam.TextureParam;
import com.tencent.aekit.openrender.internal.Frame;
import com.tencent.aekit.openrender.internal.VideoFilterBase;
import com.tencent.aekit.openrender.util.GlUtil;
import com.tencent.filter.BaseFilter;
import com.tencent.ttpic.baseutils.bitmap.BitmapUtils;
import com.tencent.ttpic.facedetect.FaceStatus;
import com.tencent.ttpic.model.FaceLusterData;
import com.tencent.ttpic.openapi.PTDetectInfo;
import com.tencent.ttpic.openapi.util.youtu.VideoPreviewFaceOutlineDetector;
import com.tencent.ttpic.util.SDKResourceLoader;
import java.util.Arrays;

public class FaceLusterFilter
  extends VideoFilterBase
{
  private static final String FRAGMENT_SHADER = "mee1909x1667592816x1869181801x1768431726x544237671x1634692198x168442740x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x170864431x1428172591x1868982638x175336818x1718185589x544043631x862152054x1633645856x1701405293x1866691694x997355372x1768846602x1836216166x1835103008x1919249520x1763722290x1953853550x1734438217x2019906661x1701999988x1853164091x1919903337x1634934893x1701605485x541340274x1970302569x1634552180x1700029799x1920300152x171651685x1718185589x544043631x1634692198x1601511540x1802723693x1752198209x540750177x1768846602x1836216166x1869375008x1965061217x1935764831x1886142827x993157480x1853164064x1919903337x1818632301x544498031x1953718133x1735288178x540764276x1853164042x1919903337x1702240365x1965044579x1919509599x1769235301x1818324591x1751607628x1819231092x171668079x1718185589x544043631x862152054x1683977504x1667592809x1852795252x1766616161x1148479591x1667592809x1852795252x789187131x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x789196591x1633034287x1650551154x175334764x878929270x1633836832x1866687859x997355372x1667593738x1667178548x1919249761x1819231073x171668079x791621386x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x539963146x2037539158x1936158313x1918989834x1735289209x1667593760x1601577010x1131963764x1685221231x1635125819x1852406130x1702240359x1981821539x1886284127x1700033653x1869562744x171664498x2037539190x543649385x862152054x1851749920x1634562671x1667585644x997355380x1702234634x1663054691x1970302319x1766614388x1769236583x1982359406x540238693x1836216174x1700162657x1919906915x1702240300x1814049635x1952999273x1701996868x1869182051x1981820014x540238693x1751607660x1819231092x539783791x1634692198x1952522356x1970169204x1869182049x2064263534x1713381386x1952542572x1718182944x1702065510x1830829344x1680373857x1848145007x1634562671x1667585644x745697140x1734962208x1766093928x1952671090x695103337x774905900x171649328x1768169504x1937073766x540876901x678977901x1718182952x1702065510x807415072x691353134x807415584x741684014x808333344x537541417x1667593760x1768169523x1937073766x1819231077x1025536623x1734962208x1866691688x544370540x1768169514x1937073766x539631717x1702130785x1952544110x997093225x1914707978x1920300133x1768169582x1937073766x1819231077x171668079x1980369533x540238693x1282696551x1766880361x678192504x175835689x1702240288x1847604067x1634562671x1667585644x544370548x1869488189x1818324338x677739113x1869504374x1818324338x1952671062x992572015x1981816842x540238693x1768058209x1131703909x1919904879x1595948320x1702060386x1869377347x1735536242x539631714x1835097973x1852139874x1819231092x171668079x1702240288x1663054691x1768058223x1130653038x1919904879x1629502752x1701405293x1866691694x997355372x1981816842x540238693x1751607660x1919501428x1769235301x1025535599x1919905312x1768710509x1965581690x1919509599x1769235301x1818324591x1751607628x1919501428x1769235301x706768495x808333856x537541417x1667593760x1768693811x1131702375x1919904879x1663057184x1970302319x1766614388x1769236583x1848141678x1634562671x1667585644x745697140x1768697120x1148479591x1667592809x1852795252x1601511468x1701996900x1869182051x1282171246x1952999273x1869377347x824192114x992555054x1713381386x1952542572x1634887456x540876921x678719332x1651339107x1684369001x1869377347x1981820018x674456421x959589936x807414841x926430510x774905900x691286321x537541417x1836016416x1701734754x1819231076x1025536623x1667593760x774973491x757082416x1702242336x824718179x539570222x1868767277x1852400237x1866687589x695365484x673196576x862152054x808333608x539828265x1751607660x1819231092x706769519x1634887456x171649401x1701978144x1852994932x1836016416x1701734754x1819231076x171668079x1980369533x543451503x1852399981x2064263464x1595940874x1701667171x1866686834x544370540x1702109245x1920300152x675557989x1970302569x1634552180x1700029799x1920300152x1981820005x1886284127x1700033653x1869562744x992568434x1595940874x1702060386x1869377347x540876914x1835098975x1130459749x1919904879x538970683x1634692198x1818304628x828467312x1948269856x1970567269x1144153458x1886284072x1833530485x1415931745x1970567269x741500274x1952413216x1866692709x694448751x540766766x1713381386x1952542572x1886150944x540172648x1702109245x1920300152x675557989x1970302569x1634552180x1700029799x1920300152x539767397x1702125430x1869562744x774464626x169884519x1818632224x544498031x1752198241x1025520481x2019914784x1701999988x1764246578x1953853550x1734438217x2019906661x1701999988x1981819954x2019914847x1919905603x1647192420x537534523x1869375008x1629516897x1634234476x1830829344x1831368809x1630042217x1634234476x1629498417x1634234476x1965042738x1935764831x1886142827x691102056x1818304556x862021744x1601511468x1802723693x1752198209x992555617x538970656x1180658791x1130848626x1919904879x1981824288x674521957x678979949x1935762015x1819231077x1915646575x539779687x1282696551x1766880361x678192504x1629498409x1634234476x1965042208x1920234335x1952935525x539765096x1935762015x1819231077x1630433903x2097822505x10x";
  private static final float[] M_MATRIX = { 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, -1.0F, 0.0F, 0.0F, 0.0F, 0.0F, -1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F };
  private static final float ROTATE_ANGLE = 15.75F;
  public static final int TRIANGLE_COUNT = 1975;
  private static final String VERTEX_SHADER = "mee1051x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x170864431x1092628271x1651077748x1936028789x1953784074x1969383794x1981834612x540304229x1769172848x1852795252x1952516667x1651077748x543519861x845374838x1886284064x1700033653x1920300152x1869562725x1852400754x996504673x1953784074x1969383794x1981834612x540238693x1836216174x171666529x791621386x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x539963146x1718185557x1936552559x1768846602x1836216166x1952541984x1601511476x1819438967x1701402212x1869762679x1952671082x1299083113x1769108577x1963604856x1868982638x1830841714x540308577x1852399477x1936876918x1634882661x1869640558x1867998579x1449421938x1299670377x1769108577x168442744x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x170864431x1444949807x1769566817x175335278x2037539190x543649385x845374838x1952413216x1866692709x996438639x1918989834x1735289209x1667593760x1601577010x1970302569x2019906676x1919905603x1980382052x1769566817x1981835118x540238693x1869504374x1818324338x1952671062x171668079x1768912394x1634541668x690515561x537557770x1600939808x1769172816x1852795252x1965047072x1919907679x1767269484x1917876069x1667590767x1852795252x1920229709x706771049x1936683040x1869182057x537541486x539963168x1851880020x1919903347x1752440941x1869488229x1818324338x1635000364x1852139374x1851859060x1768038500x1836216174x544435297x1981837172x544695657x1667330163x537538149x1952541984x1852383283x1936876918x1634882661x1869640558x1867998579x1449421938x1299670377x1769108577x540876920x863265133x1767863592x1919252078x1918133619x1886613089x1466266479x1684828783x2003134806x1920229709x811300969x2037919325x1965042810x1986947423x1702064741x1851880020x1936683123x1919899493x1767269484x1632466789x2020176500x777859419x746223992x1767863584x1919252078x1918133619x1886613089x1466266479x1684828783x2003134806x1920229709x844855401x2037919325x171649402x1702240288x1847604067x1634562671x1667585644x544370548x1869488189x1818324338x677739113x1702260329x1415934834x1936613746x1702063984x1819438935x1701402212x1952533879x544762226x1869488170x1818324338x169884457x1601576992x1836216174x1700162657x1919906915x1847606560x1634562671x1667585644x997355380x1981816842x2019914847x1919905603x540876900x1970302569x2019906676x1701999988x1919905603x1634625892x171664756x1601576992x1970302569x2019906676x1919905603x540876900x845374838x1600939816x1769172816x1852795252x790657070x1600939808x1769172816x1852795252x706770734x892219424x807414560x539768110x540356144x1818697773x1936674911x1869182057x544812654x1730162464x1867538284x1769236851x1999531631x807414304x992556334x687370x";
  private FaceStatus faceStatus;
  private BaseFilter mCopyFilter = new BaseFilter("precision highp float;\nvarying vec2 textureCoordinate;\nuniform sampler2D inputImageTexture;\nvoid main() \n{\ngl_FragColor = texture2D (inputImageTexture, textureCoordinate);\n}\n");
  private int[] mDepthBuffer = new int[1];
  private float[] mExtraMatrix = new float[16];
  private float[] mExtraTempMatrix = new float[16];
  private int[] mFrameBuffer = new int[1];
  private int[] mIndices = new int[5925];
  private float[] mInvMatrix = new float[16];
  private float[] mInvWorldMatrix = new float[16];
  private float[] mMVPMatrix = new float[16];
  private float mStrength = 0.7F;
  private int[] mTexture = new int[2];
  private float[] mVertices = new float[17775];
  private float[] mViewProjectionMatrix = new float[16];
  private float[] mWorldMatrix = new float[16];
  
  public FaceLusterFilter()
  {
    super(BaseFilter.nativeDecrypt("mee1051x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x170864431x1092628271x1651077748x1936028789x1953784074x1969383794x1981834612x540304229x1769172848x1852795252x1952516667x1651077748x543519861x845374838x1886284064x1700033653x1920300152x1869562725x1852400754x996504673x1953784074x1969383794x1981834612x540238693x1836216174x171666529x791621386x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x539963146x1718185557x1936552559x1768846602x1836216166x1952541984x1601511476x1819438967x1701402212x1869762679x1952671082x1299083113x1769108577x1963604856x1868982638x1830841714x540308577x1852399477x1936876918x1634882661x1869640558x1867998579x1449421938x1299670377x1769108577x168442744x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x170864431x1444949807x1769566817x175335278x2037539190x543649385x845374838x1952413216x1866692709x996438639x1918989834x1735289209x1667593760x1601577010x1970302569x2019906676x1919905603x1980382052x1769566817x1981835118x540238693x1869504374x1818324338x1952671062x171668079x1768912394x1634541668x690515561x537557770x1600939808x1769172816x1852795252x1965047072x1919907679x1767269484x1917876069x1667590767x1852795252x1920229709x706771049x1936683040x1869182057x537541486x539963168x1851880020x1919903347x1752440941x1869488229x1818324338x1635000364x1852139374x1851859060x1768038500x1836216174x544435297x1981837172x544695657x1667330163x537538149x1952541984x1852383283x1936876918x1634882661x1869640558x1867998579x1449421938x1299670377x1769108577x540876920x863265133x1767863592x1919252078x1918133619x1886613089x1466266479x1684828783x2003134806x1920229709x811300969x2037919325x1965042810x1986947423x1702064741x1851880020x1936683123x1919899493x1767269484x1632466789x2020176500x777859419x746223992x1767863584x1919252078x1918133619x1886613089x1466266479x1684828783x2003134806x1920229709x844855401x2037919325x171649402x1702240288x1847604067x1634562671x1667585644x544370548x1869488189x1818324338x677739113x1702260329x1415934834x1936613746x1702063984x1819438935x1701402212x1952533879x544762226x1869488170x1818324338x169884457x1601576992x1836216174x1700162657x1919906915x1847606560x1634562671x1667585644x997355380x1981816842x2019914847x1919905603x540876900x1970302569x2019906676x1701999988x1919905603x1634625892x171664756x1601576992x1970302569x2019906676x1919905603x540876900x845374838x1600939816x1769172816x1852795252x790657070x1600939808x1769172816x1852795252x706770734x892219424x807414560x539768110x540356144x1818697773x1936674911x1869182057x544812654x1730162464x1867538284x1769236851x1999531631x807414304x992556334x687370x"), BaseFilter.nativeDecrypt("mee1909x1667592816x1869181801x1768431726x544237671x1634692198x168442740x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x170864431x1428172591x1868982638x175336818x1718185589x544043631x862152054x1633645856x1701405293x1866691694x997355372x1768846602x1836216166x1835103008x1919249520x1763722290x1953853550x1734438217x2019906661x1701999988x1853164091x1919903337x1634934893x1701605485x541340274x1970302569x1634552180x1700029799x1920300152x171651685x1718185589x544043631x1634692198x1601511540x1802723693x1752198209x540750177x1768846602x1836216166x1869375008x1965061217x1935764831x1886142827x993157480x1853164064x1919903337x1818632301x544498031x1953718133x1735288178x540764276x1853164042x1919903337x1702240365x1965044579x1919509599x1769235301x1818324591x1751607628x1819231092x171668079x1718185589x544043631x862152054x1683977504x1667592809x1852795252x1766616161x1148479591x1667592809x1852795252x789187131x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x789196591x1633034287x1650551154x175334764x878929270x1633836832x1866687859x997355372x1667593738x1667178548x1919249761x1819231073x171668079x791621386x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x791621423x539963146x2037539158x1936158313x1918989834x1735289209x1667593760x1601577010x1131963764x1685221231x1635125819x1852406130x1702240359x1981821539x1886284127x1700033653x1869562744x171664498x2037539190x543649385x862152054x1851749920x1634562671x1667585644x997355380x1702234634x1663054691x1970302319x1766614388x1769236583x1982359406x540238693x1836216174x1700162657x1919906915x1702240300x1814049635x1952999273x1701996868x1869182051x1981820014x540238693x1751607660x1819231092x539783791x1634692198x1952522356x1970169204x1869182049x2064263534x1713381386x1952542572x1718182944x1702065510x1830829344x1680373857x1848145007x1634562671x1667585644x745697140x1734962208x1766093928x1952671090x695103337x774905900x171649328x1768169504x1937073766x540876901x678977901x1718182952x1702065510x807415072x691353134x807415584x741684014x808333344x537541417x1667593760x1768169523x1937073766x1819231077x1025536623x1734962208x1866691688x544370540x1768169514x1937073766x539631717x1702130785x1952544110x997093225x1914707978x1920300133x1768169582x1937073766x1819231077x171668079x1980369533x540238693x1282696551x1766880361x678192504x175835689x1702240288x1847604067x1634562671x1667585644x544370548x1869488189x1818324338x677739113x1869504374x1818324338x1952671062x992572015x1981816842x540238693x1768058209x1131703909x1919904879x1595948320x1702060386x1869377347x1735536242x539631714x1835097973x1852139874x1819231092x171668079x1702240288x1663054691x1768058223x1130653038x1919904879x1629502752x1701405293x1866691694x997355372x1981816842x540238693x1751607660x1919501428x1769235301x1025535599x1919905312x1768710509x1965581690x1919509599x1769235301x1818324591x1751607628x1919501428x1769235301x706768495x808333856x537541417x1667593760x1768693811x1131702375x1919904879x1663057184x1970302319x1766614388x1769236583x1848141678x1634562671x1667585644x745697140x1768697120x1148479591x1667592809x1852795252x1601511468x1701996900x1869182051x1282171246x1952999273x1869377347x824192114x992555054x1713381386x1952542572x1634887456x540876921x678719332x1651339107x1684369001x1869377347x1981820018x674456421x959589936x807414841x926430510x774905900x691286321x537541417x1836016416x1701734754x1819231076x1025536623x1667593760x774973491x757082416x1702242336x824718179x539570222x1868767277x1852400237x1866687589x695365484x673196576x862152054x808333608x539828265x1751607660x1819231092x706769519x1634887456x171649401x1701978144x1852994932x1836016416x1701734754x1819231076x171668079x1980369533x543451503x1852399981x2064263464x1595940874x1701667171x1866686834x544370540x1702109245x1920300152x675557989x1970302569x1634552180x1700029799x1920300152x1981820005x1886284127x1700033653x1869562744x992568434x1595940874x1702060386x1869377347x540876914x1835098975x1130459749x1919904879x538970683x1634692198x1818304628x828467312x1948269856x1970567269x1144153458x1886284072x1833530485x1415931745x1970567269x741500274x1952413216x1866692709x694448751x540766766x1713381386x1952542572x1886150944x540172648x1702109245x1920300152x675557989x1970302569x1634552180x1700029799x1920300152x539767397x1702125430x1869562744x774464626x169884519x1818632224x544498031x1752198241x1025520481x2019914784x1701999988x1764246578x1953853550x1734438217x2019906661x1701999988x1981819954x2019914847x1919905603x1647192420x537534523x1869375008x1629516897x1634234476x1830829344x1831368809x1630042217x1634234476x1629498417x1634234476x1965042738x1935764831x1886142827x691102056x1818304556x862021744x1601511468x1802723693x1752198209x992555617x538970656x1180658791x1130848626x1919904879x1981824288x674521957x678979949x1935762015x1819231077x1915646575x539779687x1282696551x1766880361x678192504x1629498409x1634234476x1965042208x1920234335x1952935525x539765096x1935762015x1819231077x1630433903x2097822505x10x"));
    initParams();
  }
  
  private void clearGLResources()
  {
    GLES20.glDeleteTextures(this.mTexture.length, this.mTexture, 0);
    GLES20.glDeleteFramebuffers(this.mFrameBuffer.length, this.mFrameBuffer, 0);
    GLES20.glDeleteRenderbuffers(this.mDepthBuffer.length, this.mDepthBuffer, 0);
    this.mCopyFilter.ClearGLSL();
  }
  
  private void createPerspective(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float[] paramArrayOfFloat)
  {
    float f = 1.0F / (paramFloat4 - paramFloat3);
    paramFloat1 = 1.0F / (float)Math.tan((float)(Math.toRadians(paramFloat1) * 0.5D));
    Arrays.fill(paramArrayOfFloat, 0.0F);
    paramArrayOfFloat[0] = (1.0F / paramFloat2 * paramFloat1);
    paramArrayOfFloat[5] = paramFloat1;
    paramArrayOfFloat[10] = (-(paramFloat4 + paramFloat3) * f);
    paramArrayOfFloat[11] = -1.0F;
    paramArrayOfFloat[14] = (f * (-2.0F * paramFloat4 * paramFloat3));
  }
  
  private float getFov(float paramFloat)
  {
    if ((this.width == 0) || (this.height == 0)) {
      return VideoPreviewFaceOutlineDetector.getFov();
    }
    if (((paramFloat > 89.0F) && (paramFloat < 91.0F)) || ((paramFloat > 269.0F) && (paramFloat < 271.0F))) {
      return (float)(Math.toDegrees(Math.atan(Math.tan(Math.toRadians(VideoPreviewFaceOutlineDetector.getFov() / 2.0F)) * this.height / this.width)) * 2.0D);
    }
    return VideoPreviewFaceOutlineDetector.getFov();
  }
  
  private void initGLResources()
  {
    GLES20.glGenTextures(this.mTexture.length, this.mTexture, 0);
    GLES20.glGenFramebuffers(this.mFrameBuffer.length, this.mFrameBuffer, 0);
    GLES20.glGenRenderbuffers(this.mDepthBuffer.length, this.mDepthBuffer, 0);
    this.mCopyFilter.apply();
    Bitmap localBitmap = SDKResourceLoader.getFaceLusterData().mask1;
    if (BitmapUtils.isLegal(localBitmap)) {
      GlUtil.loadTexture(this.mTexture[1], localBitmap);
    }
  }
  
  private void updateGLResources()
  {
    if ((this.width == 0) || (this.height == 0) || (this.mTexture[0] <= 0) || (!isValid())) {
      return;
    }
    GLES20.glActiveTexture(33987);
    GLES20.glBindTexture(3553, this.mTexture[0]);
    GLES20.glTexImage2D(3553, 0, 6408, this.width, this.height, 0, 6408, 5121, null);
    GLES20.glTexParameterf(3553, 10240, 9729.0F);
    GLES20.glTexParameterf(3553, 10241, 9729.0F);
    GLES20.glTexParameterf(3553, 10242, 33071.0F);
    GLES20.glTexParameterf(3553, 10243, 33071.0F);
    GLES20.glBindFramebuffer(36160, this.mFrameBuffer[0]);
    GLES20.glBindRenderbuffer(36161, this.mDepthBuffer[0]);
    GLES20.glRenderbufferStorage(36161, 33189, this.width, this.height);
    GLES20.glFramebufferRenderbuffer(36160, 36096, 36161, this.mDepthBuffer[0]);
    GLES20.glFramebufferTexture2D(36160, 36064, 3553, this.mTexture[0], 0);
    if (GLES20.glCheckFramebufferStatus(36160) != 36053) {}
    GLES20.glBindFramebuffer(36160, 0);
    GLES20.glBindTexture(3553, 0);
  }
  
  public void ApplyGLSLFilter()
  {
    super.ApplyGLSLFilter();
    initGLResources();
  }
  
  public Frame RenderProcess(int paramInt1, int paramInt2, int paramInt3)
  {
    GLES20.glBindFramebuffer(36160, this.mFrameBuffer[0]);
    GLES20.glViewport(0, 0, paramInt2, paramInt3);
    OnDrawFrameGLSL();
    renderTexture(paramInt1, paramInt2, paramInt3);
    return this.mCopyFilter.RenderProcess(this.mTexture[0], paramInt2, paramInt3);
  }
  
  public void clearGLSLSelf()
  {
    super.clearGLSLSelf();
    clearGLResources();
  }
  
  public void initAttribParams()
  {
    super.initAttribParams();
    this.mIndices = SDKResourceLoader.getFaceLusterData().indices;
    addAttribParam(new AttributeParam("position", this.mVertices, 3));
    addAttribParam(new AttributeParam("inputTextureCoordinate", SDKResourceLoader.getFaceLusterData().texCoord));
    addAttribParam(new AttributeParam("normal", SDKResourceLoader.getFaceLusterData().normals, 3));
    setDrawMode(AEOpenRenderConfig.DRAW_MODE.TRIANGLES);
    setCoordNum(5925);
  }
  
  public void initParams()
  {
    Matrix.setIdentityM(this.mMVPMatrix, 0);
    Matrix.setIdentityM(this.mInvMatrix, 0);
    addParam(new UniformParam.Mat4Param("u_worldViewProjectionMatrix", this.mMVPMatrix));
    addParam(new UniformParam.Mat4Param("u_inverseTransposeWorldViewMatrix", this.mInvMatrix));
    addParam(new UniformParam.Float3fParam("u_ambientColor", 1.0F, 1.0F, 1.0F));
    addParam(new UniformParam.Float3fParam("u_directionalLightColor", 1.0F, 1.0F, 1.0F));
    addParam(new UniformParam.Float3fParam("u_directionalLightDirection", 0.0F, -0.174F, -0.985F));
    addParam(new UniformParam.FloatParam("u_maskAlpha1", 0.0F));
    addParam(new UniformParam.FloatParam("u_maskAlpha2", 0.0F));
    addParam(new UniformParam.FloatParam("u_strength", this.mStrength));
    addParam(new UniformParam.TextureParam("inputImageTexture2", 0, 33986));
  }
  
  public boolean needRender()
  {
    return this.mStrength > 0.001F;
  }
  
  public boolean renderTexture(int paramInt1, int paramInt2, int paramInt3)
  {
    GLES20.glClearColor(0.0F, 0.0F, 0.0F, 0.0F);
    GLES20.glClear(16384);
    GLES20.glEnable(2929);
    GLES20.glDepthFunc(513);
    GLES20.glDepthMask(true);
    GLES20.glClear(256);
    GLES20.glDisable(3042);
    boolean bool = super.renderTexture(paramInt1, paramInt2, paramInt3);
    GLES20.glDisable(2929);
    return bool;
  }
  
  public void setStrength(float paramFloat)
  {
    this.mStrength = paramFloat;
    addParam(new UniformParam.FloatParam("u_strength", paramFloat));
    addParam(new UniformParam.TextureParam("inputImageTexture2", this.mTexture[1], 33986));
  }
  
  public void updateFaceStatus(FaceStatus paramFaceStatus)
  {
    this.faceStatus = paramFaceStatus;
  }
  
  public void updatePreview(Object paramObject)
  {
    super.updatePreview(paramObject);
    if ((this.faceStatus == null) || (this.faceStatus.denseFaceModel == null) || (this.faceStatus.denseFaceModel.length < 3000) || (this.faceStatus.denseFaceModel[0] == 0.0F) || (this.faceStatus.transform[15] < 1.0F)) {}
    do
    {
      do
      {
        return;
      } while (!(paramObject instanceof PTDetectInfo));
      paramObject = (PTDetectInfo)paramObject;
    } while ((this.width == 0) || (this.height == 0) || (this.mTexture[0] <= 0) || (!isValid()));
    int i = 0;
    while (i < 1975)
    {
      int j = this.mIndices[(i * 3)];
      int k = this.mIndices[(i * 3 + 1)];
      int m = this.mIndices[(i * 3 + 2)];
      this.mVertices[(i * 9)] = this.faceStatus.denseFaceModel[(j * 3)];
      this.mVertices[(i * 9 + 1)] = this.faceStatus.denseFaceModel[(j * 3 + 1)];
      this.mVertices[(i * 9 + 2)] = this.faceStatus.denseFaceModel[(j * 3 + 2)];
      this.mVertices[(i * 9 + 3)] = this.faceStatus.denseFaceModel[(k * 3)];
      this.mVertices[(i * 9 + 4)] = this.faceStatus.denseFaceModel[(k * 3 + 1)];
      this.mVertices[(i * 9 + 5)] = this.faceStatus.denseFaceModel[(k * 3 + 2)];
      this.mVertices[(i * 9 + 6)] = this.faceStatus.denseFaceModel[(m * 3)];
      this.mVertices[(i * 9 + 7)] = this.faceStatus.denseFaceModel[(m * 3 + 1)];
      this.mVertices[(i * 9 + 8)] = this.faceStatus.denseFaceModel[(m * 3 + 2)];
      i += 1;
    }
    addAttribParam(new AttributeParam("position", this.mVertices, 3));
    Matrix.rotateM(this.mExtraTempMatrix, 0, this.faceStatus.transform, 0, -paramObject.phoneAngle, 0.0F, 0.0F, 1.0F);
    Matrix.transposeM(this.mExtraMatrix, 0, this.mExtraTempMatrix, 0);
    float[] arrayOfFloat = this.mExtraMatrix;
    arrayOfFloat[1] *= -1.0F;
    arrayOfFloat = this.mExtraMatrix;
    arrayOfFloat[2] *= -1.0F;
    arrayOfFloat = this.mExtraMatrix;
    arrayOfFloat[4] *= -1.0F;
    arrayOfFloat = this.mExtraMatrix;
    arrayOfFloat[8] *= -1.0F;
    arrayOfFloat = this.mExtraMatrix;
    arrayOfFloat[13] *= -1.0F;
    arrayOfFloat = this.mExtraMatrix;
    arrayOfFloat[14] *= -1.0F;
    createPerspective(getFov(paramObject.phoneAngle), this.width / this.height, 1.0F, 1000.0F, this.mViewProjectionMatrix);
    Matrix.multiplyMM(this.mWorldMatrix, 0, this.mExtraMatrix, 0, M_MATRIX, 0);
    Matrix.multiplyMM(this.mMVPMatrix, 0, this.mViewProjectionMatrix, 0, this.mWorldMatrix, 0);
    addParam(new UniformParam.Mat4Param("u_worldViewProjectionMatrix", this.mMVPMatrix));
    Matrix.invertM(this.mInvWorldMatrix, 0, this.mWorldMatrix, 0);
    Matrix.transposeM(this.mInvMatrix, 0, this.mInvWorldMatrix, 0);
    addParam(new UniformParam.Mat4Param("u_inverseTransposeWorldViewMatrix", this.mInvMatrix));
    float f2 = this.faceStatus.yaw;
    float f1;
    if ((paramObject.phoneAngle > 89.0F) && (paramObject.phoneAngle < 91.0F)) {
      f1 = -this.faceStatus.pitch;
    }
    while (f1 > 15.75F)
    {
      addParam(new UniformParam.FloatParam("u_maskAlpha1", 0.0F));
      addParam(new UniformParam.FloatParam("u_maskAlpha2", 1.0F));
      return;
      if ((paramObject.phoneAngle > 179.0F) && (paramObject.phoneAngle < 181.0F))
      {
        f1 = -this.faceStatus.yaw;
      }
      else
      {
        f1 = f2;
        if (paramObject.phoneAngle > 269.0F)
        {
          f1 = f2;
          if (paramObject.phoneAngle < 271.0F) {
            f1 = this.faceStatus.pitch;
          }
        }
      }
    }
    if (f1 > 0.0F)
    {
      addParam(new UniformParam.FloatParam("u_maskAlpha1", 0.0F));
      addParam(new UniformParam.FloatParam("u_maskAlpha2", f1 / 15.75F));
      return;
    }
    if (f1 > -15.75F)
    {
      addParam(new UniformParam.FloatParam("u_maskAlpha1", -f1 / 15.75F));
      addParam(new UniformParam.FloatParam("u_maskAlpha2", 0.0F));
      return;
    }
    addParam(new UniformParam.FloatParam("u_maskAlpha1", 1.0F));
    addParam(new UniformParam.FloatParam("u_maskAlpha2", 0.0F));
  }
  
  public void updateVideoSize(int paramInt1, int paramInt2, double paramDouble)
  {
    super.updateVideoSize(paramInt1, paramInt2, paramDouble);
    updateGLResources();
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.tim\classes12.jar
 * Qualified Name:     com.tencent.ttpic.filter.FaceLusterFilter
 * JD-Core Version:    0.7.0.1
 */