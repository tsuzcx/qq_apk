package com.tencent.ttpic.openapi.filter.stylizefilter;

import com.tencent.aekit.openrender.UniformParam.TextureParam;
import com.tencent.aekit.openrender.internal.VideoFilterBase;

public class TTColorPencilFilter
  extends VideoFilterBase
{
  private static final String FRAGMENT_SHADER = "precision highp float;\n \n highp vec3 rgb2xyz(highp vec3 c) {\n     highp vec3 tmp;\n     tmp.x = (c.r > 0.04045) ? pow((c.r + 0.055) / 1.055, 2.4) : (c.r / 12.92);\n     tmp.y = (c.g > 0.04045) ? pow((c.g + 0.055) / 1.055, 2.4) : (c.g / 12.92);\n     tmp.z = (c.b > 0.04045) ? pow((c.b + 0.055) / 1.055, 2.4) : (c.b / 12.92);\n     return 100.0 * tmp * mat3(0.4124, 0.3576, 0.1805, 0.2126, 0.7152, 0.0722, 0.0193, 0.1192, 0.9505);\n }\n\n highp vec3 xyz2lab(highp vec3 c) {\n     highp vec3 n = c / vec3(95.047, 100, 108.883);\n     highp vec3 v; v.x = ( n.x > 0.008856 ) ? pow( n.x, 1.0 / 3.0 ) : ( 7.787 * n.x ) + ( 16.0 / 116.0 );\n     v.y = ( n.y > 0.008856 ) ? pow( n.y, 1.0 / 3.0 ) : ( 7.787 * n.y ) + ( 16.0 / 116.0 );\n     v.z = ( n.z > 0.008856 ) ? pow( n.z, 1.0 / 3.0 ) : ( 7.787 * n.z ) + ( 16.0 / 116.0 );\n     return vec3(( 116.0 * v.y ) - 16.0, 500.0 * ( v.x - v.y ), 200.0 * ( v.y - v.z ));\n }\n\n highp vec3 rgb2lab(highp vec3 c) {\n     highp vec3 lab = xyz2lab(rgb2xyz(c));\n     return vec3(lab.x / 100.0, 0.5 + 0.5 * (lab.y / 127.0), 0.5 + 0.5 * (lab.z / 127.0));\n }\n\n highp vec3 lab2xyz(highp vec3 c) {\n     highp float fy = ( c.x + 16.0 ) / 116.0;\n     highp float fx = c.y / 500.0 + fy;\n     highp float fz = fy - c.z / 200.0;\n     return vec3( 95.047 * (( fx > 0.206897 ) ? fx * fx * fx : ( fx - 16.0 / 116.0 ) / 7.787), 100.000 * (( fy > 0.206897 ) ? fy * fy * fy : ( fy - 16.0 / 116.0 ) / 7.787), 108.883 * (( fz > 0.206897 ) ? fz * fz * fz : ( fz - 16.0 / 116.0 ) / 7.787) );\n }\n\n highp vec3 xyz2rgb(highp vec3 c) {\n     highp vec3 v = c / 100.0 * mat3( 3.2406, -1.5372, -0.4986, -0.9689, 1.8758, 0.0415, 0.0557, -0.2040, 1.0570 );\n     highp vec3 r; r.x = ( v.r > 0.0031308 ) ? (( 1.055 * pow( v.r, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.r;\n     r.y = ( v.g > 0.0031308 ) ? (( 1.055 * pow( v.g, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.g; r.z = ( v.b > 0.0031308 ) ? (( 1.055 * pow( v.b, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.b; return r;\n }\n\n highp vec3 lab2rgb(highp vec3 c) {\n     return xyz2rgb(lab2xyz( vec3(100.0 * c.x, 2.0 * 127.0 * (c.y - 0.5), 2.0 * 127.0 * (c.z - 0.5)) ) );\n }\n\n varying highp vec2 textureCoordinate;\n uniform sampler2D inputImageTexture;\n uniform sampler2D inputImageTexture2;\n\n void main() {\n     highp vec3 origin = rgb2lab(texture2D(inputImageTexture, textureCoordinate).xyz);\n     highp vec3 gray = rgb2lab(texture2D(inputImageTexture2, textureCoordinate).xyz);\n    \n     if (gray.x < (240.0 / 255.0))\n     {\n         gray.y = origin.y;\n         gray.z = origin.z;\n     }\n    \n     gl_FragColor = vec4(lab2rgb(gray), 1.0);\n }";
  private static final String VERTEX_SHADER = "attribute vec3 position;\n attribute vec2 inputTextureCoordinate;\n\n varying vec2 textureCoordinate;\n \n void main(void) {\n    gl_Position = vec4(position, 1.0);\n    textureCoordinate = inputTextureCoordinate.xy;\n }";
  
  public TTColorPencilFilter()
  {
    super("attribute vec3 position;\n attribute vec2 inputTextureCoordinate;\n\n varying vec2 textureCoordinate;\n \n void main(void) {\n    gl_Position = vec4(position, 1.0);\n    textureCoordinate = inputTextureCoordinate.xy;\n }", "precision highp float;\n \n highp vec3 rgb2xyz(highp vec3 c) {\n     highp vec3 tmp;\n     tmp.x = (c.r > 0.04045) ? pow((c.r + 0.055) / 1.055, 2.4) : (c.r / 12.92);\n     tmp.y = (c.g > 0.04045) ? pow((c.g + 0.055) / 1.055, 2.4) : (c.g / 12.92);\n     tmp.z = (c.b > 0.04045) ? pow((c.b + 0.055) / 1.055, 2.4) : (c.b / 12.92);\n     return 100.0 * tmp * mat3(0.4124, 0.3576, 0.1805, 0.2126, 0.7152, 0.0722, 0.0193, 0.1192, 0.9505);\n }\n\n highp vec3 xyz2lab(highp vec3 c) {\n     highp vec3 n = c / vec3(95.047, 100, 108.883);\n     highp vec3 v; v.x = ( n.x > 0.008856 ) ? pow( n.x, 1.0 / 3.0 ) : ( 7.787 * n.x ) + ( 16.0 / 116.0 );\n     v.y = ( n.y > 0.008856 ) ? pow( n.y, 1.0 / 3.0 ) : ( 7.787 * n.y ) + ( 16.0 / 116.0 );\n     v.z = ( n.z > 0.008856 ) ? pow( n.z, 1.0 / 3.0 ) : ( 7.787 * n.z ) + ( 16.0 / 116.0 );\n     return vec3(( 116.0 * v.y ) - 16.0, 500.0 * ( v.x - v.y ), 200.0 * ( v.y - v.z ));\n }\n\n highp vec3 rgb2lab(highp vec3 c) {\n     highp vec3 lab = xyz2lab(rgb2xyz(c));\n     return vec3(lab.x / 100.0, 0.5 + 0.5 * (lab.y / 127.0), 0.5 + 0.5 * (lab.z / 127.0));\n }\n\n highp vec3 lab2xyz(highp vec3 c) {\n     highp float fy = ( c.x + 16.0 ) / 116.0;\n     highp float fx = c.y / 500.0 + fy;\n     highp float fz = fy - c.z / 200.0;\n     return vec3( 95.047 * (( fx > 0.206897 ) ? fx * fx * fx : ( fx - 16.0 / 116.0 ) / 7.787), 100.000 * (( fy > 0.206897 ) ? fy * fy * fy : ( fy - 16.0 / 116.0 ) / 7.787), 108.883 * (( fz > 0.206897 ) ? fz * fz * fz : ( fz - 16.0 / 116.0 ) / 7.787) );\n }\n\n highp vec3 xyz2rgb(highp vec3 c) {\n     highp vec3 v = c / 100.0 * mat3( 3.2406, -1.5372, -0.4986, -0.9689, 1.8758, 0.0415, 0.0557, -0.2040, 1.0570 );\n     highp vec3 r; r.x = ( v.r > 0.0031308 ) ? (( 1.055 * pow( v.r, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.r;\n     r.y = ( v.g > 0.0031308 ) ? (( 1.055 * pow( v.g, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.g; r.z = ( v.b > 0.0031308 ) ? (( 1.055 * pow( v.b, ( 1.0 / 2.4 ))) - 0.055 ) : 12.92 * v.b; return r;\n }\n\n highp vec3 lab2rgb(highp vec3 c) {\n     return xyz2rgb(lab2xyz( vec3(100.0 * c.x, 2.0 * 127.0 * (c.y - 0.5), 2.0 * 127.0 * (c.z - 0.5)) ) );\n }\n\n varying highp vec2 textureCoordinate;\n uniform sampler2D inputImageTexture;\n uniform sampler2D inputImageTexture2;\n\n void main() {\n     highp vec3 origin = rgb2lab(texture2D(inputImageTexture, textureCoordinate).xyz);\n     highp vec3 gray = rgb2lab(texture2D(inputImageTexture2, textureCoordinate).xyz);\n    \n     if (gray.x < (240.0 / 255.0))\n     {\n         gray.y = origin.y;\n         gray.z = origin.z;\n     }\n    \n     gl_FragColor = vec4(lab2rgb(gray), 1.0);\n }");
    setTexture2(0);
  }
  
  public void setTexture2(int paramInt)
  {
    addParam(new UniformParam.TextureParam("inputImageTexture2", paramInt, 33986));
  }
}


/* Location:           L:\local\mybackup\temp\qq_apk\com.tencent.tim\classes12.jar
 * Qualified Name:     com.tencent.ttpic.openapi.filter.stylizefilter.TTColorPencilFilter
 * JD-Core Version:    0.7.0.1
 */